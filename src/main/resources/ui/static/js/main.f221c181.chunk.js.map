{"version":3,"sources":["core/util/Settings.js","core/actions/main/App.js","core/reducers/main/App.js","core/actions/main/Service.js","core/reducers/main/MainPage.js","core/util/Api.js","core/util/HATEOAS.js","core/resources/Branch.js","core/util/Sort.js","core/util/Timestamp.js","core/util/Vizual.js","core/resources/Project.js","core/util/Error.js","core/actions/project/Project.js","core/resources/Dataset.js","core/resources/Workflow.js","core/resources/Outputs.js","core/util/App.js","core/actions/project/Branch.js","core/reducers/project/BranchPage.js","core/resources/Artifact.js","core/resources/Notebook.js","core/actions/project/Notebook.js","core/reducers/project/SpreadsheetPage.js","core/resources/Annotation.js","core/actions/project/Spreadsheet.js","core/reducers/project/DatasetCaveatsPage.js","core/reducers/project/NotebookPage.js","core/actions/project/ProjectListing.js","core/reducers/project/ProjectListing.js","core/reducers/project/ProjectPage.js","core/resources/Engine.js","core/reducers/main/Service.js","core/reducers/spreadsheet/Spreadsheet.js","core/reducers/index.js","core/components/ContentSpinner.js","core/components/Api.js","core/components/Message.js","core/components/notebook/input/form/TextInput.js","core/components/modals/EditResourceNameModal.js","core/components/Button.js","core/components/modals/DeleteResourceModal.js","core/components/SearchBar.js","core/containers/project/ProjectListing.js","core/actions/chart/Chart.js","core/components/menu/BranchMenuDropdown.js","core/components/menu/ChartMenuDropdown.js","core/components/menu/DatasetMenuDropdown.js","core/components/menu/DatasetCaveatMenuDropdown.js","core/components/menu/ProjectMenuDropdown.js","core/components/modals/FileUploadModal.js","core/components/menu/SettingsMenuDropdown.js","img/vizier_tiny.svg","core/components/menu/AppMenu.js","core/components/ResourcePage.js","core/containers/main/MainPage.js","core/containers/project/BranchPage.js","core/components/annotation/AnnotationObject.js","core/components/modals/ShareLinkModal.js","core/components/notebook/NotebookStatusHeader.js","core/components/notebook/input/CommandsListing.js","core/components/notebook/input/form/CodeCell.js","core/components/notebook/input/form/TextControl.js","core/components/notebook/input/form/BoolInput.js","core/components/notebook/input/form/ColumnSelector.js","core/components/notebook/input/form/ControlGroup.js","core/components/notebook/input/form/ControlRow.js","core/components/notebook/input/form/DatasetSelector.js","core/components/notebook/input/form/ArtifactSelector.js","core/components/notebook/input/form/FileSelector.js","core/components/notebook/input/form/TextSelector.js","core/components/notebook/input/form/URLSelector.js","core/components/notebook/input/form/ModuleFormControl.js","core/components/ProgressContext.js","core/components/notebook/input/LoadDatasetForm.js","core/components/notebook/input/ModuleInputFormDecorator.js","core/components/notebook/input/ModuleInputForm.js","core/components/notebook/input/form/PythonCell.js","core/components/notebook/input/form/ScalaCell.js","core/components/notebook/input/form/RCell.js","core/components/notebook/input/form/SQLCell.js","core/components/notebook/input/form/MarkdownCell.js","core/components/notebook/input/CellCommandArea.js","core/components/notebook/CellDropDownMenu.js","core/components/plot/Plots.js","core/components/plot/DatasetChart.js","core/components/spreadsheet/grid/GridInput.js","core/components/spreadsheet/grid/GridCell.js","core/components/spreadsheet/menu/RowDropDown.js","core/components/spreadsheet/grid/RowIndexCell.js","core/components/spreadsheet/menu/SpreadsheetDropDown.js","core/components/spreadsheet/SpreadsheetScrollbar.js","core/components/spreadsheet/grid/D3BasedPlot.js","core/components/spreadsheet/grid/VegaLiteBasedPlot.js","core/components/spreadsheet/grid/PlotHeader.js","core/components/spreadsheet/ColumnView.js","core/components/spreadsheet/menu/ColumnDropDown.js","core/components/spreadsheet/grid/HeaderCell.js","core/components/spreadsheet/Headers.js","core/components/spreadsheet/DatasetView.js","core/components/notebook/output/TimestampOutput.js","core/components/notebook/output/CellOutputArea.js","core/components/notebook/NotebookCell.js","core/components/notebook/TableOfContents.js","core/components/notebook/Notebook.js","core/containers/project/NotebookPage.js","core/containers/spreadsheet/Spreadsheet.js","core/containers/project/SpreadsheetPage.js","core/components/project/DatasetReason.js","core/components/project/DatasetCaveat.js","core/containers/project/DatasetCaveatsPage.js","core/components/modals/AuthModal.js","core/containers/main/App.js","index.js","core/components/notebook/output/JavascriptCellOutput.js"],"names":["DEFAULT_FILTERED_COMMANDS","vizual","ADD_FILTERED_COMMAND","COPY_CELL","HIDE_CELLS","NO_OP","REMOVE_FILTERED_COMMAND","REVERSE_ORDER","SET_FILTERED_MODULES","setModuleFilter","filter","type","toggleHideCells","reverseOrder","INITIAL_STATE","userSettings","filteredCommands","cellRowLimit","reversedOrder","hideCommands","clipboard","this","cellDatasetRowLimit","command","commandList","pckg","packageId","modifiedList","found","i","length","id","push","prop","UserSettings","cellRowLimitValue","cell","content","isNewCell","commandSpec","arguments","module","find","c","commands","REQUEST_SERVICE","RECEIVE_SERVICE","SERVICE_ERROR","REQUEST_AUTH","RECEIVE_AUTH","MODAL_AUTH","serviceError","error","requestAuth","authHeader","dispatch","user","JSON","parse","localStorage","getItem","authdata","removeItem","fetchAuthed","url","fetchProps","window","env","API_BASIC_AUTH","authHead","newFetchProps","headers","Object","assign","method","fetch","Promise","resolve","reject","message","checkResponseJsonForReAuth","response","isReadableStream","text","then","jsonObj","err","startsWith","includes","confirm","profile","reauthClient","client","open","data","fetchService","getState","serviceApi","serviceUrl","status","json","defaults","setItem","stringify","name","properties","environment","links","receiveService","catch","homePageContent","projects","createResource","successHandler","errorHandler","signalStartHandler","postResourceData","deleteResource","fetchResource","getProperty","object","key","defaultValue","property","value","body","updateResourceProperty","updStmt","putResourceData","HATEOAS_SELF","HATEOAS_BRANCH_HEAD","HATEOAS_DATASET_DOWNLOAD","HATEOAS_PROJECTS_CREATE","HATEOAS_PROJECTS_IMPORT","HATEOAS_PROJECTS_LIST","HATEOAS_PROJECT_FILE_UPLOAD","HATEOAS_WORKFLOW_CANCEL","HATEOAS_MODULE_APPEND","HATEOAS_MODULE_FREEZE","HATEOAS_MODULE_THAW","HATEOASReferences","getSelf","get","ref","rel","href","console","log","columnId","rowId","offset","limit","projectId","branchId","workflowId","BranchDescriptor","isDefault","sortByName","objects","sort","o1","o2","localeCompare","moment","require","utc2LocalTime","timestamp","tz","guess","format","VIZUAL","VIZUAL_OP","SORT","moveColumn","dataset","column","position","commandId","moveRow","row","ProjectDescriptor","createdAt","lastModifiedAt","defaultBranch","ProjectHandle","branches","branch","modifiedBranchList","br","fromJson","cmdId","modBranches","ErrorObject","title","PROJECT_FETCH_ERROR","RECEIVE_PROJECT","REQUEST_PROJECT","PROJECT_ACTION_ERROR","RECEIVE_PROJECT_RESOURCE","REQUEST_PROJECT_ACTION","UPDATE_PROJECT","UPDATE_RESOURCE","UPDATE_WORKFLOW","fetchProject","resultFunc","getProjectUrl","requestProject","project","projectFetchError","receiveProjectResource","resource","setProject","setBranch","findBranch","updateProject","updateName","projectActionError","requestProjectAction","dismissProjectActionError","DatasetDescriptor","columns","rowCount","DatasetHandle","rows","moduleId","isProfiled","keys","is_profiled","roi","rowAnnotationFlags","index","hasAnnotations","hadAnnotations","annotations","annotatedCells","slice","WorkflowDescriptor","actionIsAppend","action","actionIsCreate","actionIsDelete","actionIsInsert","actionIsReplace","WorkflowHandle","engine","state","readOnly","datasets","modules","tableOfContents","has","cmd","packages","getCommandSpec","CONTENT_CHART","CONTENT_DATASET","CONTENT_ERROR","CONTENT_HTML","CONTENT_MARKDOWN","CONTENT_HIDE","CONTENT_TEXT","CONTENT_JAVASCRIPT","CONTENT_TIMESTAMPS","CONTENT_MULTIPLE","OutputResource","isFetching","isChart","isDataset","isError","isHidden","isHtml","isMarkdown","isText","isTimestamps","isJavascript","isMultiple","OutputChart","OutputDataset","OutputError","OutputHidden","OutputHtml","outputObjects","lines","j","out","OutputJavascript","OutputMarkdown","OutputText","OutputMultiple","outputs","stdoutGrouped","groupBy","map","x","join","OutputTimestamps","startedAt","finishedAt","process","baseHref","projectHref","branchHref","branchHistoryHref","notebookHeadHref","notebookVersionHref","spreadsheetHref","errorListHref","spreadsheetVersionHref","errorListVersionHref","KEY","MOVE","formatBytes","a","b","d","f","Math","floor","parseFloat","pow","toFixed","isNotEmptyString","trim","isNonNegativeInt","test","branchPageUrl","notebookPageUrl","link","spreadsheetPageUrl","datasetId","errorListPageUrl","valueOrDefault","val","RESOURCE_BRANCH","RESOURCE_MAIN_PAGE","RESOURCE_NOTEBOOK","RESOURCE_DATASET_CAVEAT","AppResource","resourceType","isBranch","isMainPage","isNotebook","isDatasetCaveat","BranchResource","ChartResource","DatasetCaveatResource","SpreadsheetResource","UPDATE_BRANCH","RECEIVE_BRANCH_HISTORY","REQUEST_BRANCH","deleteBranch","urlFactory","history","defaultBranchId","getDefaultBranch","requestBranch","fetchBranch","workflows","wf","updateBranch","updBranch","fetchError","ArtifactDescriptor","mime_type","artifact_type","category","objType","INSERT_AFTER","INSERT_BEFORE","getNewCellId","ModuleHandle","ds","artifacts","ts","charts","timestamps","locked","Notebook","workflow","cells","cellCounter","hasActiveCells","NotebookCell","getModuleDefaultOutput","cellId","cellList","newCell","output","modifiedCells","setFetching","modifiedCellId","useDefaultOutputs","size","min","outputResource","outputSelector","isActive","isPending","isRunning","isErrorOrCanceled","isCanceled","stdout","result","RECEIVE_WORKFLOW","REQUEST_WORKFLOW","SET_ACTIVE_NOTEBOOK_CELL","UPDATE_NOTEBOOK","fetchWorkflow","api","getNotebookUrl","workflowFetchError","getJson","success","checkModuleStatus","notebook","clearInterval","pollingTimer","updateNotebook","setNotebookCellError","isCellOutputRequest","URLSearchParams","location","search","nb","replaceOutput","showCellChart","isInOutput","chart","setNotebookCellBusy","showCellDataset","getDatasetUrl","activeCell","showCellStdout","StandardOutput","insertNotebookCell","updateNotebookCell","replaceNotebookCell","freezeOrThawNotebookCell","updateNotebookCellWithUpload","modifyUrl","notebookModifier","uploadUrl","fileArg","onProgressUpdate","file","uploadReqData","FormData","append","config","propData","axios","post","getAuthed","onUploadProgress","progressEvent","round","loaded","total","fileid","msg","updateWorkflow","reversed","CellAnnotation","NoAnnotation","IsFetching","FetchError","AnnotationList","items","SUBMIT_UPDATE_REQUEST","REQUEST_CAVEATS","SET_ANNOTATIONS","UPDATE_DATASET_ANNOTATIONS","showSpreadsheet","fetchUrl","dsoffset","showDatasetCaveat","self","submitCaveatRequest","repairDatasetCaveat","reason","repair","acknowledge","annotation","setAnnotations","submitUpdate","moduleIndex","upcmd","submitUpdateRequest","updateBody","update","upds","newModuleIndex","newModuleId","values","col","colName","findIndex","clearAnnotations","fetchAnnotations","params","annoLink","postUpdateRequest","isAnnotated","updateAnnotations","CLEAR_PROJECT_ACTION_ERROR","REQUEST_PROJECTS","RECEIVE_PROJECTS","SET_PROJECT_CREATE_ERROR","SET_PROJECT_DELETE_ERROR","SET_PROJECTS_FETCH_ERROR","createProject","projectName","requestProjects","fetchProjects","projectCreateError","deleteProject","projectDeleteError","receiveProjects","projectsFetchError","uploadProject","projectsUploadError","DEFAULT_FETCH_MESSAGE","actionError","fetchMessage","DT_BOOL","DT_CODE","DT_COLUMN_ID","DT_DATASET_ID","DT_DECIMAL","DT_FILE_ID","DT_INT","DT_LIST","DT_RECORD","DT_ROW_ID","DT_STRING","CommandDeclaration","obj","description","suggest","parameters","nestCommandParameters","codeParameter","p","datatype","fileParameter","PackageDeclaration","elements","PackageRegistry","formValuesToRequestData","serviceProperties","errors","para","recordResult","forEach","required","r","rowResult","dt","parseInt","validateArgument","parent","resetColumnIds","parameterSpecs","toFormValues","moduleArgs","arg","recordVal","opt","filename","paraSpec","maxFileSize","isNaN","isFetchig","refetch","isUpdating","rootReducer","combineReducers","app","addCommandToHiddenList","copyCell","removeCommandFromHiddenList","setFilter","branchPage","mainPage","welcome","notebookPage","fromWorkflow","spreadsheetPage","datasetErrorsPage","projectListing","projectPage","backend","showModal","spreadsheet","router","routerReducer","ContentSpinner","props","cssClass","loaderSize","className","Loader","inline","active","React","Component","ApiPolling","interval","onFetch","setInterval","timer","onCancel","Button","negative","onClick","ConnectionInfo","target","ErrorMessage","onDismiss","Message","icon","header","charAt","toUpperCase","ErrorListMessage","list","is404","NotFoundMessage","floating","TextInput","onKeyDown","onChange","Input","autoFocus","EditResourceNameModal","handleCancel","setState","handleChange","event","handleKeyDown","keyCode","handleSubmit","isValid","onSubmit","prompt","inputComponent","validName","Tag","inputProps","ic","Modal","Header","Content","Actions","primary","labelPosition","disabled","IconButton","CloseButton","LargeMessageButton","css","caption","captionIcon","mainMessage","captionMessage","Divider","horizontal","Icon","style","margin","TextButton","linkCss","DeleteResourceModal","basic","color","inverted","defaultProps","SearchBar","addTitleFieldToProjects","projectsClone","handleSearchChange","e","isLoading","setTimeout","initialState","filterProjectListing","re","RegExp","_","escapeRegExp","results","align","aligned","Search","loading","onSearchChange","ProjectListing","clearActionError","confirmDeleteProject","hideModal","handleShowProjectPage","filteredProjects","showDeleteProjectModal","tabHead","Table","Row","HeaderCell","pj","Cell","noResults","modal","projectActionErrorMessage","searchBar","singleLine","Body","withRouter","connect","showChartView","BranchMenuDropdown","handleCreateBranch","onCreateBranch","isMostRecent","onDelete","onEdit","onGetMostRecent","onSelect","onShowHistory","onCancelExec","selectedBranch","branchItems","Dropdown","iconName","Item","item","Menu","ChartMenuDropdown","handleSelect","onClickHandler","hasSelectableItems","menuItems","DatasetMenuDropdown","DatasetCaveatMenuDropdown","ProjectMenuDropdown","handleExportProject","onCreate","onImport","FileUploadModal","files","validFile","positive","SettingsMenuDropdown","onHideCells","onReverse","onSetFilter","showNotebookReversed","hideFilteredCommands","MODAL_CREATE_PROJECT","MODAL_IMPORT_PROJECT","MODAL_DELETE_BRANCH","MODAL_DELETE_PROJECT","MODAL_EDIT_BRANCH_NAME","MODAL_EDIT_PROJECT_NAME","AppMenu","handleDeleteCurrentBranch","onDeleteBranch","handleDeleteProject","onDeleteProject","showCreateProjecthModal","showImportProjecthModal","showDeleteBranchModal","showEditBranchNameModal","showEditProjectNameModal","submitUpdateBranchName","onEditBranch","submitUpdateProjectName","onEditProject","switchToBranchHead","onShowNotebook","onCreateProject","onImportProject","onGoHome","onShowChart","onShowDataset","onShowDatasetCaveat","onShowProject","onSwitchBranch","projectList","Image","src","logo","isMostRecentEnabled","Array","from","Map","flatMap","menuBar","fixed","optionalModalOrMessage","ResourcePage","dismissResourceError","handleCreateProject","handleImportProject","handleGoHome","handleSetFilter","handleShowBranch","handleShowProject","handleToggleHideCells","handleToggleNotebookReverse","loadChartView","loadDataset","loadDatasetCaveat","datasetAnnoUrl","loadDatasetToError","fetch_url","args","rowidarg","loadDatasetRepair","submitEditBranch","submitEditProject","contentCss","document","optionalError","pageContent","dimmer","headerContent","contentCssClass","Grid","Column","MainPage","showCreateProjectModal","headline","listingContent","BranchPage","handleDeleteBranch","handleShowWorkflow","isHead","handleSwitchBranch","match","project_id","branch_id","prevProps","prevState","snapshot","pathname","AnnotationObject","handleDelete","selectedAnnotation","handleClose","onDiscard","handleSelectAnnotation","handleSelectKey","anno","cssSuffix","annoIcon","List","relaxed","Description","inputForm","fluid","label","options","placeholder","ShareLinkModal","copySuccess","copyToClipboard","textInput","select","execCommand","onClose","copySupport","Label","NotebookStatusHeader","closeModal","openModal","extraContent","isAuth","API_ADV_AUTH","protocol","host","CommandsListing","arr","reduce","cat","apiEngine","onPaste","gridColumns","columnOrg","toList","groupedPackages","listItems","packageCategory","catPackages","as","width","Segment","divided","CodeCell","editor","cursorp","getCursor","to","origin","newLines","newLineCount","lastLineLength","newLine","line","newCh","ch","handleCursorActivity","cursorPos","onCursor","tabReplace","cm","spaces","getOption","replaceSelection","onClickInactiveCodeCell","onFocus","div","getElementById","height","lineHeightInPx","offsetHeight","chWidthInPx","transCY","nativeEvent","layerY","transCX","layerX","lineNo","lineSkew","sticky","xRel","cursorPosition","isActiveCell","language","mode","codeEditor","cursor","autofocus","lineNumbers","indentUnit","dragDrop","extraKeys","Tab","onBeforeChange","TextControl","strValue","toString","Form","BoolInput","checked","Checkbox","undefined","COLUMN_2_LETTER","temp","letter","String","fromCharCode","ColumnSelector","isRequired","selection","scrolling","ControlGroup","handleAdd","childId","childValue","controlSpec","formValue","newRow","blankRow","addTuple","rowIdx","handleMoveDown","handleMoveUp","selectedDataset","formLabels","child","t","tuple","rowControls","lastRowControls","lastRow","ControlRow","formControls","DatasetSelector","ctrlValue","ArtifactSelector","artifactType","artifact","FileSelector","clearSourceFile","handleFileDrop","uploadInfo","onDrop","multiple","TextSelector","entry","entryKey","URLSelector","useState","downloadUrl","setDownloadUrl","uploadFromUrl","iconPosition","onBlur","ModuleFormControl","ProgressContext","createContext","moduleProgress","Consumer","LoadDatasetForm","selectedCommand","localSourceState","setLocalSourceState","remoteSourceState","setRemoteSourceState","activeIndexValue","setActiveIndex","useEffect","handleValueChange","panes","menuItem","render","Pane","tabState","isUrlPane","progress","useContext","percent","autoSuccess","indicating","activeIndex","onTabChange","LoadFormPane","components","showingAdvancedOptions","setShowingAdvancedOptions","toggleAdvanced","cssAdvancedOption","hidden","Fragment","ModuleInputFormDecorator","cssTable","undecorated","ModuleInputForm","getSelectedDataset","ADD_ANNOTATION","CREATE_DATASET","DELETE_ANNOTATION","DELETE_COLUMN","DELETE_DATASET","DELETE_ROW","GET_DATASET","GET_DATASET_FRAME","INSERT_COLUMN","INSERT_ROW","NEW_DATASET_OBJECT","OUTPUT_ANNOTATIONS","OUTPUT_COLUMN_NAMES","OUTPUT_CELL_VALUES","OUTPUT_D3_PLOT","OUTPUT_BOKEH_PLOT","OUTPUT_MAP","EXPORT_MODULE","RENAME_DATASET","UPDATE_CELL_VALUE","UPDATE_ANNOTATION","UPDATE_DATASET","CodeSnippetsSelector","WITH_DATASET","ScalaCodeSnippetsSelector","RCodeSnippetsSelector","SELECT_TABLE","JOIN_TABLES","UNION_TABLES","DATASET","SQLCodeSnippetsSelector","secondaryDatasetValue","primaryDatasetValue","handleSecondaryDatasetChange","handlePrimaryDatasetChange","dsselector","TABLE","MarkdownCodeSnippetsSelector","CellCommandArea","handleActivateCell","onSelectCell","handleAppendCode","codeEditorProps","formValues","paraCode","editorValue","indent","script","split","refLine","substring","splice","handleFormValueChange","handleToggleSnippetSelector","modifiedValues","modifiedEditorProps","upstreamFormValues","handleBulkFormValueChange","handleCursorChange","handleDismiss","snippetSelectorVisible","handleDismissCommandsListing","onResetRecommendations","showCommandsListing","handleDismissErrors","handlePasteCommand","handleSelectCommand","handleShowCommandsListing","handleSubmitForm","onUpdateProgress","req","hasErrors","submitted","alert","handleF5Press","preventDefault","errorMessage","mainContent","additionalParams","codeSnippetButton","codeSnippetPanel","lockedCell","outputDataset","dstext","editing","buttonTitle","errorCss","wrappedContent","handlers","keyMap","runCell","dismiss","catchF5","buttons","moduleArguments","formattedModuleArguments","CellDropDownMenu","handleInsertBefore","onInsertCell","handleInsertAfter","cellNumber","isNewNext","isNewPrevious","onAddFilteredCommand","onCopyCell","onDeleteCell","onFreezeCell","onFreezeOneCell","onThawCell","onThawOneCell","dropdownItems","branchRange","cellStatusIcon","Plots","handleResize","elem","ReactDOM","findDOMNode","offsetWidth","handleSelectChart","handleToggleGrouped","selectedReCharts","nameChart","data_temp","grouped","labels","selectedReChart","yAxisName","data_","GridList","cellHeight","gridList_cellHeight","cols","gridList_height","overflowY","gridLis_overflowY","caveatDotTemplate","normalPoint","cx","cy","payload","dataKey","y","fill","viewBox","dy","fontSize","caveatDot","caveatLabels","idx","stackId","connectNulls","stroke","listColors","fillOpacity","top","bottom","left","right","strokeDasharray","verticalAlign","caveats","dot","stroke-width","strokeWidth","dataScatterChart","dataTemp","instanceSP","indexOf","nameKey","innerRadius","outerRadius","dataRadarChart","instanceRC","indexRC","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","barSize","minAngle","background","clockWise","iconSize","layout","wrapperStyle","lineHeight","ratio","chartType","series","colorScale","scaleOrdinal","domain","range","addEventListener","xAxis","global_data","columnsNames","data_i","nameSerie","sort_values","identifier","fetchData","groupedCheckbox","CaveatLabel","PureComponent","gridList_width","colorText","DatasetChart","generatePDF","plotName","input","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","orientation","unit","addImage","save","CTRL_ID","GridInput","cellValue","onMove","onUpdate","ctrlKey","shiftKey","setFocus","isNull","el","focus","setSelectionRange","GridCell","handleClick","columnIndex","rowIndex","handleMove","direction","handleFetchAnnotations","onFetchAnnotations","cellCss","RowDropDown","deleteRow","onAction","insertRowAbove","insertRowBelow","RowIndexCell","handleMoveDropBefore","dropData","dropTargetData","onMoveAction","dropTargetDataValue","currentTarget","attributes","handleMoveDropAfter","isSpreadsheet","dropdown","dropTargetType","dropTargetBefore","dropTargetAfter","types","SpreadsheetDropDown","handleCopy","textField","createElement","innerText","appendChild","remove","handleDownload","downloadLimit","handleEditSpreadsheet","onEditSpreadsheet","onRecommendAction","downloadDropdown","Popup","trigger","on","hoverable","centered","GridColumn","textAlign","ScrollButton","enabled","SpreadsheetScrollbar","handleNavigateFirstPage","onNavigate","handleNavigateLastPage","maxValue","handleNavigateNextPage","handleNavigateNextRow","handleNavigatePreviousPage","max","handleNavigatePreviousRow","cellLimit","m","hasPrevious","hasNext","scrollbar","Centered","styled","D3BasedPlot","profiledData","isLoadingPlot","dataPlot","getEncoding","typePlot","yContent","field","bin","binned","x2","tooltip","utc","order","VegaLiteBasedPlot","isTherePlotData","plot","display","VegaLite","spec","axis","domainColor","axisX","ticks","encoding","mark","PlotHeader","profilerType","ColumnView","cidx","dataPlot_","backgroundColor","borderColor","borderRadius","overflow","listStyle","columnCount","columnGap","distinctValueCount","num_distinct_values","count","nullCount","mean","stdDev","sum","maxHeight","minHeight","ColumnDropDown","deleteColumn","insertColumnLeft","insertColumnRight","sortAZ","sortZA","isEditing","columnName","wrapperComponent","Headers","DatasetView","handleSelectCell","updateTypeView","handleRequestProfiler","typeView","toastr","positionClass","hideDuration","timeOut","contentHeader","summaryPlot","ridx","returnContent","Group","floated","marginTop","pointing","getDerivedStateFromProps","TimestampOutput","time","CellOutputArea","activeTab","resourceName","hide","handleDiscardAnnotation","handleOutputDismiss","onOutputSelect","handleConsoleDownload","element","getConsoleOutputs","Blob","URL","createObjectURL","download","click","handleItemClick","handleCopyEmbedClick","code","innerHTML","removeChild","handleCopyURLClick","renders","hasOwnProperty","Response","createReactClass","dangerouslySetInnerHTML","__html","plugins","gfm","source","getDatasetView","getChartView","JavascriptCellOutput","html","deps","js_deps","onNavigateDataset","TypeError","maxDownloadRowLimit","getOutputContent","finishedType","stderr","errorOut","outputContent","onCheckStatus","cancelButton","datasetList","chartList","consoleItems","v","consoleList","unshift","menu","indeterminate","nextProps","newOutput","toLowerCase","handleUpdateProgress","handleAddFilteredCommand","handleCopyCell","handleDatasetNavigate","onDatasetNavigate","handleDeleteCell","handleInsertCell","handleRemoveFilteredCommand","onRemoveFilteredCommand","handleFreezeCell","handleFreezeOneCell","handleThawCell","handleThawOneCell","handleRecommendAction","onDismissCell","onSubmitCell","cellIndex","cellMenu","outputArea","cmdSpec","isFiltered","errorcss","errorIcon","isNewNextFlag","isNewPreviousFlag","commandText","cssState","isFrozen","Provider","TableOfContents","toggleState","contents","tocElements","class","linkToIdx","activityClass","handleAppendCell","isEmpty","lastCell","handleResetRecommendations","activeNotebookCell","onSelectNotebookCell","notebookCells","moduleCount","hasActiveCell","onCancelCallback","submitHandler","isArray","appendCellButton","reverse","NotebookPage","addFilteredCommand","handleCancelWorkflowExec","cancelWorkflowExecution","handleCheckWorkflowStatus","resultBranch","addBranch","createBranch","hideCreateBranchModal","deleteNotebookCell","getLatestNotebook","updateCellDatasetProperties","handleDismissCell","dismissChangesForCell","dismissCellChanges","handleFetchDatasetCellAnnotations","dismissAnnotationModal","editCell","createtNotebookCell","removeFilteredCommand","handleSelectOutput","getDatasetForModule","hideCellOutput","showCellTimestamps","handleSelectActiveCell","selectNotebookCell","handleShowBranchHead","handleSubmitCell","modalOpen","showModuleSpreadsheet","showCreateBranchModal","modalTitle","queryCommandSupported","workflow_id","onChangeGrouping","handleChangeGrouping","notebookFooter","annotationsObject","cellOutput","ccell","Spreadsheet","appendModule","reqData","toggleNotebookCell","upload","clearActiveCell","submitPendingUpdate","activeColumnId","activeRowId","activeColumnIndex","activeRowIndex","originalCellValue","updatedCellValue","deleteUserAnnotation","annoId","deleteAnnotations","dismissModal","modalValue","modalResult","handleCellUpdate","handleMoveCell","minRowIndex","maxRowIndex","colIdx","rowAtIndex","abs","handleMoveHeader","handleNavigate","dataseti","handleSubmitModal","submitVizualCommand","insertColumn","handleMoveAction","srcValue","targetValue","handleVizualAction","insertRow","sortOrder","sortDataset","showNotebookCell","handleDisplayRows","handleCheckStatus","notebookRunning","showAnnotationModal","handleMoveColumnModalInputChange","handleMoveRowModalInputChange","valueValidFunc","modalPrompt","getInsertModuleIndex","imodule","updatingColumnId","updatingRowId","updatingValue","updateCell","renameColumn","submitUserAnnotation","new_value","row_id","updateAnnotation","activeDataset","newProps","currentDataset","newDataset","isBlocked","onDragStart","handleDragStart","showAnnoHandler","notebookCell","annoButtonCss","notebookCellButton","cellIcon","apiPolling","compact","float","Dimmer","Dimmable","dimmed","newState","opError","SpreadsheetPage","DatasetReason","handleExpand","expanded","handleGotoError","onGotoError","buildReasonElement","elkey","elvalue","entries","ek","ev","family","confirmed","reasonElements","gotoErrorIcon","DatasetCaveat","onRepairError","ackedErrors","errs","DatasetCaveatsPage","AuthModal","handleChangePasswd","passwd","btoa","App","showAuthModal","authComplete","APP_TITLE","connection","refetchService","Switch","Route","exact","path","component","modals","createHistory","middleware","thunk","routerMiddleware","owaScript","ANALYTICS_URL","owatag","owa_cmds","_owa","async","_owa_s","getElementsByTagName","parentNode","insertBefore","owa_baseUrl","ANALYTICS_SITE_ID","injectOWA","composedEnhancers","compose","applyMiddleware","store","createStore","reducer","API_URL","neededDeps","eval","dep","lastTrigger","onload"],"mappings":"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","file":"static/js/main.f221c181.chunk.js","sourcesContent":["/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Default number of rows that are fetched when displaying a dataset in the\n// notebook cell output area.\nconst DEFAULT_CELL_DATASET_ROW_LIMIT = 10;\n// By now the commands that are filtered by default are hard-coded.\nexport const DEFAULT_FILTERED_COMMANDS = {\n    vizual: [\n        'deleteColumn',\n        'deleteRow',\n        'insertColumn',\n        'insertRow',\n        'moveColumn',\n        'moveRow',\n        'renameColumn',\n        'updateCell'\n    ]\n}\n// By default filtered commands are collapsed and not hidden\nconst DEFAULT_HIDE_FILTERED_COMMANDS = false;\n// Default order of cells in a notebook\nconst DEFAULT_SHOW_NOTEBOOK_REVERESED = false;\n\n\n/**\n * Object to capture all user preferences and their default values.\n */\nexport class UserSettings {\n    constructor(filteredCommands, cellRowLimit, reversedOrder, hideCommands, clipboard) {\n        this.filteredCommands = (filteredCommands != null) ? filteredCommands : DEFAULT_FILTERED_COMMANDS;\n        this.cellDatasetRowLimit = (cellRowLimit != null) ? cellRowLimit : DEFAULT_CELL_DATASET_ROW_LIMIT;\n        this.reversedOrder = (reversedOrder != null) ? reversedOrder : DEFAULT_SHOW_NOTEBOOK_REVERESED;\n        this.hideCommands = (hideCommands != null) ? hideCommands : DEFAULT_HIDE_FILTERED_COMMANDS;\n        this.clipboard = clipboard;\n    }\n    /**\n     * Add the given command to the list of commands that are selected to\n     * be hidden by the user. Returns a new user settinsg object.\n     */\n    addCommandToHiddenList(command) {\n        const commandList = {};\n        const pckg = this.filteredCommands[command.packageId];\n        if (pckg != null) {\n            const modifiedList = [];\n            let found = false;\n            for (let i = 0; i < pckg.length; i++) {\n                if (pckg[i] !== command.id) {\n                    modifiedList.push(pckg[i]);\n                } else {\n                    found = true;\n                }\n            }\n            if (!found) {\n                modifiedList.push(command.id);\n            }\n            commandList[command.packageId] = modifiedList;\n        } else {\n            commandList[command.packageId] = [command.id];\n        }\n        for (let prop in this.filteredCommands) {\n            if (prop !== command.packageId) {\n                commandList[prop] = this.filteredCommands[prop];\n            }\n        }\n        return new UserSettings(\n            commandList,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Number of rows that are fetched when a dataset is displayed in the output\n     * area of a notebook cell.\n     */\n    cellRowLimit() {\n        return this.cellDatasetRowLimit;\n    }\n    /**\n     * Copy the module specification and command arguments of the given cell to\n     * the clipboard. Returns a modified object.\n     */\n    copyCell(cell) {\n        let content = null;\n        if (!cell.isNewCell()) {\n            content = {\n                commandSpec: cell.commandSpec,\n                arguments: cell.module.command.arguments\n            };\n        }\n        return new UserSettings(\n            this.filteredCommands,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands,\n            content\n        );\n    }\n    /**\n     * Test if a given command is included in the list of filtered commands.\n     */\n    isFiltered(command) {\n        const pckg = this.filteredCommands[command.packageId];\n        if (pckg != null) {\n            if (pckg.find((c) => (c === command.id))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Flag indicating if notebook cells that have filtered commands are hidden\n     * or just collapsed.\n     */\n    hideFilteredCommands() {\n        return this.hideCommands;\n    }\n    /**\n     * Toggle the reverse notebook cell order. Returns a modified user settings\n     * object.\n     */\n    reverseOrder() {\n        return new UserSettings(\n            this.filteredCommands,\n            this.cellRowLimitValue,\n            !this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Remove the given command from the list of commands that are selected to\n     * be hidden by the user. Returns a new user settinsg object.\n     */\n    removeCommandFromHiddenList(command) {\n        const commandList = {};\n        for (let prop in this.filteredCommands) {\n            if (prop === command.packageId) {\n                const commands = this.filteredCommands[prop];\n                const modifiedList = [];\n                for (let i = 0; i < commands.length; i++) {\n                    if (commands[i] !== command.id) {\n                        modifiedList.push(commands[i]);\n                    }\n                }\n                if (modifiedList.length > 0) {\n                    commandList[prop] = modifiedList;\n                }\n            } else {\n                commandList[prop] = this.filteredCommands[prop];\n            }\n        }\n        return new UserSettings(\n            commandList,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Set the object that contains the filtered module identifier. Expects an\n     * object where the properties are package identifier and the values are\n     * lists of command identifier. Returns a modified user settings object.\n     */\n    setFilter(filter) {\n        // Eesure that the filter is not null\n        const filteredCommands = (filter != null) ? filter : {};\n        return new UserSettings(\n            filteredCommands,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Flag indicating whether the cells in a notebook should be shown in\n     * reverse order or not.\n     */\n    showNotebookReversed() {\n        return this.reversedOrder;\n    }\n    /**\n     * Toggle the hide filtered commands value. Returns a modified user settings\n     * object.\n     */\n    toggleHideCells() {\n        return new UserSettings(\n            this.filteredCommands,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            !this.hideCommands\n        );\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Add a command to the list of hidden commands\nexport const ADD_FILTERED_COMMAND = 'ADD_FILTERED_COMMAND';\n// Copy a given cell to the clipboard that is contained in the user settings\nexport const COPY_CELL = 'COPY_CELL';\n// Toggle the value of the hide cells property\nexport const HIDE_CELLS= 'HIDE_CELLS';\n// Dummy action when redirecting as result of a received resource\nexport const NO_OP = 'NO_OP';\n// Remove a command from list of filtered commands\nexport const REMOVE_FILTERED_COMMAND = 'REMOVE_FILTERED_COMMAND';\n// Reverse notebook cell order\nexport const REVERSE_ORDER = 'REVERSE_ORDER';\n// Set the object that conatins the filtered module identifier\nexport const SET_FILTERED_MODULES = 'SET_FILTERED_MODULES';\n\n\n/**\n * Add the given command to the list of filtered commands in the user\n * settings.\n */\nexport const addFilteredCommand = (command) => ({\n    type: ADD_FILTERED_COMMAND,\n    command\n})\n\n\n/**\n * Copy the given cell to the clipboard that is contained in the user settings.\n */\nexport const copyCell = (cell) => ({\n    type: COPY_CELL,\n    cell\n})\n\n/**\n * Set the object that contains the filtered module identifier. Expects an\n * object where the properties are package identifier and the values are\n * lists of command identifier.\n */\nexport const setModuleFilter = (filter) => ({\n    type: SET_FILTERED_MODULES,\n    filter\n})\n\n/**\n * Toggle the value of the hide filtered cells property in the user settings.\n */\nexport const toggleHideCells = () => ({\n    type: HIDE_CELLS\n});\n\n\n/**\n * Remove the given command from the list of filtered commands in the user\n * settings.\n */\nexport const removeFilteredCommand = (command) => ({\n    type: REMOVE_FILTERED_COMMAND,\n    command\n})\n\n/**\n * Reverse ordering of notebook cells.\n */\nexport const reverseOrder = () => ({\n    type: REVERSE_ORDER\n});\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserSettings } from '../../util/Settings';\nimport { ADD_FILTERED_COMMAND, COPY_CELL, HIDE_CELLS, REMOVE_FILTERED_COMMAND,\n    REVERSE_ORDER, SET_FILTERED_MODULES } from '../../actions/main/App';\n\n/**\n* This application state contains the user preferences object.\n*/\n\nconst INITIAL_STATE = {\n    userSettings: new UserSettings()\n}\n\n\nexport const app = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ADD_FILTERED_COMMAND:\n            return {\n                ...state,\n                userSettings: state.userSettings.addCommandToHiddenList(action.command)\n            };\n        case COPY_CELL:\n            return {\n                ...state,\n                userSettings: state.userSettings.copyCell(action.cell)\n            };\n        case HIDE_CELLS:\n            return {\n                ...state,\n                userSettings: state.userSettings.toggleHideCells()\n            };\n        case REMOVE_FILTERED_COMMAND:\n            return {\n                ...state,\n                userSettings: state.userSettings.removeCommandFromHiddenList(action.command)\n            };\n        case REVERSE_ORDER:\n            return {\n                ...state,\n                userSettings: state.userSettings.reverseOrder()\n            };\n        case SET_FILTERED_MODULES:\n            return {\n                ...state,\n                userSettings: state.userSettings.setFilter(action.filter)\n            };\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport axios from 'axios'\n/**\n * Actions for retrieving the Vizier DB Web Service Descriptor. The service\n * descriptor contains the service name, the list of available workflow\n * execution environments, and a list of HATEOAS references to Web service\n * resources.\n *\n * The service descriptor will be retrieved as the first operation by the Web\n * Application.\n *\n * The service descriptor will be maintained as part of the application state\n * under element 'serviceApi'.\n *\n * It is assumed that the serviceUrl (containing the base Url of the Vizier DB\n * Web Service) has been initialized as path of the App initialization.\n */\nexport const REQUEST_SERVICE = 'REQUEST_SERVICE'\nexport const RECEIVE_SERVICE = 'RECEIVE_SERVICE'\nexport const SERVICE_ERROR = 'SERVICE_ERROR'\nexport const REQUEST_AUTH = 'REQUEST_AUTH'\nexport const RECEIVE_AUTH = 'RECEIVE_AUTH'\n\n//MODAL IDENTIFIERS\nexport const MODAL_AUTH = 'AUTH'\n\n/**\n * Signal start of service descriptor fetching.\n */\nconst requestService = () => ({\n  type: REQUEST_SERVICE\n})\n\n/**\n * Handler for successful retrieval of service descriptor.\n */\nconst receiveService = (json) => {\n    if(json.defaults && json.defaults.profile)\n    \tlocalStorage.setItem('profile', JSON.stringify(json.defaults.profile)); \t\n    return ({\n        type: RECEIVE_SERVICE,\n        name: json.name,\n        properties: json.defaults,\n        environment: json.environment,\n        links: json.links\n    })\n}\n\n/**\n * Error handler for service descriptor retrieval.\n */\nexport const serviceError = (error) => ({\n    type: SERVICE_ERROR,\n    error\n})\n\n/**\n * Signal start of auth request.\n */\nexport const requestAuth = () => ({\n  type: REQUEST_AUTH\n})\n\n/**\n * Handler for successful retrieval of auth.\n */\nexport const receiveAuth = (json) => ({\n  type: RECEIVE_AUTH,\n  authdata: json\n})\n\n/**\n * try to get the auth data saved in local storage.\n */\nexport const authHeader = (dispatch) => {\n    // return authorization header with basic auth credentials\n    let user = JSON.parse(localStorage.getItem('user'));\n    if(!user){\n    \tdispatch(requestAuth())\n    \treturn null;\n    }\n    if (user && user.authdata) {\n        return { 'Authorization': 'Basic ' + user.authdata };\n    } else {\n    \tlocalStorage.removeItem('user')\n    \treturn null;\n    }\n}\n/***\n * use axios get and post methods to resolve promises. This fetcher gives us access to more data fetching features\n * e.g. monitoring onUploadProgress, onDownloadProgress\n */\nexport const getAuthed = (url, fetchProps, config) => (dispatch) => {\n\tif(window.env.API_BASIC_AUTH){\n\t\tconst authHead = authHeader(dispatch);\n\t\tif(authHead){\n\t\t\tlet newFetchProps = fetchProps;\n\t\t\tif(fetchProps && fetchProps.headers){\n\t\t\t\tObject.assign(newFetchProps.headers, authHead);\n\t\t\t}\n\t\t\telse if(fetchProps){\n\t\t\t\tnewFetchProps.headers = authHead;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewFetchProps = {\n\t\t\t\t\tmethod : 'GET',\n\t\t\t\t\theaders: authHead\n\t\t\t\t};\n\t\t\t}\n\t\t\tconfig = {\n\t\t\t\t...config,\n\t\t\t\theaders: newFetchProps.headers\n\t\t\t};\n\t\t\tlet propData = newFetchProps.body ? newFetchProps.body : null;\n\t\t\treturn newFetchProps.method ==='POST' ? axios.post(url, propData, config) : axios.get(url, config)\n\t\t}\n\t\telse return new Promise(function(resolve, reject){\n\t\t\treject({message:\"No saved credentials.  Please enter credentials.\"})\n\t\t})\n\t}\n\telse {\n\t\tconst promise = fetchProps.method ==='POST' ? axios.post(url, fetchProps.body, config) : axios.get(url, config)\n\t\treturn promise.then( (response) => (response))\n\t}\n\n}\n/**\n * try to get the auth data saved in local storage.\n */\nexport const fetchAuthed = (url, fetchProps) => (dispatch) => {\n\tif(window.env.API_BASIC_AUTH){\n\t\tconst authHead = authHeader(dispatch);\n\t\tif(authHead){\n\t\t    let newFetchProps = fetchProps;\n\t\t    if(fetchProps && fetchProps.headers){\n\t\t    \tObject.assign(newFetchProps.headers, authHead);\n\t\t\t}\n\t\t\telse if(fetchProps){\n\t\t\t\tnewFetchProps.headers = authHead;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewFetchProps = {\n\t\t\t\t\tmethod : 'GET',\n\t\t\t\t\theaders: authHead\n\t\t\t\t};\n\t\t\t}\n\t\t    return fetch(url, newFetchProps)\n\t    }\n\t    else return new Promise(function(resolve, reject){\n\t    \t reject({message:\"No saved credentials.  Please enter credentials.\"})\n\t    \t})\n\t}\n    else {\n    \treturn fetch(url, fetchProps)\n    }\n}\n\n/**\n * Checks a fetch response to determine if an authorization timeout has occured \n * and since fetch can not handle redirects we may need to trigger browser GET\n * to perform the renewal.  Right now this is specifically for ub shibboleth; \n * we can generalize it more in the future.  \n *\n */\nexport const checkResponseJsonForReAuth = (response, isReadableStream) => {\n\tif(isReadableStream!=null && !isReadableStream){\n\t\treturn Promise.resolve(response.data)\n\t}else{\n\t\treturn response.text().then(text => {\n\t\t\ttry {\n        // console.log(\"REAUTH: \" + text)\n\t\t\t\tconst jsonObj = JSON.parse(text)\n\t\t\t\treturn Promise.resolve(jsonObj)\n\t\t\t} catch(err) {\n\t\t\t\tif(text && text.startsWith(\"<!DOCTYPE html>\") && text.includes(\"SAMLRequest\")){\n\t\t\t\t\tconst r = window.confirm(\"Your session has timed out.  Do you want to renew your session?\");\n\t\t\t\t\tif (r === true) {\n\t\t\t\t\t\t//window.location.reload(false);\n\t\t\t\t\t\t//stored from serviceApi.properties.profile\n\t\t\t\t\t\tconst profile = JSON.parse(localStorage.getItem('profile'));\n\t\t\t\t\t\tlet reauthClient = \"default\";\n\t\t\t\t\t\tif (profile && profile.client) {\n\t\t\t\t\t\t\treauthClient = profile.client\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.open(process.env.PUBLIC_URL + \"/reauth?client=\" + reauthClient);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.resolve(JSON.parse(\"{}\"))\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve(JSON.parse(\"{}\"))\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Action to retrieve API service descriptor. Expects that the Web Service Url\n * has been set during App initialization.\n *\n */\nexport const fetchService = () => (dispatch, getState) =>  {\n    // Get API Url from the current state. It is expected that the Url has been\n    // set as part of the App initialization\n    const url = getState().serviceApi.serviceUrl;\n    // Signal start to service descriptor retrieval\n    dispatch(requestService())\n    return fetchAuthed(url)(dispatch)\n    // Check the response. Assume that eveything is all right if status\n    // code below 400\n    .then(function(response) {\n        if (response.status >= 200 && response.status < 400) {\n            // SUCCESS: Pass the JSON result to the respective callback\n            // handler\n            checkResponseJsonForReAuth(response).then(json => dispatch(receiveService(json)));\n        } else if(response.status === 401) {\n        \t// UNAUTHORIZED: re-request auth\n        \tdispatch(requestAuth())\n        } else {\n            // ERROR: The API is expected to return a JSON object in case\n            // of an error that contains an error message\n            checkResponseJsonForReAuth(response).then(json => dispatch(serviceError(json.message)));\n        }\n    })\n    .catch(err => dispatch(serviceError(err.message)))\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RECEIVE_SERVICE } from '../../actions/main/Service'\n\n\n/**\n * STATE:\n *\n * homePageContent: Welcome message {title: ..., description: ...} provided by\n *    the API.\n * projects: Project listing returned by the API.\n */\n\nconst INITIAL_STATE = {\n    homePageContent: null,\n    projects: []\n}\n\n\n/**\n* Reducer for actions that manipulate the global state of the App home page.\n*/\nexport const mainPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case RECEIVE_SERVICE:\n            return {\n                ...state,\n                homePageContent: action.welcome\n            }\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../actions/main/Service';\n\n\n/**\n * Collection of functions to interact with the Vizier DB Web service API.\n */\n\n\n/**\n * Generic function to create a new resource at the Web service via HTTP POST\n * request. Expects at least two callback functions (successHandler and\n * errorHandler) that will be called respectively when the resource was\n * retrieved successfully or in case of an error. The optional\n * signalStartHandler will be called before the request is being made.\n */\nexport const createResource = (url, data, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    dispatch(postResourceData(url, data, successHandler, errorHandler, signalStartHandler))\n}\n\n\n/**\n * Generic function to delete a resource from the Web service. Expects at\n * least two callback functions (successHandler and errorHandler) that will be\n * called respectively when the resource was deleted successfully or in case\n * of an error. The optional signalStartHandler will be called before the\n * attempt to fetch the resource is being made.\n *\n * There are no arguments that are being passed to the success handler because\n * Vizier DB API DELETE requests to not return any content.\n *\n * If the resource does not exists no error will be displayed. Instead, the\n * success handler is called.\n */\nexport const deleteResource = (url, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(url, {method: 'DELETE'})(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code is 204\n        .then(function(response) {\n            if (response.status === 204) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                dispatch(successHandler());\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth());\n            } else if (response.status === 404) {\n                dispatch(errorHandler('Resource not found'));\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Generic function to retrieve a resource from the Web service. Expects at\n * least two callback functions (successHandler and errorHandler) that will be\n * called respectively when the resource was retrieved successfully or in case\n * of an error. The optional signalStartHandler will be called before the\n * attempt to fetch the resource is being made.\n */\nexport const fetchResource = (url, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(url)(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(successHandler(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Get the value for a resource property with given key. If no property with\n * given key exists the defaultValue will be returned.\n */\nexport const getProperty = (object, key, defaultValue) => {\n    // Get dictionary value for key 'name'\n    let property = object.properties.find(prop => (prop.key === key));\n    if (property) {\n        return property.value;\n    } else {\n        return defaultValue;\n    }\n};\n\n\n/**\n * Generic function to create or update a resource at the Web service via HTTP\n * POST request. Expects at least two callback functions (successHandler and\n * errorHandler) that will be called respectively when the resource was\n * created or updated successfully or in case of an error. The optional\n * signalStartHandler will be called before the request is being made.\n */\nexport const postResourceData = (url, data, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(\n            url,\n            {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n            }\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(successHandler(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Generic function to update a resource at the Web service via HTTP PUT\n * request. Expects at least two callback functions (successHandler and\n * errorHandler) that will be called respectively when the resource was\n * created or updated successfully or in case of an error. The optional\n * signalStartHandler will be called before the request is being made.\n */\nexport const putResourceData = (dispatch, url, data, successHandler, errorHandler, signalStartHandler) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(\n            url,\n            {\n                method: 'PUT',\n                body: JSON.stringify(data),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n            }\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(successHandler(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Generic function to update a property of a resource at the Web service via\n * HTTP POST request. Expects at least two callback functions (successHandler\n * and errorHandler) that will be called respectively when the resource was\n * updated successfully or in case of an error. The optional signalStartHandler\n * will be called before the request is being made.\n *\n * The property key cannot be null. If the new property value is null, the\n * property will be deleted.\n */\n export const updateResourceProperty = (url, key, value, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    let updStmt = {'key': key}\n    if (value !== null) {\n        updStmt['value'] = value\n    }\n    return putResourceData(dispatch, url, {'properties': [updStmt]}, successHandler, errorHandler, signalStartHandler)\n}\n\n\n/**\n * Update a resource at the Vizier DB Web API by posting a Json object. Expects\n * at least two callback functions (successHandler and errorHandler) that will\n * be called respectively when the resource was updated successfully or in case\n * of an error. The optional signalStartHandler will be called before the\n * request is being made.\n */\nexport const updateResource = (url, data, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    return postResourceData(dispatch, url, data, successHandler, errorHandler, signalStartHandler)\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper classes and constants for HATEOAS references returned as part of\n * API responses for the different API resources.\n */\n\n// General\nexport const HATEOAS_SELF = 'self';\n\n// API\nexport const HATEOAS_API_DOC = 'api.doc';\nexport const HATEOAS_USER_AUTH = 'user.auth';\n\n// Branch\nexport const HATEOAS_BRANCH_HEAD = 'branch.head';\nexport const HATEOAS_BRANCH_UPDATE_PROPERTY = 'branch.update';\n\n// Dataset\nexport const HATEOAS_DATASET_DOWNLOAD = 'dataset.download';\nexport const HATEOAS_DATASET_GET_ANNOTATIONS = 'annotations.get';\n\n// Projects\nexport const HATEOAS_PROJECTS_CREATE = 'project.create';\nexport const HATEOAS_PROJECTS_IMPORT = 'project.import';\nexport const HATEOAS_PROJECTS_DELETE = 'project.delete';\nexport const HATEOAS_PROJECTS_LIST = 'project.list';\nexport const HATEOAS_PROJECT_UPDATE_PROPERTY = 'project.update';\n\n// Project\nexport const HATEOAS_PROJECT_FILE_UPLOAD = 'file.upload';\n\n// Workflow\nexport const HATEOAS_WORKFLOW_CANCEL = 'workflow.cancel';\n\n// Module\nexport const HATEOAS_MODULE_APPEND = 'workflow.append';\nexport const HATEOAS_MODULE_DELETE = 'module.delete';\nexport const HATEOAS_MODULE_INSERT = 'module.insert';\nexport const HATEOAS_MODULE_REPLACE = 'module.replace';\nexport const HATEOAS_MODULE_FREEZE = 'module.freeze';\nexport const HATEOAS_MODULE_FREEZE_ONE = 'module.freeze_one';\nexport const HATEOAS_MODULE_THAW = 'module.thaw';\nexport const HATEOAS_MODULE_THAW_ONE = 'module.thaw_one';\n\n\n/**\n * Maintain a list of HATEOAS references that are given as an array of\n * (rel,href)-pairs.\n *\n * Provides methods to retrieve references for given relationship keys and\n * to test for the existence of objects with particular reference keys in the\n * array.\n */\nexport class HATEOASReferences {\n    /**\n     * Expects an array of HATEOAS reference objects as returned by the API.\n     * Each object has a 'rel' and 'href' property.\n     */\n    constructor(links) {\n        this.links = links;\n    }\n    /**\n     * Get the HTTP reference that is associated with the given relationship\n     * key. The result is null if no reference with the given key exists.\n     */\n    get(key) {\n        const ref = this.links.find((ref) => (ref.rel === key));\n        if (ref != null) {\n            return ref.href;\n        } else {\n            console.log(null())\n            console.log('HATEOAS action '+key+' NOT FOUND IN: '+this.links)\n            return null;\n        }\n    }\n    /**\n     * Get annotations for a dataset cell identified by the column and row\n     * identifier.\n     */\n    getAnnotations(columnId, rowId) {\n        let url = this.get(HATEOAS_DATASET_GET_ANNOTATIONS);\n        url += '?column=' + columnId + '&row=' + rowId;\n        return url;\n    }\n    /**\n     * Get the dataset fetch URL for a given range of rows. This method\n     * it is called on the set of URL's returned for a dataset descriptor\n     */\n    getDatasetUrl(offset, limit, profile=false) {\n        let url = this.get(HATEOAS_SELF);\n        url += '?offset=' + offset + '&limit=' + limit;\n        if(profile){\n            url += '&profile=' + profile;\n        }\n        return url;\n    }\n    /**\n     * Get the Url for a workflow with the given identifier.\n     *\n     * This method will return null if the links list does not contain an entry\n     * for the project listing.\n     */\n    getNotebookUrl(projectId, branchId, workflowId) {\n        let url = this.get(HATEOAS_PROJECTS_LIST);\n        if (url != null) {\n            url += '/' + projectId + '/branches/' + branchId;\n            if (workflowId != null) {\n                url += '/workflows/' + workflowId;\n            } else {\n                url += '/head';\n            }\n            return url;\n        } else {\n            return null;\n        }\n    }\n    /**\n     * Get the Url for a project with the given identifier. The idea is to keep\n     * all resource URLs in one place. At this point we just hard-code the\n     * pattern for project URLs into the method. To be more flexible we could\n     * include URL patterns in the links object as well.\n     *\n     * This method will return null if the links list does not contain an entry\n     * for the project listing.\n     */\n    getProjectUrl(projectId) {\n        const url = this.get(HATEOAS_PROJECTS_LIST);\n        if (url != null) {\n            return url + '/' + projectId;\n        } else {\n            return null;\n        }\n    }\n    /**\n     * Short-cut to get resource self reference.\n     */\n    getSelf = () => (this.get(HATEOAS_SELF));\n    /**\n     * Test if a HATEOAS reference with the given key exists.\n     */\n    has(key) {\n        return (this.links.find((ref) => (ref.rel === key)) != null);\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getProperty } from '../util/Api';\nimport { HATEOASReferences } from '../util/HATEOAS';\n\n\n// -----------------------------------------------------------------------------\n// Classes\n// -----------------------------------------------------------------------------\n\n/**\n * Descriptor for a project branch. Contains the basic information about the\n * branch (i.e., .id, .name, and .links).\n */\nexport class BranchDescriptor {\n    constructor(id, name, isDefault, links) {\n        this.id = id;\n        this.name = name;\n        this.isDefault = isDefault;\n        this.links = links;\n    }\n    /**\n     * Initialize the descriptor from a Json object that is a BranchDescriptor\n     * serialization returned by the Web API.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = getProperty(json, 'name', 'undefined');\n        this.isDefault = json.isDefault;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n    /**\n     * Create a copy of the branch handle with a modified name.\n     */\n    updateName(name) {\n        const { id, isDefault, links } = this;\n        return new BranchDescriptor(id, name, isDefault, links);\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Collection of functions that sort arrays of various objects.\n */\n\n/**\n * Sort elements in a list by their .name property.\n */\nexport const sortByName = (objects) => (\n    objects.sort(function(o1, o2) {return o1.name.localeCompare(o2.name)})\n);\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manipulate timestamps for Vizier-DB resources.\n */\nvar moment = require('moment-timezone');\nexport const utc2LocalTime = (timestamp) => {\n    const localDate = moment.tz(timestamp, \"UTC\");\n    return localDate.tz(moment.tz.guess()).format('DD-MMM-YYYY HH:mm:ss');\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Collection of definitions and helper methods to submit Vizual operstions.\n */\n\n/**\n * Vizual operation identifier\n */\n\nexport const VIZUAL = {\n    DELETE_COLUMN: 'deleteColumn',\n    DELETE_ROW: 'deleteRow',\n    DROP_DATASET: 'dropDataset',\n    INSERT_COLUMN: 'insertColumn',\n    INSERT_ROW: 'insertRow',\n    LOAD: 'load',\n    MOVE_COLUMN: 'moveColumn',\n    MOVE_ROW: 'moveRow',\n    PROJECTION: 'projection',\n    RENAME_COLUMN: 'renameColumn',\n    RENAME_DATASET: 'renameDataset',\n    SORT: 'sortDataset',\n    UPDATE_CELL: 'updateCell'\n}\n\nexport const VIZUAL_OP = 'vizual';\n\n// Sort orders\nexport const SORT = {\n    ASC: 'asc',\n    DESC: 'desc'\n}\n\n\n/**\n * DELETE COLUMN operation request body\n */\nexport const deleteColumn = (dataset, column) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.DELETE_COLUMN,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'column',value:column}\n    ]\n})\n\n\n/**\n * DELETE ROW operation request body\n */\nexport const deleteRow = (dataset, row) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.DELETE_ROW,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'row',value:row}\n    ]\n})\n\n\n/**\n * INSERT COLUMN operation request body\n */\nexport const insertColumn = (dataset, name, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.INSERT_COLUMN,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'name',value:name},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * INSERT ROW operation request body\n */\nexport const insertRow = (dataset, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.INSERT_ROW,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * MOVE COLUMN operation request body\n */\nexport const moveColumn = (dataset, column, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.MOVE_COLUMN,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'column',value:column},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * MOVE ROW operation request body\n */\nexport const moveRow = (dataset, row, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.MOVE_ROW,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'row',value:row},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * RENAME COLUMN operation request body\n */\nexport const renameColumn = (dataset, column, name) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.RENAME_COLUMN,\n    arguments: [\n    \t{id:'dataset',value:dataset},\n        {id:'column',value:column},\n        {id:'name',value:name}\n    ]\n})\n\n\n/**\n * SORT A DATASET based on the values int he given column.\n */\nexport const sortDataset = (dataset, column, sortOrder) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.SORT,\n    arguments: [\n    \t{id:'dataset',value:dataset},\n        {id:'columns',value:[\n            [\n                {id:'columns_column',value:column},\n                {id:'columns_order',value:sortOrder}\n            ]\n        ]}\n    ]\n})\n\n/**\n * UPDATE CELL operation request body\n */\nexport const updateCell = (dataset, column, row, value) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.UPDATE_CELL,\n    arguments: [\n        {id:'dataset',value:dataset},\n        {id:'column',value:column},\n        {id:'row',value:row},\n        {id:'value',value:value}\n    ]\n})\n\nexport const updateAnnotation = (dataset, column, new_value, row_id) => ({\n\tpackageId:'mimir',\n\tcommandId:'comment',\n\targuments: [\n\t\t{id:'dataset',value:dataset.name},\n\t\t{id:'comments',value: [\n\t\t\t\t[\n\t\t\t\t\t{id:'expression',value:dataset.columns[column].id},\n\t\t\t\t\t{id:'comment',value:new_value},\n\t\t\t\t\t{id:'rowid',value:row_id}\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t    {id: \"materializeInput\", value: false}\n\t]\n})\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BranchDescriptor } from './Branch';\nimport { getProperty } from '../util/Api';\nimport { HATEOASReferences } from '../util/HATEOAS';\nimport { sortByName } from '../util/Sort';\nimport { utc2LocalTime } from '../util/Timestamp';\nimport { VIZUAL, VIZUAL_OP } from '../util/Vizual';\n// import { CONTENT_CHART, CONTENT_DATASET, CONTENT_ERROR } from './Outputs';\n\n/**\n * Descriptor for a project in the project listing. Contains the information\n * that is required by the project listing component.\n */\nexport class ProjectDescriptor {\n    fromJson(json) {\n        this.id = json.id;\n        this.name = getProperty(json, 'name', 'undefined');\n        this.createdAt = utc2LocalTime(json.createdAt);\n        this.lastModifiedAt = utc2LocalTime(json.lastModifiedAt);\n        this.defaultBranch = json.defaultBranch;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n}\n\n\n/**\n * Metadata for a vizier data curation project (i.e., a VizTrail). Contains the\n * project id, name, links and list of descriptors for project branches.\n *\n * The project currently also contains the registry of available modules for\n * workflows and the listing of files on the file server (for display in module\n* forms, e.g., LOAD DATASET). At least e latter is supposed to change in the\n* future.\n */\nexport class ProjectHandle {\n    constructor(id, name, links, branches) {\n        this.id = id;\n        this.name = name;\n        this.links = links;\n        this.branches = branches;\n    }\n    /**\n     * Add a new branch to the list of project branches. Returns a new project\n     * handle for the modified project.\n     */\n    addBranch(branch) {\n        const modifiedBranchList = [branch];\n        for (let i = 0; i < this.branches.length; i++) {\n            modifiedBranchList.push(this.branches[i]);\n        }\n        sortByName(modifiedBranchList);\n        return new ProjectHandle(\n            this.id,\n            this.name,\n            this.links,\n            modifiedBranchList\n        );\n    }\n    /**\n     * Delete the branch with the given identifier. Returns a modified project\n     * handle.\n     */\n    deleteBranch(branchId) {\n        const modifiedBranchList = [];\n        for (let i = 0; i < this.branches.length; i++) {\n            const br = this.branches[i];\n            if (br.id !== branchId) {\n                modifiedBranchList.push(br);\n            }\n        }\n        return new ProjectHandle(\n            this.id,\n            this.name,\n            this.links,\n            modifiedBranchList\n        );\n    }\n    /**\n     * Shortcut to retrieve branch with the given identifier.\n     */\n    findBranch(branchId) {\n        if (branchId != null) {\n            return this.branches.find((br) => (br.id === branchId));\n        }\n    }\n    /**\n     * Initialize the object properties from a Json object that is returned by\n     * Web API calls that return a ProjectHandle.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = getProperty(json, 'name');\n        this.links = new HATEOASReferences(json.links);\n        // List of project branchs (sorted by name)\n        this.branches = [];\n        for (let i = 0; i < json.branches.length; i++) {\n            this.branches.push(new BranchDescriptor().fromJson(json.branches[i]));\n        }\n        sortByName(this.branches);\n        return this;\n    }\n    /**\n     * Returns the default branch for this project.\n     */\n    getDefaultBranch() {\n        return this.branches.find((br) => (br.isDefault));\n    }\n    /**\n     * This method is used to identify cells in a notebook that are grouped.\n     * The information about which cells are grouped should be encoded in the\n     * project packages.\n     * Note: For now, the information is hard-coded.\n     */\n    isGrouped(module) {\n        if (module.command.type === VIZUAL_OP) {\n            const cmdId = module.command.id;\n            if (\n                (cmdId !== VIZUAL.LOAD) &&\n                (cmdId !== VIZUAL.DROP_DATASET) &&\n                (cmdId !== VIZUAL.RENAME_DATASET) &&\n                (cmdId !== VIZUAL.SORT)\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Create a copy of the project handle where the branch listing is modified\n     * so that it contains the given branch instead of an outdated one.\n     */\n    updateBranch(branch) {\n        const { id, name, links, branches } = this;\n        // Create a modified branch listing\n        const modBranches = [];\n        for (let i = 0; i < branches.length; i++) {\n            const br = branches[i];\n            if (br.id === branch.id) {\n                modBranches.push(branch);\n            } else {\n                modBranches.push(br);\n            }\n        }\n        return new ProjectHandle(id, name, links, modBranches);\n    }\n    /**\n     * Create a copy of the project handle with a modified name.\n     */\n    updateName(name) {\n        const { id, links, branches } = this;\n        return new ProjectHandle(id, name, links, branches);\n    }\n}\n\n\n\n// -----------------------------------------------------------------------------\n// Functions\n// -----------------------------------------------------------------------------\n\n/**\n * Use the combination of module type and type-dependent module identifier as\n * a unique module identifier. Module is a command specification returned by\n * the Web API.\n */\nexport const moduleId = (module) => (module.type + ':' + module.id)\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Objects for error messages that are generated during asynchronous processing.\n * Primarily used to group error messages and titles. We also distinguish\n * between error messages (return codes 400 or 500) and File Not Found errors\n * (return code 404).\n */\n\nexport class ErrorObject {\n    constructor(title, message, status) {\n        this.title = title;\n        this.message = message;\n        // Status is optional. If not given assume 400 or 500\n        if (status != null) {\n            this.status = status;\n        } else {\n            this.status = 400;\n        }\n    }\n    /**\n     * Distinguish between server errors and invalud requests or file not foound\n     * errors.\n     */\n     is404() {\n         return this.status === 404;\n     }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProjectHandle } from '../../resources/Project';\nimport { getProperty, updateResourceProperty } from '../../util/Api';\nimport { ErrorObject } from '../../util/Error';\nimport { HATEOAS_PROJECT_UPDATE_PROPERTY } from '../../util/HATEOAS';\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../main/Service';\n\n// Actions for fetching project information from Web API.\nexport const PROJECT_FETCH_ERROR = 'PROJECT_FETCH_ERROR';\nexport const RECEIVE_PROJECT = 'RECEIVE_PROJECT';\nexport const REQUEST_PROJECT = 'REQUEST_PROJECT';\n\n// Actions when fetching or manipulating project resources\nexport const PROJECT_ACTION_ERROR = 'PROJECT_ACTION_ERROR';\nexport const RECEIVE_PROJECT_RESOURCE = 'RECEIVE_PROJECT_RESOURCE';\nexport const REQUEST_PROJECT_ACTION = 'REQUEST_PROJECT_ACTION';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const UPDATE_RESOURCE = 'UPDATE_RESOURCE';\nexport const UPDATE_WORKFLOW = 'UPDATE_WORKFLOW';\n\n/**\n * Fetch project and branch from API. Calls the given result function to\n * fetch further resources on success.\n *\n */\nexport const fetchProject = (projectId, branchId, resultFunc) => (dispatch, getState) => {\n    // Construct project url from the API reference set. This set may not be\n    // initialized yet!\n    if (getState().serviceApi.links) {\n        let url = getState().serviceApi.links.getProjectUrl(projectId);\n        // Signal start of fetching project listing\n        dispatch(requestProject())\n        // Fetch the project.\n        return fetchAuthed(url)(dispatch)\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: The returned json object is expected to contain\n                // the project handle (.project), workflow handle (.workflow),\n                //  workflow modules (.modules), and all dataset descriptors\n                // (.datasets). The last two are used to generate the notebook.\n                checkResponseJsonForReAuth(response).then(json => {\n                    const project = new ProjectHandle().fromJson(json);\n                    let branch = null;\n                    if (branchId != null) {\n                        branch = project.branches.find((br) => (br.id === branchId));\n                    } else {\n                        branch = project.branches.find((br) => (br.isDefault));\n                    }\n                    if (branch != null) {\n                        dispatch({type: RECEIVE_PROJECT, project, branch});\n                        dispatch(resultFunc(project, branch));\n                    } else {\n                        dispatch(projectFetchError('Unknown branch ' + branchId, 404));\n                    }\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else if (response.status === 404) {\n                // The requested project, branch, or workflow does not exist.\n                checkResponseJsonForReAuth(response).then(json => (dispatch(\n                    projectFetchError(json.message, 404)\n                )));\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                    projectFetchError(json.message, response.status)\n                ));\n            }\n        })\n        .catch(err => dispatch(projectFetchError(err.message)))\n    }\n}\n\n/**\n * Set the resource that is shown as page content. Expects a ProjectResource\n * object.\n *\n */\nexport const receiveProjectResource = (resource) => ({\n    type: RECEIVE_PROJECT_RESOURCE,\n    resource: resource\n})\n\nexport const setProject = (project) => ({\n    type: UPDATE_PROJECT,\n    project\n});\n\n\n// -----------------------------------------------------------------------------\n// Switch Branch\n// -----------------------------------------------------------------------------\n\nexport const setBranch = (project, branchId, resultFunc) => (dispatch) => {\n    let branch = project.findBranch(branchId);\n    if (branch != null) {\n        dispatch({type: RECEIVE_PROJECT, project, branch});\n        if (resultFunc) {\n            dispatch(resultFunc(project, branch));\n        }\n    } else {\n        dispatch(projectFetchError('Unknown branch ' + branchId, 404));\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Updates\n// -----------------------------------------------------------------------------\n\n/**\n * .Update the name of the current project. Send a post request to the API\n * and modify the project handle in the global state.\n */\nexport const updateProject = (project, name) => (dispatch) => {\n    dispatch(\n        updateResourceProperty(\n            project.links.get(HATEOAS_PROJECT_UPDATE_PROPERTY),\n            'name',\n            name,\n            (json) => (dispatch) => (dispatch({\n                type: UPDATE_PROJECT,\n                project: project.updateName(getProperty(json, 'name'))\n            })),\n            (message) => (projectActionError(\n                'Error updating project', message\n            )),\n            requestProjectAction\n        )\n    );\n}\n\n\n/**\n * Update the resource that is shown on the project page. This function is for\n * example used when changing the output of a notebook cell which modifies the\n * notebook resource.\n */\nexport const updateResource = (resource) => ({\n    type: UPDATE_RESOURCE,\n    resource\n})\n\n\n/**\n * Set the workflow handle and page content in the global state to the given\n * values. This funcion is used when the underlying workflow was updated either\n * in notebook view or in spreadsheet view.\n */\nexport const updateWorkflowResource = (workflow, resource) => ({\n    type: UPDATE_WORKFLOW,\n    workflow,\n    resource\n})\n\n\n// -----------------------------------------------------------------------------\n// Errors\n// -----------------------------------------------------------------------------\n\n/**\n * Dismiss any project action error message that may be shown by setting the\n * respective property in the global state to null.\n */\nexport const dismissProjectActionError = (title, message) => ({\n     type: PROJECT_ACTION_ERROR,\n     error: null\n})\n\n/**\n * Error while fetching a project resource, creating a new project branch,\n * or updating the project name.\n */\nexport const projectActionError = (title, message) => ({\n    type: PROJECT_ACTION_ERROR,\n    error: new ErrorObject(title, message)\n})\n\n\n/**\n * Error generated while fetching a project.\n */\nexport const projectFetchError = (message, status, title) => {\n    if (title == null) {\n        title = 'Error fetching project';\n    }\n    return {\n        type: PROJECT_FETCH_ERROR,\n        error: new ErrorObject(title, message, status)\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Busy flags\n// -----------------------------------------------------------------------------\n\n/**\n * Signal start of fetching a single project.\n */\nexport const requestProject = () => ({\n  type: REQUEST_PROJECT\n})\n\n/**\n * Signal start fetching a resource that is associated with a project (e.g., a\n * project branch or workflow).\n */\nexport const requestProjectResource = () => (requestProject());\n\n/**\n * Signal start of an action that fetces or manipulates a project property or\n * resource.\n */\nexport const requestProjectAction = () => ({\n  type: REQUEST_PROJECT_ACTION\n})\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HATEOASReferences } from '../util/HATEOAS';\n\n\n/**\n * Dataset descriptor containing dataset identifier, columns, rowCount and\n * references.\n */\nexport class DatasetDescriptor {\n    constructor(id, name, columns, links) {\n        this.id = id;\n        this.name = name;\n        this.columns = columns;\n        this.links = links;\n    }\n    /**\n     * Initialize from a Json object that contains a dataset descriptor returned\n     * by the Web API. Note that the name and column information are optional.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name\n        this.columns = json.columns;\n        this.rowCount = json.rowCount;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n}\n\n\n/**\n * Handle for dataset that is associated with a workflow module. Contains the\n * columns, rows, dataset name, and references. The dataset annotations are\n * optional.\n */\nexport class DatasetHandle {\n    constructor(id, name, columns, rows, rowCount, offset, links, moduleId=null, properties=null) {\n        this.id = id;\n        this.name = name;\n        this.columns = columns;\n        this.rows = rows;\n        this.rowCount = rowCount;\n        this.offset = offset;\n        this.links = links;\n        this.moduleId = moduleId;\n        this.properties = properties;\n    }\n    /**\n     * Initialize the dataset handle from a Json object returned by the Web API.\n     * Note that the dataset name is not expected to be part of the Json object.\n     * Dataset annotations are optional.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name;\n        this.columns = json.columns;\n        this.rows = json.rows;\n        this.rowCount = json.rowCount;\n        this.offset = json.offset;\n        this.links = new HATEOASReferences(json.links);\n        this.moduleId = json.moduleId;\n        this.properties = json.properties;\n        return this;\n    }\n    hasAnnotations(columnId, rowId) {\n    \tlet roi = this.rows.find((row) => (row.id === rowId));\n        return roi && roi.rowAnnotationFlags && (roi.rowAnnotationFlags[columnId] === false);\n    }\n    /**\n     * Get the dataset row at with the given index position. Note that the\n     * row index position is not the same as the index in the row array.\n     */\n    rowAtIndex(index) {\n        return this.rows[index];//this.rows.find((row) => (row.index === index));\n    }\n    /**\n     * Create an updated copy of the dataset where annotation information for\n     * the given cell has been modified according to whether the cell has\n     * annotations or not (as indicated by the given flag).\n     */\n    updateAnnotations(columnId, rowId, hasAnnotations) {\n        // Get the status of the hasAnnotation flag for the previous version\n        const hadAnnotations = this.hasAnnotations(columnId, rowId);\n        let annotations = null;\n        if ((hasAnnotations) && (hadAnnotations)) {\n            return this;\n        } else if ((!hasAnnotations) && (!hadAnnotations)) {\n            return this;\n        } else if ((hasAnnotations) && (!hadAnnotations)) {\n            // Add annotation idicator for cell\n            annotations = this.annotatedCells.slice();\n            annotations.push({column: columnId, row: rowId});\n        } else if ((!hasAnnotations) && (hadAnnotations)) {\n            // Delete annotation\n            annotations = [];\n            for (let i = 0; i < this.annotatedCells.length; i++) {\n                const cell = this.annotatedCells[i];\n                if ((cell.column !== columnId) || (cell.row !== rowId)) {\n                    annotations.push(cell);\n                }\n            }\n        }\n        const {id, name, columns, rows, offset, links, moduleId, properties } = this;\n        return new DatasetHandle(id, name, columns, rows, offset, links, annotations, moduleId, properties);\n    }\n\n    isProfiled = () => this.properties != null && Object.keys(this.properties).length > 0 && this.properties.is_profiled != null\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatasetDescriptor } from './Dataset';\nimport { HATEOASReferences, HATEOAS_WORKFLOW_CANCEL } from '../util/HATEOAS';\nimport { utc2LocalTime } from '../util/Timestamp';\n\n\n// -----------------------------------------------------------------------------\n// Workflow objects\n// -----------------------------------------------------------------------------\n\n/**\n * Descriptor for a workflow version in a branch history. Contains the version\n * number of the workflow, time of creation, type of action that created the\n * workflow, and a short text describing the type of module that was affected\n * by the action.\n */\nexport class WorkflowDescriptor {\n    /**\n     * Helper functions to determine the action type that created the workflow\n     * version There are four possible action types: CREATE BRANCH, DELETE\n     * MODULE, INSERT (or APPEND) MODULE, and REPLACE MODULE.\n     */\n    actionIsAppend = () => (this.action === 'apd');\n    actionIsCreate = () => (this.action === 'cre');\n    actionIsDelete = () => (this.action === 'del');\n    actionIsInsert = () => (this.action === 'ins');\n    actionIsReplace = () => (this.action === 'upd');\n    /**\n     * Initialize the workflow descriptor from a Json object that contains the\n     * serialization of a WorkflowDescriptor returned by the Web API.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.createdAt = utc2LocalTime(json.createdAt);\n        this.action = json.action;\n        this.packageId = json.packageId;\n        this.commandId = json.commandId;\n        return this;\n    }\n}\n\n\n/**\n * Handle for curation workflow. Contains information about the workflow itself\n * and the resources (i.e., datasets and charts) in the workflow state.\n *\n * For now the workflow handle also contains a read only flag to indicate whether\n * the workflow can be modified by the user via the web app. This shold be\n * replaced in the future when proper authentication and access control is\n * implemented.\n */\nexport class WorkflowHandle {\n    constructor(engine) {\n        this.engine = engine;\n    }\n    /**\n     * Initialize the workflow handle from a Json object containing a\n     * WorkflowHandle returned by the Web API.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.createdAt = utc2LocalTime(json.createdAt);\n        this.state = json.state;\n        this.readOnly = json.readOnly;\n        // Get a dictionary of dataset descriptors for all datasets that occur\n        // in the workflow. Datasets are keyed by their unique identifier. Note\n        // that the dictionary will contain all datasets that were created by\n        // any module in the workflow and not just the datasets in the current\n        // workflow state.\n        this.datasets = {};\n        for (let i = 0; i < json.datasets.length; i++) {\n            const dataset = new DatasetDescriptor().fromJson(json.datasets[i]);\n            this.datasets[dataset.id] = dataset;\n        }\n        // Keep list of modules as they are. The notebook will convert them into\n        // a list of notebook cells when needed.\n        this.modules = json.modules;\n        this.links = new HATEOASReferences(json.links);\n        this.tableOfContents = json.tableOfContents\n        return this;\n    }\n\n    isRunning() {\n        return this.links.has(HATEOAS_WORKFLOW_CANCEL)\n    }\n\n    /**\n     * Get the specification for a given module command.\n     */\n    getCommandSpec(cmd) {\n        return this.engine.packages.getCommandSpec(cmd.packageId, cmd.commandId);\n    }\n}\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {groupBy} from \"lodash\";\nimport {DatasetHandle} from \"./Dataset\";\n/**\n * Defintion of objects that represent the different types of output that\n * are associated with a notebook cell.\n */\n\n\n// Output cell resource type identifier\nexport const CONTENT_CHART = 'CONTENT_CHART';\nexport const CONTENT_DATASET = 'CONTENT_DATASET';\nexport const CONTENT_ERROR = 'CONTENT_ERROR';\nexport const CONTENT_HTML = 'CONTENT_HTML';\nexport const CONTENT_MARKDOWN = 'CONTENT_MARKDOWN';\nexport const CONTENT_HIDE = 'CONTENT_HIDE';\nexport const CONTENT_TEXT = 'CONTENT_TEXT';\nexport const CONTENT_JAVASCRIPT = 'CONTENT_JAVASCRIPT';\nexport const CONTENT_TIMESTAMPS = 'CONTENT_TIMESTAMPS';\nexport const CONTENT_MULTIPLE = 'CONTENT_MULTIPLE';\n\n/**\n * Output resource content. Contains functionality to determine content type\n * and whether the content is currently being fetched from the server.\n */\nclass OutputResource {\n    constructor(type, isFetching) {\n        this.type = type;\n        this.isFetching = (isFetching != null) ? isFetching : false;\n    }\n    isChart = () => (this.type === CONTENT_CHART);\n    isDataset = () => (this.type === CONTENT_DATASET);\n    isError = () => (this.type === CONTENT_ERROR);\n    isHidden = () => (this.type === CONTENT_HIDE);\n    isHtml = () => (this.type === CONTENT_HTML);\n    isMarkdown = () => (this.type === CONTENT_MARKDOWN);\n    isText = () => (this.type === CONTENT_TEXT);\n    isTimestamps = () => (this.type === CONTENT_TIMESTAMPS);\n    isJavascript = () => (this.type === CONTENT_JAVASCRIPT);\n    isMultiple = () => (this.type === CONTENT_MULTIPLE);\n}\n\n// Extended output resources for the different types of output.\n\n\n/**\n * Output resource for showing a chart plotted for a given dataset in a\n * notebook cell.\n */\nexport class OutputChart extends OutputResource {\n    constructor(name, dataset, isFetching) {\n        super(CONTENT_CHART, isFetching);\n        this.name = name;\n        this.dataset = dataset;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputChart(this.name, this.dataset, true);\n    }\n}\n\n\n/**\n * Output resource for showing dataset rows in a notebook cell\n */\nexport class OutputDataset extends OutputResource {\n    constructor(dataset, isFetching) {\n        super(CONTENT_DATASET, isFetching);\n        this.dataset = dataset;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputDataset(this.dataset, true);\n    }\n}\n\n\n/**\n * Output resource for showing an error message resulting from a content\n * fetch error.\n */\nexport class OutputError extends OutputResource {\n    constructor(error, isFetching) {\n        super(CONTENT_ERROR, isFetching);\n        this.error = error;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputError(this.error, true);\n    }\n}\n\n\n/**\n * Output resource when hiding output for a notebook cell.\n */\nexport class OutputHidden extends OutputResource {\n    constructor(isFetching) {\n        super(CONTENT_HIDE, isFetching);\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputHidden(true);\n    }\n}\n\n\n/**\n * Output resource for showing content of the module standard output as HTML\n * in the output area of a notebook cell.\n */\nexport class OutputHtml extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_HTML, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/html') {\n                    this.lines.push(out.value);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputHtml(this.lines, true);\n    }\n}\n/**\n * Output resource for showing content of the module standard output as HTML\n * in the output area of a notebook cell, enhanced with Javascript\n */\nexport class OutputJavascript extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_JAVASCRIPT, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/javascript') {\n                    this.lines.push(out);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputHtml(this.lines, true);\n    }\n}\n\n\n/**\n * Output resource for showing content of the module standard output as Markdown\n * in the output area of a notebook cell.\n */\nexport class OutputMarkdown extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_MARKDOWN, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/markdown') {\n                    this.lines.push(out.value);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputMarkdown(this.lines, true);\n    }\n}\n\n/**\n * Output resource for showing content of the module standard output as plain\n * text in the output area of a notebook cell.\n */\nexport class OutputText extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_TEXT, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/plain') {\n                    this.lines.push(out.value);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputText(this.lines, true);\n    }\n}\n\n/**\n * Output resource for showing content of the module standard output as an array of multiple resources\n * in the output area of a notebook cell.\n */\nexport class OutputMultiple extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_MULTIPLE, isFetching);\n        this.outputs = {};\n        let stdoutGrouped = groupBy(outputObjects, 'type');\n        for (let out in stdoutGrouped) {\n            // assuming only one dataset or chart object can exist per output\n            switch (out) {\n                case 'text/plain': this.outputs[out] = stdoutGrouped[out].map(x => x.value).join(\"\\n\"); break;\n                case 'text/markdown' : this.outputs[out] = stdoutGrouped[out].map(x => x.value).join(\"\\n\"); break;\n                case 'text/html': this.outputs[out] = stdoutGrouped[out].map(x => x.value).join(\"\\n\"); break;\n                case 'dataset/view': this.outputs[out] = new DatasetHandle().fromJson(stdoutGrouped[out][0].value); break;\n                case 'chart/view': this.outputs[out] = stdoutGrouped[out][0].value; break;\n                default: this.outputs[out] = stdoutGrouped[out][0]; break;\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputMultiple(this.outputs, true);\n    }\n}\n\n/**\n * Output resource for showing the timestamps for different stages of module\n * execution in the output area of a notebook cell.\n */\nexport class OutputTimestamps extends OutputResource {\n    constructor(createdAt, startedAt, finishedAt) {\n        super(CONTENT_TIMESTAMPS);\n        this.createdAt = createdAt;\n        this.startedAt = startedAt;\n        this.finishedAt = finishedAt;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputTimestamps(\n            this.createdAt,\n            this.startedAt,\n            this.finishedAt,\n            true\n        );\n    }\n}\n\n// Shortcut to show text output for all lines in standard output. Depending on\n// whether the output is plain/text of html a different output resource is\n// returned.\nexport const StandardOutput = (module) => {\n    const stdout = module.outputs.stdout;\n    let outputResource = null;\n    if (stdout.length === 1) {\n        const out = stdout[0];\n        if (out.type === 'text/html') {\n            outputResource = new OutputHtml(stdout);\n        } else if (out.type === 'text/markdown') {\n            outputResource = new OutputMarkdown(stdout);\n        } else if (out.type === 'text/javascript') {\n            outputResource = new OutputJavascript(stdout);\n        } else if (out.type === 'chart/view') {\n            outputResource = new OutputChart(out.value.data.name, out.value.result);\n        } else if (out.type === 'dataset/view') {\n            outputResource = new OutputDataset(new DatasetHandle(out.value.id, out.value.name).fromJson(out.value), false);\n        } else {\n            outputResource = new OutputText(stdout);\n        }\n    } else if (stdout.length > 1) {\n        outputResource = new OutputMultiple(stdout);\n    }\n    // Make sure that there is some output\n    if (outputResource === null) {\n        outputResource = new OutputText([]);\n    }\n    return outputResource;\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Set application routes. The baseHref points to the application home. Route\n * projectHref points to the web page for individual projects.\n */\nimport { CONTENT_CHART, CONTENT_DATASET, CONTENT_ERROR } from '../resources/Outputs';\n\nlet href = process.env.PUBLIC_URL;\nif (process.env.NODE_ENV === 'production') {\n    // href = href + '/vizier-db';\n}\nif (href === '') {\n    href = '/'\n}\n\nexport const baseHref = href;\nexport const projectHref = baseHref + 'projects/:project_id';\nexport const branchHref = projectHref + '/branches/:branch_id';\nexport const branchHistoryHref = branchHref + '/history';\nexport const notebookHeadHref = branchHref + '/head';\nexport const notebookVersionHref = branchHref + '/workflows/:workflow_id';\nexport const spreadsheetHref = notebookHeadHref + '/spreadsheet/:dataset_id';\nexport const errorListHref = notebookHeadHref + '/errors/:dataset_id';\nexport const spreadsheetVersionHref = notebookVersionHref + '/spreadsheet/:dataset_id';\nexport const errorListVersionHref = notebookVersionHref + '/errors/:dataset_id';\n\n/**\n * Key codes\n */\n\nexport const KEY = {\n    DOWN: 40,\n    ENTER: 13,\n    ESC: 27,\n    LEFT: 37,\n    NULL: 46,\n    RIGHT: 39,\n    UP: 38,\n    TAB: 9\n};\n\n/**\n * Directions\n */\n\nexport const MOVE = {\n    DOWN: 0,\n    LEFT: 1,\n    RIGHT: 2,\n    UP: 3\n}\n\n\n/**\n * Convert file size bytes into string. Copied from:\n * https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\n */\nexport const formatBytes = (a, b) => {\n    if (a < 0) {\n        return '?'\n    } else if (a === 0) {\n        return '0 Bytes'\n    }\n    const c=1024\n    const d=b||2\n    const e=[\"Bytes\",\"KB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"]\n    const f=Math.floor(Math.log(a)/Math.log(c))\n    return parseFloat((a/Math.pow(c,f)).toFixed(d))+\" \"+e[f]\n}\n\n\n/*\n * Name validity function that returns true if a given value is not equal to\n * a string that is empty or only contains whitespaces.\n */\nexport const isNotEmptyString = (name) => (name.trim() !== '');\n\n\n/*\n * Position validity function that returns true if a given value is a\n * non-negative integer.\n */\nexport const isNonNegativeInt = (value) => {\n    return (value && !/[^\\d]/.test(value));\n};\n\n\n/**\n * Generate url to show the history of a project branch in the app.\n */\nexport const branchPageUrl = (projectId, branchId) => {\n    return baseHref + 'projects/' + projectId + '/branches/' + branchId + '/history';\n}\n\n\n/**\n * Generate url to show a particular workflow version in the app.\n */\nexport const notebookPageUrl = (projectId, branchId, workflowId) => {\n    let link = baseHref + 'projects/' + projectId + '/branches/' + branchId;\n    if (workflowId != null) {\n        link += '/workflows/' + workflowId;\n    } else {\n        link += '/head';\n    }\n    return link;\n}\n\n/**\n * Generate url to show a particular workflow version spreadsheet in the app.\n */\nexport const spreadsheetPageUrl = (projectId, branchId, datasetId, workflowId) => {\n    let link = baseHref + 'projects/' + projectId + '/branches/' + branchId;\n    if (workflowId != null) {\n        link += '/workflows/' + workflowId + '/spreadsheet/' + datasetId;\n    } else {\n        link += '/head/spreadsheet/' + datasetId;\n    }\n    return link;\n}\n\n/**\n * Generate url to show a particular workflow version error list in the app.\n */\nexport const errorListPageUrl = (projectId, branchId, datasetId, workflowId) => {\n    let link = baseHref + 'projects/' + projectId + '/branches/' + branchId;\n    if (workflowId != null) {\n        link += '/workflows/' + workflowId + '/errors/' + datasetId;\n    } else {\n        link += '/head/errors/' + datasetId;\n    }\n    return link;\n}\n\n/**\n * Return given value or default value if value is null or undefined.\n */\nexport const valueOrDefault = (val, defaultValue) => ((val != null) ? val : defaultValue);\n\n\n// -----------------------------------------------------------------------------\n// Project page resource\n// -----------------------------------------------------------------------------\n\nconst RESOURCE_BRANCH = 'RESOURCE_BRANCH';\nconst RESOURCE_MAIN_PAGE = 'RESOURCE_MAIN_PAGE';\nconst RESOURCE_NOTEBOOK = 'RESOURCE_NOTEBOOK';\nexport const RESOURCE_DATASET_CAVEAT = 'RESOURCE_DATASET_CAVEAT';\n\n\n/**\n * Wrapper for the application resource that are displayed in the resource page\n * component. The resource captures one of the following content types: Branch\n * History Page, Main Page, or Notebook Page.\n */\nexport class AppResource {\n    /**\n     * Constructor expects the content type information and a type-specific\n     * content object.\n     */\n    constructor(resourceType, content) {\n        this.resourceType = resourceType;\n        this.type = resourceType;\n        this.content = content; \n    }\n    /**\n     * Various flags to check the type of the content.\n     */\n    isBranch = () => (this.resourceType === RESOURCE_BRANCH);\n    isMainPage = () => (this.resourceType === RESOURCE_MAIN_PAGE);\n    isNotebook = () => (this.resourceType === RESOURCE_NOTEBOOK);\n    isError = () => (this.type === CONTENT_ERROR);\n    isChart = () => (this.type === CONTENT_CHART);\n    isDataset = () => (this.type === CONTENT_DATASET);\n    isDatasetCaveat = () => (this.type === RESOURCE_DATASET_CAVEAT);\n    \n}\n\n\n// Shortcuts for different content types\nexport const BranchResource = () => (new AppResource(RESOURCE_BRANCH));\nexport const MainPageResource = (notebook) => (new AppResource(RESOURCE_MAIN_PAGE));\nexport const NotebookResource = (notebook) => (new AppResource(RESOURCE_NOTEBOOK));\nexport const ErrorResource = (title, module) => (new AppResource(CONTENT_ERROR, {title, module}));\nexport const ChartResource = (name, dataset) => (new AppResource(CONTENT_CHART, {name, dataset}));\nexport const DatasetCaveatResource = (dataset, annotations) => (new AppResource(RESOURCE_DATASET_CAVEAT, {dataset, annotations}));\nexport const SpreadsheetResource = (dataset) => (new AppResource(CONTENT_DATASET, dataset));\n\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NO_OP } from '../main/App';\nimport { projectActionError, projectFetchError, requestProjectAction, setBranch, setProject } from './Project';\nimport { BranchDescriptor } from '../../resources/Branch';\nimport { WorkflowDescriptor } from '../../resources/Workflow';\nimport { createResource, deleteResource, fetchResource, getProperty, updateResourceProperty } from '../../util/Api';\nimport { notebookPageUrl } from '../../util/App';\nimport { HATEOAS_BRANCH_UPDATE_PROPERTY } from '../../util/HATEOAS';\n\n\n// Actions for manipulating branches and retrieving branch information\nexport const UPDATE_BRANCH = 'UPDATE_BRANCH';\nexport const RECEIVE_BRANCH_HISTORY = 'RECEIVE_BRANCH_HISTORY';\nexport const REQUEST_BRANCH = 'REQUEST_BRANCH'\n\n\n/**\n * Create a new project branch with given name. The branch is created from\n * the source that is defined by the given workflow and module.\n *\n * Parameters:\n *\n * project: ProjectHandle\n * workflow: WorkflowHandle\n * module: ModuleHandle\n * name: string\n * history: Browser history stack\n *\n */\nexport const createBranch = (project, branch, workflowId, moduleId, name, history) =>  (dispatch) => {\n    // Generate request body containing source information and branch\n    // properties. The branch source is empty if the given module identifier\n    // is empty\n    const data = {\n        properties: [{\n            key: 'name',\n            value: name\n        }]\n    }\n    if (moduleId != null) {\n        data.source = {\n            branchId: branch.id,\n            workflowId: workflowId,\n            moduleId: moduleId\n        }\n    }\n    // POST request to branches url contained in the project handle's links. On\n    // success, redirect to the page for the new branch.\n    dispatch(\n        createResource(\n            project.links.get('branch.create'),\n            data,\n            (json) => {\n                const resultBranch = new BranchDescriptor().fromJson(json);\n                dispatch(setProject(project.addBranch(resultBranch)));\n                history.push(notebookPageUrl(project.id, resultBranch.id));\n                // Avoid action undefined error\n                return ({type: NO_OP});\n            },\n            (message) => (\n                projectActionError('Error creating new branch', message)\n            ),\n            requestBranch\n        )\n    )\n}\n\n\n/**\n * Delete a project branch. Expects the project and branch handles as arguments.\n * Uses the delete url in the branch handle's links. On success, redirect to the\n * page for the default branch.\n *\n * Parameters:\n *\n * project: ProjectHandle\n * branch: BranchDescriptor\n * redirectAction: Dispatch action to redirect to the default brnach in case of\n *                 successful delete\n */\nexport const deleteBranch = (project, branch, urlFactory, history) => (dispatch) => {\n    dispatch(\n        deleteResource(\n            branch.links.get('branch.delete'),\n            () => {\n                dispatch(setProject(project.deleteBranch(branch.id)));\n                const defaultBranchId = project.getDefaultBranch().id;\n                history.push(urlFactory(project.id, defaultBranchId));\n                // Avoid action undefined error\n                return ({type: NO_OP});\n            },\n            (message) => (\n                projectActionError('Error deleting branch', message)\n            ),\n            requestBranch\n        )\n    )\n}\n\n\n/**\n * Fetch the full history of a given project branch. On success, the returned\n * result is expected to contain a listing of workflow version descriptors\n * (.workflows). Show the result as content on the project page.\n *\n * Parameters:\n *\n * branch: BranchDescriptor\n *\n */\nexport const fetchBranch = (project, branch) => (dispatch) => {\n    if (branch == null) {\n        dispatch(setBranch(project));\n    } else {\n        dispatch(\n            fetchResource(\n                branch.links.getSelf(),\n                (json) => (dispatch) => {\n                    // Expect a listing of workflow version descriptors.\n                    const workflows = json.workflows;\n                    const history = [];\n                    for (let i = 0; i < workflows.length; i++) {\n                        const wf = workflows[i];\n                        history.push(new WorkflowDescriptor().fromJson(wf))\n                    }\n                    dispatch(setBranch(project, branch.id));\n                    dispatch({\n                        type: RECEIVE_BRANCH_HISTORY,\n                        workflows: history\n                    });\n                },\n                (message) => (\n                    projectFetchError(message, 400, 'Error fetching branch history')\n                ),\n                requestBranch,\n            )\n        )\n    }\n}\n\n\n/**\n * Signal start when fething the branch history.\n */\nexport const requestBranch = () => ({ type: REQUEST_BRANCH });\n\n/**\n * Update the name of the branch in the current workflow. On success, call\n * replaceCurrentBranch to update the branch listing in the current project\n * handle and the branch in the current workflow.\n *\n * Parameters:\n *\n * project: ProjectHandle\n * branch: BranchHandle\n * name: string\n *\n */\nexport const updateBranch = (project, branch, name) => (dispatch) => {\n    dispatch(\n        updateResourceProperty(\n            branch.links.get(HATEOAS_BRANCH_UPDATE_PROPERTY),\n            'name',\n            name,\n            (json) => (dispatch) => {\n                // Create an updated branch descriptor with the new name\n                const updBranch = branch.updateName(getProperty(json, 'name'));\n                // Need to modify the project as well since it contains a\n                // reference to all the branches\n                return dispatch({\n                    type: UPDATE_BRANCH,\n                    branch: updBranch,\n                    project: project.updateBranch(updBranch)\n                });\n            },\n            (message) => (\n                projectActionError('Error updating branch', message)\n            ),\n            requestProjectAction\n        )\n    )\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RECEIVE_BRANCH_HISTORY, REQUEST_BRANCH } from '../../actions/project/Branch';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT } from '../../actions/project/Project';\n\n/**\n* Reducer for actions that affect the branch history page.\n*/\n\n\n/**\n * STATE:\n *\n * fetchError: Error while loading the project handle or workflow listing\n * isFetching: Load of project handle or workflow listing in progress\n * workflows: List of workflow descriptors in branch history\n */\n\nconst INITIAL_STATE = {\n    fetchError: null,\n    isFetching: false,\n    workflows: null\n}\n\nexport const branchPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_BRANCH_HISTORY:\n            return {\n                ...state,\n                workflows: action.workflows,\n                isFetching: false,\n                fetchError: null\n            };\n        case RECEIVE_PROJECT:\n            return {...state, workflows: null};\n        case REQUEST_PROJECT:\n        case REQUEST_BRANCH:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HATEOASReferences } from '../util/HATEOAS';\n\n/**\n * Artifact descriptor containing artifact identifier, type, and name.\n */\nexport class ArtifactDescriptor {\n    constructor(id, name, mime_type, artifact_type, links) {\n        this.id = id;\n        this.name = name;\n        this.artifact_type = artifact_type;\n        this.mime_type = mime_type;\n        this.links = links;\n    }\n    /**\n     * Initialize from a Json object that contains a dataset descriptor returned\n     * by the Web API. Note that the name and column information are optional.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name\n        this.artifact_type = json.category;\n        this.mime_type = json.objType;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n}\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatasetDescriptor } from './Dataset';\nimport { ArtifactDescriptor } from './Artifact';\nimport { HATEOASReferences } from '../util/HATEOAS';\nimport {\n    OutputChart,\n    OutputHtml,\n    OutputText,\n    OutputMarkdown,\n    OutputDataset,\n    OutputMultiple,\n    OutputJavascript,\n    CONTENT_TEXT\n} from './Outputs';\nimport { DatasetHandle } from './Dataset';\nimport { utc2LocalTime } from '../util/Timestamp';\n\n// Workflow and module states\nconst STATE_PENDING = 0;\nconst STATE_RUNNING = 1\nconst STATE_CANCELED = 2\nconst STATE_ERROR = 3\nconst STATE_SUCCESS = 4\nconst STATE_FROZEN = 5\n\n// Relative positions when inserting a new cell\nexport const INSERT_AFTER = 'INSERT_AFTER';\nexport const INSERT_BEFORE = 'INSERT_BEFORE';\n\n\n/**\n * New cells have a string identifier that contains  unique counter value. Here\n * we assume that modules fetched from the API contain identifier that do not\n * match this pattern (i.e., do not start and end with underlines). As an\n * alternative we could use unique UUID's here.\n */\nexport const getNewCellId = (id) => ('__' + id + '__');\n\n\n/**\n * Workflow module handle.\n */\nclass ModuleHandle {\n    fromJson(json, datasets) {\n        this.id = json.id;\n        this.state = json.state;\n        this.command = json.command;\n        this.outputs = json.outputs;\n        this.datasets = [];\n        for (let i = 0; i < json.datasets.length; i++) {\n            const { id, name } = json.datasets[i];\n            const ds = datasets[id];\n            this.datasets.push(\n                new DatasetDescriptor(id, name, ds.columns, ds.links)\n            );\n        }\n        this.artifacts = [];\n        for (let i = 0; i < json.artifacts.length; i++) {\n            const { id, name, objType, category } = json.artifacts[i];\n            this.artifacts.push(\n                new ArtifactDescriptor(id, name, objType, category, json.links)\n            );\n        }\n        this.charts = json.charts;\n        this.text = json.text;\n        this.links = new HATEOASReferences(json.links);\n        // Convert timestamps to local time\n        this.timestamps = {}\n        for (var ts in json.timestamps) {\n            this.timestamps[ts] = utc2LocalTime(json.timestamps[ts]);\n        }\n        this.locked = json.locked;\n        return this;\n    }\n}\n\n\n/**\n * A notebook resource is a list of cells. Each cell corresponds to a module\n * in an underlying workflow. In addition to the workflow module each cell in\n * the notebook has an output resource. This resource is shown in the output\n * area when the notebook cell is rendered.\n *\n * Each notebook maintains a counter for for new cells to generate unique cell\n * identifier.\n */\nexport class Notebook {\n    constructor(workflow, cells, cellCounter) {\n        this.workflow = workflow;\n        this.cells = cells;\n        this.cellCounter = (cellCounter != null) ? cellCounter : 0;\n        // Set a few shortcuts\n        this.id = workflow.id;\n        this.createdAt = workflow.createdAt;\n        this.readOnly = workflow.readOnly;\n        this.datasets = workflow.datasets;\n    }\n    /**\n     * Create a notebook resource from a given workflow handle.\n     */\n    fromWorkflow(workflow) {\n        // Create notebook cells from list of of workflow modules returned by\n        // the API\n        this.cells = [];\n        for (let i = 0; i < workflow.modules.length; i++) {\n            const module = new ModuleHandle().fromJson(\n                workflow.modules[i],\n                workflow.datasets\n            );\n            this.cells.push(\n                new NotebookCell(\n                    module.id,\n                    module,\n                    workflow.getCommandSpec(module.command),\n                    getModuleDefaultOutput(module)\n                )\n            );\n        }\n        return this;\n    }\n    /**\n     * Dismiss changes that were made for a given cell. If the cell is a new\n     * cell it will be removed from the list of cells. If the cell represents\n     * an existing workflow module all changes will be reset.\n     */\n    dismissChangesForCell(cellId) {\n        const cellList = [];\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            if (cell.id === cellId) {\n                if (!cell.isNewCell()) {\n                    cellList.push(cell);\n                }\n            } else {\n                cellList.push(cell);\n            }\n        }\n        return new Notebook(this.workflow, cellList, this.cellCounter);\n    }\n    /**\n     * Insert a new cell or set an existing cell into edit mode. There are three\n     * options here: (1) if cell is null or undefined a new cell is being added\n     * to an empty notebook, (2) if cell is defined and position is null or\n     * undefined the given cell is being edited, or (3) if cell and position\n     * are defined a new cell is inserted at a position relative to the given\n     * cell (either before or after).\n     */\n    editCell(cell, position) {\n        if (cell != null) {\n            const cellList = [];\n            for (let i = 0; i < this.cells.length; i++) {\n                const c = this.cells[i];\n                if (c.id === cell.id) {\n                    // Depending on whether position is defined or not we either\n                    // add a new cell (as defined by position) or set the given\n                    // cell into edit mode.\n                    if (position != null) {\n                        const newCell = new NotebookCell(\n                            getNewCellId(this.cellCounter)\n                        );\n                        if (position === INSERT_BEFORE) {\n                            cellList.push(newCell);\n                            cellList.push(c);\n                        } else {\n                            cellList.push(c);\n                            cellList.push(newCell);\n                        }\n                    } else {\n                        cellList.push(\n                            new NotebookCell(\n                                c.id,\n                                c.module,\n                                c.commandSpec,\n                                c.output,\n                                true\n                        ));\n                    }\n                } else {\n                    cellList.push(c);\n                }\n            }\n            return new Notebook(this.workflow, cellList, this.cellCounter + 1);\n        } else {\n            // I\\f the notebook is empty a new cell is added.\n            if (this.cells.length === 0) {\n                return new Notebook(\n                    this.workflow,\n                    [new NotebookCell(getNewCellId(this.cellCounter))],\n                    this.cellCounter + 1\n                );\n            }\n        }\n        return this;\n    }\n    /**\n     * Get a descriptor for the dataset with the given name in the given module.\n     */\n    getDatasetForModule(module, name) {\n        // Find the dataset name to identifier mapping in the dataset list in\n        // the module state\n        const datasetId = module.datasets.find((ds) => (ds.name === name)).id;\n        // Create a new descriptor from the dataset that has the given dataset\n        // name\n        const ds = this.datasets[datasetId];\n        return new DatasetDescriptor(datasetId, name, ds.columns, ds.links);\n    }\n    /**\n     * Test if the associated workflow has modules that are in an active state.\n     */\n    hasActiveCells = () => ((this.workflow.state === STATE_PENDING) || (this.workflow.state === STATE_RUNNING));\n    /**\n     * Test if a notebook is empty.\n     */\n    isEmpty() {\n        return this.cells.length === 0;\n    }\n    /**\n     * Shortcut to access the last cell in the notebook.\n     */\n    lastCell() {\n        if (this.cells.length > 0) {\n            return this.cells[this.cells.length - 1];\n        } else {\n            return null;\n        }\n\n    }\n    /**\n     * Replace the output in the cell that represents the workflow module with\n     * the given identifier. Returns a modified copy of this notebook.\n     */\n    replaceOutput(moduleId, output) {\n        // Modified list of notebook cells\n        const modifiedCells = [];\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            const module = cell.module;\n            if ((module != null) && (module.id === moduleId)) {\n                modifiedCells.push(\n                    new NotebookCell(\n                        module.id,\n                        module,\n                        cell.commandSpec,\n                        output\n                    )\n                );\n            } else {\n                modifiedCells.push(cell);\n            }\n        }\n        return new Notebook(this.workflow, modifiedCells, this.cellCounter);\n    }\n    /**\n     * Set the isFetching flag in the notebook cell that that contains the\n     * module with the given id. Returns a modified copy of the notebook.\n     */\n    setFetching(moduleId) {\n        // Modified list of notebook cells\n        const modifiedCells = [];\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            const module = cell.module;\n            if ((module != null) && (module.id === moduleId)) {\n                modifiedCells.push(\n                    new NotebookCell(\n                        module.id,\n                        module,\n                        cell.commandSpec,\n                        cell.output.setFetching()\n                    )\n                );\n            } else {\n                modifiedCells.push(cell);\n            }\n        }\n        return new Notebook(this.workflow, modifiedCells, this.cellCounter);\n    }\n    /**\n     * Update the notebook whenever a new version of the associated workflow\n     * is received. Replaces the respective modules in notebook cells with\n     * their updated counterparts. Returns a new notebook object.\n     */\n    updateWorkflow(workflow, modifiedCellId, useDefaultOutputs=false) {\n        // We iterate over the notebook cells and workflow modules until a\n        // difference in the corresponding module ids is encoutered. At that\n        // point we append the remaining workflow modules.\n        // Any new cell that is encountered before the first difference will\n        // also be included in the notebook.\n        const modifiedCells = [];\n        const size = Math.min(this.cells.length, workflow.modules.length);\n        let index = 0;\n        while (index < size) {\n            const cell = this.cells[index];\n            if ((cell.isNewCell()) && (cell.id !== modifiedCellId)) {\n                modifiedCells.push(cell);\n            } else {\n                const module = new ModuleHandle().fromJson(\n                    workflow.modules[index],\n                    workflow.datasets\n                );\n                if (cell.id === module.id) {\n                    // This is a cell that existed in the previous workflow. If\n                    // the modified module identifier is given then we need to\n                    // set the cell output to its default value unless we want\n                    // to maintain the output states of the notebook cells\n                    let outputResource = outputSelector(cell, module, useDefaultOutputs)\n                    modifiedCells.push(\n                        new NotebookCell(\n                            module.id,\n                            module,\n                            cell.commandSpec,\n                            outputResource\n                        )\n                    );\n                    index++;\n                } else {\n                    // Here is were the differences between the notebook and the\n                    // new workflow version starts. All modules from here on\n                    // will have new identifier. We append them to the modified\n                    // cell list below\n                    break;\n                }\n            }\n        }\n        // Append all workflow modules that have not been appended yet\n        for (let i = index; i < workflow.modules.length; i++) {\n            const module = new ModuleHandle().fromJson(\n                workflow.modules[i],\n                workflow.datasets\n            );\n            modifiedCells.push(\n                new NotebookCell(\n                    module.id,\n                    module,\n                    workflow.getCommandSpec(module.command),\n                    getModuleDefaultOutput(module)\n                )\n            );\n        }\n        return new Notebook(workflow, modifiedCells, this.cellCounter);\n    }\n}\n\n\n/**\n * Each cell in a notebook contains a corresponding workflow module and a cell\n * output resource to keep track of the information that is shown in the cell\n * output area.\n */\nclass NotebookCell {\n    constructor(id, module, commandSpec, output) {\n        this.id = id;\n        this.module = module;\n        this.commandSpec = commandSpec;\n        this.output = output;\n    }\n    /**\n     * Test if the associated workflow module is in an active state.\n     */\n    isActive = () => (this.isPending() || this.isRunning());\n    /**\n     * Test if the state of the associated module is canceled.\n     */\n    isCanceled() {\n        if (this.module != null) {\n            return this.module.state === STATE_CANCELED;\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in error state.\n     */\n    isError() {\n        if (this.module != null) {\n            return this.module.state === STATE_ERROR\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in error or canceled state.\n     */\n    isErrorOrCanceled = () => (this.isCanceled() || this.isError());\n    /**\n     * Test if this object represents a new cell in the notebook. A new cell\n     * does not have a workflow module associated with it.\n     */\n    isNewCell = () => (this.module == null);\n    /**\n     * Test if the associated workflow module is in pending state.\n     */\n    isPending() {\n        if (this.module != null) {\n            return this.module.state === STATE_PENDING\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in running state.\n     */\n    isRunning() {\n        if (this.module != null) {\n            return this.module.state === STATE_RUNNING\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in success state.\n     */\n    isSuccess() {\n        if (this.module != null) {\n            return this.module.state === STATE_SUCCESS\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if this cell is in the frozen state.\n     */\n    isFrozen() {\n        if (this.module != null) {\n            return this.module.state === STATE_FROZEN\n        } else {\n            return false\n        }\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n/**\n * Selects the output between the module and cell. useDefaultOutputs =true uses module outputs.\n * the choice between using cell and module outputs during re-rendering helps retain notebook state.\n * the API returns an empty CONTEXT_TEXT (lines=[]) output when processing cells, hence these should\n * be ignored and module output displayed at the end of the execution\n */\nconst outputSelector = (cell, module, useDefaultOutputs) => {\n    let outputResource = cell.output;\n    if(useDefaultOutputs || (cell.output.type===CONTENT_TEXT && (!cell.output.lines || cell.output.lines.length===0))){\n        outputResource = getModuleDefaultOutput(module);\n    }\n    return outputResource;\n}\n\n\n/**\n * Get the default output resource for a given module.\n */\nconst getModuleDefaultOutput = (module) => {\n    // Get cell output resource\n    const stdout = module.outputs.stdout;\n    let outputResource;\n    if (stdout.length === 1) {\n        // If the output is a chart view it is expected to be the only\n        // output element\n        const out = stdout[0];\n        if (out.type === 'chart/view') {\n            outputResource = new OutputChart(out.value.data.name, out.value.result);\n        } else if (out.type === 'dataset/view') {\n            outputResource = new OutputDataset(new DatasetHandle(out.value.id, out.value.name).fromJson(out.value), false);\n        } else if (out.type === 'text/html') {\n            outputResource = new OutputHtml(stdout);\n        } else if (out.type === 'text/markdown') {\n            outputResource = new OutputMarkdown(stdout);\n        } else if (out.type === 'text/javascript') {\n            outputResource = new OutputJavascript(stdout);\n        } else  {\n            outputResource = new OutputText(stdout);\n        }\n    } else if (stdout.length > 1) {\n        outputResource = new OutputMultiple(stdout);\n    } else { // Make sure that there is some output\n        outputResource = new OutputText([]);\n    }\n    return outputResource;\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {fetchAuthed, checkResponseJsonForReAuth, requestAuth, serviceError, getAuthed} from '../main/Service';\nimport { projectActionError, projectFetchError, requestProjectAction } from './Project';\n// import { AnnotationList } from '../../resources/Annotation';\nimport { DatasetHandle } from '../../resources/Dataset';\nimport { getNewCellId } from '../../resources/Notebook';\nimport { OutputChart, OutputDataset, OutputError, OutputHidden,\n    OutputTimestamps, StandardOutput } from '../../resources/Outputs';\nimport { WorkflowHandle } from '../../resources/Workflow';\nimport { fetchResource, postResourceData } from '../../util/Api';\nimport { ErrorObject } from '../../util/Error';\nimport { HATEOASReferences, HATEOAS_BRANCH_HEAD, HATEOAS_MODULE_DELETE,\n    HATEOAS_WORKFLOW_CANCEL } from '../../util/HATEOAS';\n// import { VIZUAL, VIZUAL_OP } from '../../util/Vizual';\n\n\n/**\n * Identifier for the supported notebook actions\n */\n// Change the value of the group mode state\nexport const CHANGE_GROUP_MODE = 'CHANGE_GROUP_MODE';\n// Insert a new cell into the notebook\nexport const INSERT_NOTEBOOK_CELL = 'INSERT_NOTEBOOK_CELL';\n// Signals for fetching workflow modules\nexport const RECEIVE_WORKFLOW = 'RECEIVE_WORKFLOW';\nexport const REQUEST_WORKFLOW = 'REQUEST_WORKFLOW';\n// set the active notebook cell\nexport const SET_ACTIVE_NOTEBOOK_CELL = 'SET_ACTIVE_NOTEBOOK_CELL';\n// Update the notebook object in the global state\nexport const UPDATE_NOTEBOOK = 'UPDATE_NOTEBOOK';\n\n\n// -----------------------------------------------------------------------------\n// Workflows\n// -----------------------------------------------------------------------------\n\n/**\n * Fetch project and branch from API. Calls the given result function to\n * fetch further resources on success.\n *\n */\nexport const fetchWorkflow = (project, branch, workflowId) => (dispatch, getState) => {\n    // Construct workflow url from the API reference set. This set may not be\n    // initialized yet!\n    const api = getState().serviceApi;\n    if (api.links) {\n        let url = getState().serviceApi.links.getNotebookUrl(project.id, branch.id, workflowId);\n        // Signal start of fetching project listing\n        dispatch({ type: REQUEST_WORKFLOW });\n        // Fetch the project.\n        return fetchAuthed(url)(dispatch)\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: The returned json object is expected to contain\n                // the project handle (.project), workflow handle (.workflow),\n                //  workflow modules (.modules), and all dataset descriptors\n                // (.datasets). The last two are used to generate the notebook.\n                checkResponseJsonForReAuth(response).then(json => (\n                    dispatch({\n                        type: RECEIVE_WORKFLOW,\n                        workflow: new WorkflowHandle(api.engine).fromJson(json)\n                    })\n                ));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else if (response.status === 404) {\n                // The requested project, branch, or workflow does not exist.\n                checkResponseJsonForReAuth(response).then(json => (dispatch(\n                    workflowFetchError(json.message, 404)\n                )));\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                    workflowFetchError(json.message, response.status)\n                ));\n            }\n        })\n        .catch(err => dispatch(workflowFetchError(err.message)))\n    }\n}\n\n\n/**\n * Siple wrapper for workflow-specific project errors.\n */\nconst workflowFetchError = (message, status) => (\n    projectFetchError(message, status, 'Error fetching notebook')\n);\n\n\n// -----------------------------------------------------------------------------\n// Notebooks\n// -----------------------------------------------------------------------------\n\nconst getJson = (response, success) => {\n    if (response.status === success) {\n        return checkResponseJsonForReAuth(response);\n    } else {\n        return checkResponseJsonForReAuth(response).then(err => {throw err;});\n    }\n}\n/**\n * Check the status of an active notebook cell. If the status of the associated\n * module has changed we fetch the update version of the workflow and update\n * the notebook accordingly.\n */\nexport const checkModuleStatus = (notebook, cell) => (dispatch) => (\n    fetchAuthed(cell.module.links.getSelf())(dispatch).then(\n        response => getJson(response, 200),\n        error => dispatch(serviceError(error.message))\n    ).then(\n        json => {\n            if (json.state !== cell.module.state) {\n            \t//TODO: hurry up and tell the interval to die in your render loop, react.  \n            \t//  Nevermind; hacking for now.  FIXIT: soon\n            \tclearInterval(window.pollingTimer);\n            \treturn fetchAuthed(notebook.workflow.links.get(HATEOAS_BRANCH_HEAD))(dispatch).then(\n                    response => getJson(response, 200),\n                    error => dispatch(serviceError(error.message))\n                ).then(\n                    json => (dispatch(updateNotebook(notebook, json, cell.id))),\n                    error => dispatch(workflowFetchError(error.message))\n                )\n            }\n        },\n        error => dispatch(setNotebookCellError(notebook, cell.module, 'module status', error.message))\n    )\n)\n\n\n/**\n * Dismiss any changes that were made to the given cell. Sets the active cell\n * to null.\n */\nexport const dismissCellChanges = (notebook, cell) => (dispatch) => {\n    dispatch({\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook.dismissChangesForCell(cell.id)\n    })\n    dispatch({type: SET_ACTIVE_NOTEBOOK_CELL});\n}\n\n\n/**\n * Start editing a cell in a notebook. The cell is expected to contain a\n * workflow module that contains the command that is being edited.\n */\nexport const editNotebookCell = (notebook, cell) => ({\n    type: UPDATE_NOTEBOOK,\n    notebook: notebook.editCell(cell)\n})\n\n\n/**\n * Insert a new cell into the notebook. The position of the new cell is relative\n * to the given cell (either before or after). If cell is null the new cell is\n * being added to an empty notebook.\n *\n * The new cell will be set as the active cell for the modified notebook.\n */\nexport const createtNotebookCell = (notebook, cell, position) => (dispatch) => {\n    // The identifier for the new notebook cell is generated by the getNewCellId\n    // method. By calling the method here we get the identifier of the cell that\n    // will be added when .editCell() is called. Use this identifier to set the\n    // new cell as the active cell in the modified notebook.\n    const cellId = getNewCellId(notebook.cellCounter);\n    dispatch({\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook.editCell(cell, position)\n    })\n    dispatch({\n        type: SET_ACTIVE_NOTEBOOK_CELL,\n        cellId\n    })\n}\n\n\n/**\n * Set the identifier of the notebook cell that is active. The cell might be\n * null if the active cell selection is being cleared.\n */\nexport const selectNotebookCell = (cell) => {\n    let cellId = (cell != null) ? cell.id : null;\n    return {\n        type: SET_ACTIVE_NOTEBOOK_CELL,\n        cellId\n    }\n}\n\n\n/**\n * Check the url param cell-output.  if it is present\n */\nexport const isCellOutputRequest = () => {\n\tconst urlParams = new URLSearchParams(window.location.search);\n\tconst cellOutput = urlParams.get('cell-output');\n\treturn cellOutput;\n}\n\n\n\n// -----------------------------------------------------------------------------\n// Update notebook cells\n// -----------------------------------------------------------------------------\n\n/**\n * Load annotations for a given dataset cell to be displayed in a notebook cell.\n * If columnId or rowId are negative a shown annotation is discarded instead.\n */\nexport const fetchAnnotations = (notebook, module, dataset, columnId, rowId) => (dispatch) => {\n    return dispatch(\n        fetchResource(\n            dataset.links.getAnnotations(columnId, rowId),\n            (json) => {\n                // const annotations = new AnnotationList(json['annotations'])\n                return setActiveDatasetCell(\n                    notebook,\n                    module\n                );\n            },\n            (message) => {\n                setNotebookCellError(notebook, module, 'annotations for dataset ' + dataset.name, message)\n            },\n            () => (setActiveDatasetCell(notebook, module))\n        )\n    )\n}\n\n/**\n * Update the cell containing the given module in the notebook to indicate that\n * the output content is being loaded.\n */\nconst setNotebookCellBusy = (notebook, module) => (dispatch) => {\n    return dispatch(updateNotebook(notebook.setFetching(module.id)));\n}\n\n\n/**\n * Update the cell containing the given module in the notebook to show an error\n * message that was generated while fetching a cell resource.\n */\nconst setNotebookCellError = (notebook, module, resourceType, message) => (dispatch) => {\n    const err = new ErrorObject('Error loading ' + resourceType, message);\n    const nb = notebook.replaceOutput(module.id, new OutputError(err));\n    return dispatch(updateNotebook(nb));\n}\n\n\n/**\n * Set the annotation object for a given notebook module.\n */\nconst setActiveDatasetCell = (notebook, module, cell) => (dispatch) => {\n    const nb = notebook.setActiveDatasetCell(module.id, cell);\n    return dispatch(updateNotebook(nb));\n}\n/**\n * Request properties for the specified datatset from the API and recreate the notebook.\n * unstable because it tries to recreate the notebook from the workflow which may or may not get the properties for\n * previously requested data cells depending on if the API updated default module outputs when that request is made.\n */\nexport const unstable_updateCellDatasetProperties = (notebook, module, dataset, offset, limit, profile) => (dispatch) => {\n    let url = dataset.links.getDatasetUrl(offset, limit, profile);\n    return fetchAuthed(url)(dispatch).then(\n        response => getJson(response, 200),\n        error => dispatch(serviceError(error.message))\n    ).then(\n        json => {\n            if (json.properties !== dataset.properties) {\n                //refetch the latest workflow since notebook might have been modified since the request to initiate profiling was sent\n                return fetchAuthed(notebook.workflow.links.get(HATEOAS_BRANCH_HEAD))(dispatch).then(\n                    response => getJson(response, 200),\n                    error => dispatch(serviceError(error.message))\n                ).then(\n                    wfJson => (dispatch(updateNotebookFromProperties(notebook, wfJson, module.id, new OutputDataset(new DatasetHandle(json.id, dataset.name, dataset.activeCell).fromJson(json))))),\n                    error => dispatch(workflowFetchError(error.message))\n                )\n            }\n        },\n        error => dispatch(setNotebookCellError(notebook, module, 'module status', error.message))\n    )\n}\n/**\n * Request dataset properties from the API and updates the latest notebook\n */\nexport const updateCellDatasetProperties = (getLatestNotebook, module, dataset, offset, limit, profile) => (dispatch) => {\n    // Use dataset self reference to create fect URL\n    let url = dataset.links.getDatasetUrl(offset, limit, profile);\n    return dispatch(\n        fetchResource(\n            url,\n            (json) => (updateNotebook(\n                getLatestNotebook().replaceOutput(\n                    module.id,\n                    new OutputDataset(\n                        new DatasetHandle(\n                            json.id,\n                            dataset.name,\n                            dataset.activeCell\n                        ).fromJson(json)\n                    )))),\n            (message) => (\n                setNotebookCellError(getLatestNotebook(), module, 'dataset ' + dataset.name, message)\n            )\n        )\n    )\n}\n\n// -----------------------------------------------------------------------------\n// Show notebook cell output\n// -----------------------------------------------------------------------------\n\n/**\n * Hide output by setting it to an empty text output.\n */\nexport const hideCellOutput = (notebook, module) => (dispatch) => {\n    const out = new OutputHidden();\n    dispatch(updateNotebook(notebook.replaceOutput(module.id, out)))\n};\n\n\n/**\n * Show the chart with the given name in the notebook cell.\n */\nexport const showCellChart = (notebook, module, name) => (dispatch) => {\n    // If the chart was in the module output we can directly dispatch it.\n    // Otherwise we need to fetch the resource from the server first.\n    let isInOutput = false;\n    if (module.outputs.stdout.length === 1) {\n        if (module.outputs.stdout[0].type === 'chart/view') {\n            isInOutput = (module.outputs.stdout[0].value.data.name === name);\n        }\n    }\n    if (isInOutput) {\n        const val = module.outputs.stdout[0].value;\n        const out = new OutputChart(val.data.name, val.result)\n        dispatch(updateNotebook(notebook.replaceOutput(module.id, out)));\n    } else {\n        // Find the chart descriptor in the module\n        let chart = null;\n        for (let i = 0; i < module.charts.length; i++) {\n            if (module.charts[i].name === name) {\n                chart = module.charts[i];\n                break;\n            }\n        }\n        if (chart !== null) {\n            // Use the chart's self reference to fetch the data frm the Web API.\n            const url = new HATEOASReferences(chart.links).getSelf()\n\n            dispatch(\n                fetchResource(\n                    url,\n                    (json) => {\n                        const output = new OutputChart(name, json.data);\n                        const nb = notebook.replaceOutput(module.id, output);\n                        return updateNotebook(nb);\n                    },\n                    (message) => (\n                        setNotebookCellError(notebook, module, 'chart', message)\n                    ),\n                    () => (setNotebookCellBusy(notebook, module))\n            ))\n        }\n    }\n}\n\n\n/**\n * Show (a subset of rows for) a given dataset in the output area of a notebook\n * cell. The data is fetched from the Web API. The url to fetch the dataset is\n * constructed using the  given offset and limit values.\n */\nexport const showCellDataset = (notebook, module, dataset, offset, limit) => (dispatch) => {\n    // Use dataset self reference to create fect URL\n    let url = dataset.links.getDatasetUrl(offset, limit);\n    return dispatch(\n        fetchResource(\n            url,\n            (json) => (updateNotebook(\n                notebook.replaceOutput(\n                    module.id,\n                    new OutputDataset(\n                        new DatasetHandle(\n                            json.id,\n                            dataset.name,\n                            dataset.activeCell\n                        ).fromJson(json)\n            )))),\n            (message) => (\n                setNotebookCellError(notebook, module, 'dataset ' + dataset.name, message)\n            )\n        )\n    )\n}\n\n\n/**\n * Change the output of a notebook cell to show the text that was written to\n * standard output during execution of the workflow module that is associated\n * with the cell.\n */\nexport const showCellStdout = (notebook, module) => (dispatch) => {\n    const out = StandardOutput(module);\n    dispatch(updateNotebook(notebook.replaceOutput(module.id, out)))\n};\n\n\n/**\n * Change the output of a notebook cell to show the timestamps for the different\n * stages of cell execution.\n */\nexport const showCellTimestamps = (notebook, module) => (dispatch) => {\n    const { createdAt, startedAt, finishedAt } = module.timestamps;\n    const out = new OutputTimestamps(createdAt, startedAt, finishedAt);\n    dispatch(updateNotebook(notebook.replaceOutput(module.id, out)))\n};\n\n\n// -----------------------------------------------------------------------------\n// Modify Workflow\n// -----------------------------------------------------------------------------\n\n/**\n * Cancel execution of a running workflow. The result is handle of the modified\n * workflow. We use this to update the notebook accordingly.\n */\nexport const cancelWorkflowExecution = (notebook) => (dispatch) => (\n    dispatch(\n        postResourceData(\n            notebook.workflow.links.get(HATEOAS_WORKFLOW_CANCEL),\n            {},\n            (json) => {\n                // Get the new workflow handle\n                const wf = new WorkflowHandle(\n                    notebook.workflow.engine\n                ).fromJson(json);\n                return {\n                    type: UPDATE_NOTEBOOK,\n                    notebook: notebook.updateWorkflow(wf)\n                };\n            },\n            workflowFetchError\n        )\n    )\n)\n\n\n/**\n * Delete a cell in the current notebook. This action is only applicable to\n * cells that contain an existing module in the current workflow.\n *\n * Expects the module handle as argument. The handle contains the delete url\n * in the set of HATEOAS links. The result of a successful delete request is\n * a Json object that is expected to contain the handle for the new workflow\n * (.workflow) and the information for the workflow notebook (.modules and\n * (.datasets).\n */\nexport const deleteNotebookCell = (notebook, cell) => (dispatch) => {\n    // Signal start by setting the project action flag\n    dispatch(requestProjectAction());\n    return fetchAuthed(\n        cell.module.links.get(HATEOAS_MODULE_DELETE),\n        {method: 'DELETE'}\n    )(dispatch).then(function(response) {\n        if (response.status === 200) {\n            // SUCCESS: Dispatch updated notebook for new workflow handle\n            checkResponseJsonForReAuth(response).then(json => dispatch(updateNotebook(notebook, json)));\n        } else if(response.status === 401) {\n        \t// UNAUTHORIZED: re-request auth\n        \tdispatch(requestAuth())\n        } else {\n            // ERROR: The API is expected to return a JSON object in case\n            // of an error that contains an error message\n            checkResponseJsonForReAuth(response).then(json => dispatch(\n                projectActionError('Error deleting module', json.message)\n            ))\n        }\n    })\n    .catch(err => dispatch(\n        projectActionError('Error while deleting module', err.message)\n    ))\n}\n\n\n/**\n * Insert a new cell into a notebook. The position at which the cell is inserted\n * is identified by the given Url. Creates a POST request using the given\n * data object. The object is expected to contain a valid request body.\n *\n * Parameters:\n *\n * url: string\n * data: {type: string, id: string, arguments: object}\n */\nexport const insertNotebookCell = (notebook, url, data, modifiedCellId) => (dispatch) => {\n    return dispatch(updateNotebookCell(notebook, url, 'POST', data, modifiedCellId));\n}\n\n\n/**\n * Replace a cell in a notebook. The replaced cell is identified by the given\n * Url. Creates a PUT request using the given data object. The object is\n * expected to contain a valid request body.\n *\n * Parameters:\n *\n * url: string\n * data: {type: string, id: string, arguments: object}\n */\nexport const replaceNotebookCell = (notebook, url, data, modifiedCellId) => (dispatch) => {\n    return dispatch(updateNotebookCell(notebook, url, 'PUT', data, modifiedCellId));\n}\n\n\n/**\n * Freeze a specified cell in the notebook an d its successors.\n */\nexport const freezeOrThawNotebookCell = (notebook, url, modifiedCellId) => (dispatch) => {\n    dispatch(updateNotebookCell(notebook, url, 'POST', {}, modifiedCellId));\n}\n\n\n/**\n * Update a cell in a notebook. This could either insert a new notebook cell or\n * replace an existing cell. The data object contains the module specification\n * and user provided input parameters.\n *\n * Parameters:\n *\n * url: string\n * action: POST or PUT\n * data: {type: string, id: string, arguments: object}\n */\nexport const updateNotebookCell = (notebook, url, action, data, modifiedCellId) => (dispatch) => {\n    // Signal start by setting the project action flag\n    dispatch(requestProjectAction());\n    // Independently of whether we insert or append the request is a POST\n    // containing the module specification as its body.\n    return fetchAuthed(\n        url,\n        {\n            method: action,\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }\n    )(dispatch).then(function(response) {\n        if (response.status === 200) {\n            // SUCCESS: Dispatch modified notebook resource. The result is\n            // expected to be a Json object with WorkflowHandle (.workflow)\n            // and the new nootebook information (.modules and .datasets)\n            checkResponseJsonForReAuth(response).then(json => (\n                dispatch(updateNotebook(notebook, json, modifiedCellId)))\n            );\n        } else if(response.status === 401) {\n        \t// UNAUTHORIZED: re-request auth\n        \tdispatch(requestAuth())\n        } else {\n            // ERROR: The API is expected to return a JSON object in case\n            // of an error that contains an error message\n            checkResponseJsonForReAuth(response).then(json => (dispatch(\n                projectActionError('Error updating notebook', json.message)\n            )));\n        }\n    })\n    .catch(err => dispatch(\n        projectActionError('Error updating notebook', err.message)\n    ))\n}\n\n\n/**\n * Update a cell in a notebook. If the new cell command is VIZUAL LOAD we need\n * to upload any specified file first (unless the file has already been uploaded\n * previously which is indicated by a fileid that is not null).\n * After any potential file upload the provided notebook modifier function is\n * called with the approriate request body data.\n *\n * Parameters:\n *\n * modifyUrl: string\n * data: {type: string, id: string, arguments: object}\n * notebookModifier: func(url, data)\n * uploadUrl: string\n *\n */\nexport const updateNotebookCellWithUpload = (notebook, modifyUrl, data, notebookModifier, modifiedCellId, uploadUrl, fileArg, onProgressUpdate) => (dispatch) => {\n    const { file } = fileArg.value;\n    const uploadReqData = new FormData();\n    uploadReqData.append('file', file);\n    const req = {\n        method: 'POST',\n        body: uploadReqData\n    }\n    let config = {\n        onUploadProgress: function(progressEvent) {\n            onProgressUpdate && onProgressUpdate(Math.round( (progressEvent.loaded * 100) / progressEvent.total));\n        }\n    };\n    // updated methodology to use axios post instead of the native fetch() method, to enable upload progress tracking\n    return getAuthed(\n            uploadUrl,\n            req,\n            config\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Fetch updated file identifier and modify the\n                // request body to update the notebook.\n                checkResponseJsonForReAuth(response, false).then(json => {\n                    console.log('FILE RESPONSE');\n                    console.log(json);\n                    fileArg.value.fileid = json.id;\n                    console.log('REQ')\n                    console.log(data)\n                    return dispatch(notebookModifier(notebook, modifyUrl, data, modifiedCellId));\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message. For some response\n                // codes, however, this is not true (e.g. 413).\n                // TODO: Catch the cases where there is no Json response\n                checkResponseJsonForReAuth(response, false).then(json => dispatch(\n                    projectActionError('Error updating workflow', json.message))\n                )\n            }\n        })\n        .catch(err => {\n            let msg = err.message;\n            if (msg === 'NetworkError when attempting to fetch resource.') {\n                msg = 'Connection closed by server. The file size may exceed the server\\'s upload limit.'\n            }\n            dispatch(projectActionError('Error updating workflow', msg))\n        });\n}\n\n\n/**\n * Set notebook resource in the notebook page state. The semantics of the first\n * parameter depends on the presence of the second parameter.\n *\n * If only a notebook is given it is expected to be the new notebook resource.\n * If an additional json object is given this object is expected to contain the\n * workflow handle of the updated workflow. The notebook in this case is the\n * current notebook that needs to be updated using the new workflow handle. The\n * optional modified cell identifier is the identifier of the cell that\n * triggered the update.\n */\nexport const updateNotebook = (notebook, json, modifiedCellId) => {\n    // Create an updated notebook resource if the workflow handle is given\n    if (json != null) {\n        const wf = new WorkflowHandle(notebook.workflow.engine).fromJson(json);\n        notebook = notebook.updateWorkflow(wf, modifiedCellId);\n    }\n    return {\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook\n    }\n};\n/***\n * Create a new notebook from the latest workflow and new dataset handle with properties\n */\nexport const updateNotebookFromProperties = (notebook, wfJson, modifiedCellId, outputDataset)=> {\n    const wf = new WorkflowHandle(notebook.workflow.engine).fromJson(wfJson);\n    return {\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook\n            .updateWorkflow(wf, modifiedCellId)\n            .replaceOutput(modifiedCellId, outputDataset)\n    }\n}","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * Reducer for actions that affect the notebook page.\n */\n\nimport { RECEIVE_WORKFLOW, REQUEST_WORKFLOW, SET_ACTIVE_NOTEBOOK_CELL,\n    UPDATE_NOTEBOOK } from '../../actions/project/Notebook';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT } from '../../actions/project/Project';\nimport { Notebook } from '../../resources/Notebook';\n\n\n/**\n * STATE:\n *\n * activeCell: Identifier of the active cell\n * fetchError: Error while loading the project handle or workflow handle\n * groupMode: Mode for grouping Vizual commands\n * isFetching: Load of project handle or workflow handle in progress\n * notebook: Notebook for the current workflow handle\n * reversed: Order of cells in a notebook\n */\n\nconst INITIAL_STATE = {\n    activeCell: null,\n    fetchError: null,\n    isFetching: false,\n    notebook: null,\n    reversed: false,\n}\n\nexport const spreadsheetPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_WORKFLOW:\n            return {\n                ...state,\n                activeCell: null,\n                isFetching: false,\n                fetchError: null,\n                notebook: new Notebook(action.workflow).fromWorkflow(action.workflow)\n            };\n        case RECEIVE_PROJECT:\n            return {...state, activeCell: null, notebook: null};\n        case REQUEST_PROJECT:\n        case REQUEST_WORKFLOW:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case SET_ACTIVE_NOTEBOOK_CELL:\n            return {...state, activeCell: action.cellId};\n        case UPDATE_NOTEBOOK:\n            return {...state, notebook: action.notebook};\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Annotation object for a database cell. Contains all annotations for a\n * given cell.\n *\n */\nexport class CellAnnotation {\n    constructor(column, row, content) {\n        this.column = column;\n        this.row = row;\n        this.content = content;\n    }\n    /**\n     * Test if the annotation is for a given column-id, row-id pair.\n     */\n    isActive(columnId, rowId) {\n        return ((this.column === columnId) && (this.row === rowId));\n    }\n}\n\n\nexport class NoAnnotation {\n    constructor(column, row, content) {\n        this.column = -1;\n        this.row = -1;\n    }\n    /**\n     * Test if the annotation is for a given column-id, row-id pair.\n     */\n    isActive(columnId, rowId) {\n        return false;\n    }\n}\n\n\n/**\n * Annotation content indicating that annotations are currently being fetched.\n */\nexport class IsFetching {\n    isFetching() {\n        return true;\n    }\n    isError() {\n        return false;\n    }\n}\n\n\n/**\n * Annotation content containing an error that occured while fetching\n * annotations.\n */\nexport class FetchError {\n    constructor(title, message) {\n        this.title = title;\n        this.message = message;\n    }\n    isFetching() {\n        return false;\n    }\n    isError() {\n        return true;\n    }\n}\n\n\n/**\n * List of annotation objects. The objects are expected to be (key,value)-pairs.\n */\nexport class AnnotationList {\n    constructor(items) {\n        this.items = items;\n    }\n    isFetching() {\n        return false;\n    }\n    isError() {\n        return false;\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    projectActionError, receiveProjectResource, requestProjectAction } from './Project';\nimport { updateNotebook } from './Notebook';\nimport {\n    CellAnnotation, NoAnnotation, IsFetching, FetchError, AnnotationList\n} from '../../resources/Annotation';\nimport { DatasetHandle } from '../../resources/Dataset';\n//import { WorkflowHandle } from '../../resources/Workflow';\n// import { Notebook } from '../../resources/Notebook';\nimport { SpreadsheetResource, DatasetCaveatResource } from '../../util/App'\n// import { WorkflowHandle } from '../../resources/Workflow';\nimport { fetchResource, postResourceData } from '../../util/Api';\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../main/Service';\nimport { HATEOAS_MODULE_APPEND } from '../../util/HATEOAS';\nimport { VIZUAL_OP, VIZUAL } from '../../util/Vizual'\n// Actions to indicate that the spreadsheet is currently being updated\nexport const SUBMIT_UPDATE_REQUEST = 'SUBMIT_UPDATE_REQUEST';\n//Actions to indicate that the dataset caveats are currently being updated\nexport const REQUEST_CAVEATS = 'REQUEST_CAVEATS';\n// Set the cell annotation object for a selected dataset cell\nexport const SET_ANNOTATIONS = 'SET_ANNOTATIONS';\n// Signal an update to the datasets annotations\nexport const UPDATE_DATASET_ANNOTATIONS = 'UPDATE_DATASET_ANNOTATIONS'\n\n\n/**\n * Show a spreadsheet as the content of the project page. The url parameter is\n * optional. If not given, loads the spreadsheet datat using the .self url from\n * the given dataset descriptor.\n *\n * Parameters:\n *\n * dataset: DatasetDescriptor\n *\n */\nexport const showSpreadsheet = (dataset, url) => (dispatch) => {\n\tconst { id, name, offset } = dataset;\n\tlet fetchUrl = null;\n\tlet dsoffset = 0;\n    if(offset){\n    \tdsoffset = offset;\n    }\t\n\tif (url) {\n        fetchUrl = url;\n    } else {\n        fetchUrl = dataset.links.getDatasetUrl(dsoffset, 25);\n    }\n    dispatch(\n        fetchResource(\n            fetchUrl,\n            (json) => (dispatch) => {\n                return dispatch(receiveProjectResource(\n                    SpreadsheetResource(\n                        new DatasetHandle(id, name)\n                            .fromJson(json)\n                    )\n                ));\n            },\n            (message) => (\n                projectActionError('Error loading spreadsheet', message)\n            ),\n            requestProjectAction\n        )\n    )\n}\n\n/**\n * Show (a subset of rows for) a given dataset in the output area of a notebook\n * cell. The data is fetched from the Web API. The url to fetch the dataset is\n * constructed using the  given offset and limit values.\n */\nexport const showModuleSpreadsheet = (dataset, offset, limit, moduleId) => (dispatch) => {\n    // Use dataset self reference to create fect URL\n    let url = dataset.links.getDatasetUrl(offset, limit);\n    dispatch(\n        fetchResource(\n            url,\n            (json) => (dispatch) => {\n            \tjson.moduleId = moduleId;\n                return dispatch(receiveProjectResource(\n                    SpreadsheetResource(\n                        new DatasetHandle(\n                            json.id,\n                            dataset.name\n                        ).fromJson(json)\n                    )\n                ));\n            },\n            (message) => (\n            \t\tprojectActionError('Error loading spreadsheet', message)\n            )\n        )\n    )\n}\n\n/**\n * Show a dataset errors as the content of the project page. The url parameter is\n * optional. If not given, loads the spreadsheet datat using the .self url from\n * the given dataset descriptor.\n *\n * Parameters:\n *\n * dataset: DatasetDescriptor\n *\n */\nexport const showDatasetCaveat = (dataset, url) => (dispatch) => {\n    let fetchUrl = null;\n    if (url) {\n        fetchUrl = url;\n    } else {\n        fetchUrl = dataset.links.self +'/annotations';\n    }\n    dispatch(submitCaveatRequest());\n    dispatch(\n        fetchResource(\n            fetchUrl,\n            (json) => (dispatch) => {\n                return dispatch(receiveProjectResource(\n                    new DatasetCaveatResource(\n                        new DatasetHandle(dataset.id, dataset.name),\n                        new AnnotationList(json)\n                    )\n                ));\n            },\n            (message) => (\n                projectActionError('Error loading dataset errors', message)\n            ),\n            requestProjectAction\n        )\n    )\n}\n\nexport const repairDatasetCaveat = (dataset, url, reason, repair, acknowledge) => (dispatch) => {\n    const data = {\n    \t\treason,\n            repair,\n            acknowledge\n        }\n    const columnId = -1\n    const rowId = '-1'\n    return postResourceData(\n            dispatch,\n            url,\n            data,\n            (json) => (dispatch) => {\n                return dispatch(receiveProjectResource(\n                    new DatasetCaveatResource(\n                        new DatasetHandle(dataset.id, dataset.name),\n                        new AnnotationList(json['annotations'])\n                    )\n                ));\n            },\n            (message) => {\n                const err = new FetchError('Error loading annotations', message);\n                const annotation = new CellAnnotation(columnId, rowId, err);\n                return setAnnotations(annotation);\n            },\n            requestProjectAction\n        );\n    }\n\nexport const submitUpdate = (notebook, dataset, cmd, moduleIndex) => (dispatch) => {\n    // const { name, offset } = dataset;\n\tconst upcmd = cmd;\n    dispatch(submitUpdateRequest());\n    const updateBody = {\n            method: 'POST',\n            body: JSON.stringify({...cmd}),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n        };\n    let update = null;\n    if(moduleIndex){\n    \tconst url = notebook.workflow.modules[moduleIndex].links[0].href;\n    \tupdate = fetchAuthed(\n    \t\t\turl,\n                updateBody\n            );\n    }\n    else {\n    \tupdate = fetchAuthed(\n    \t\t\tnotebook.workflow.links.get(HATEOAS_MODULE_APPEND),\n                updateBody\n            );\n    }\n    \n    return update(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => {\n                \tlet upds = dataset\n                \tlet moduleId = \"__0__\";\n                \tif(moduleIndex){\n                \t\tlet newModuleIndex = moduleIndex;\n                \t\tconst newModuleId = json.modules[newModuleIndex].id;\n                \t\tmoduleId = json.modules[moduleIndex-1].id;\n                    \tupds.moduleId = newModuleId;\n                    \tupds.moduleIndex = newModuleIndex;\n                \t}\n                \t//add updates to current dataset -- trick to make not need to wait for dataset fetch\n                \tif(upcmd.packageId === VIZUAL_OP && upcmd.commandId === VIZUAL.UPDATE_CELL){\n                \t\tupds.rows.find((row) => (row.id === upcmd.arguments[2].value)).values[upcmd.arguments[1].value] = upcmd.arguments[3].value\n                \t}\n                \tif(upcmd.packageId === VIZUAL_OP && upcmd.commandId === VIZUAL.RENAME_COLUMN){\n                \t\tupds.columns.find((col) => (col.id === upcmd.arguments[1].value)).name = upcmd.arguments[2].value\n                \t}\n                \t\n                \telse if(upcmd.packageId === \"mimir\" && upcmd.commandId === \"comment\"){\n                \t\tconst colName = upcmd.arguments[1].value[0][0].value;\n                \t\tconst nameEquals = (col) => col.name === colName;\n                \t\tconst columnId = upds.columns.findIndex(nameEquals); \n                \t\tupds.rows.find((row) => (row.id === upcmd.arguments[1].value[0][2].value)).rowAnnotationFlags[columnId] = false\n                \t}\n                \t//we shoule also fire off a fetch of the new dataset here or something more clever that needs to be designed \n                \t// like partial spreadsheet fetch like above but the right way. \n                \t//const wf = new WorkflowHandle(notebook.workflow.engine).fromJson(json);\n                \tdispatch(updateNotebook(notebook, json, moduleId));\n                \tdispatch(receiveProjectResource(\n                            SpreadsheetResource(upds)));\n                \t\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                    projectActionError('Error updating spreadsheet', json.message))\n                );\n            }\n        })\n        .catch(err => dispatch(\n            projectActionError('Error updating spreadsheet', err.message))\n        )\n}\n\n\n/**\n * Signal that the spreadsheet is currently being updated.\n */\nexport const submitUpdateRequest = () => ({\n    type: SUBMIT_UPDATE_REQUEST\n})\n\n/**\n * Signal that the dataset caveats are currently being updated.\n */\nexport const submitCaveatRequest = () => ({\n    type: REQUEST_CAVEATS\n})\n\n// -----------------------------------------------------------------------------\n// Annotations\n// -----------------------------------------------------------------------------\n\n/**\n * Close an annotation dialog by setting the current annotation object to null.\n */\nexport const clearAnnotations = () => (setAnnotations(new NoAnnotation()));\n\nexport const deleteAnnotations = (dataset, columnId, rowId, annoId) => (dispatch) => {\n    const data = {\n        columnId,\n        rowId,\n        annoId\n    }\n    return postUpdateRequest(\n        dispatch,\n        dataset.links.annotations,\n        data,\n        dataset,\n        columnId,\n        rowId\n    );\n}\n\nexport const fetchAnnotations = (dataset, columnId, rowId) => (dispatch) => {\n    let params = '?column=' + columnId + '&row=' + rowId;\n    let annoLink = '';\n    if(dataset.links.annotations){\n    \tannoLink = dataset.links.annotations + params;\n    }\n    else{\n    \tannoLink = dataset.links.links[3].href + params;\n    }\n    if ((columnId < 0)) {\n        return dispatch(clearAnnotations());\n    } else {\n        return dispatch(\n            fetchResource(\n            \tannoLink,\n                (json) => {\n                    const content = new AnnotationList(json)\n                    const annotation = new CellAnnotation(columnId, rowId, content);\n                    return setAnnotations(annotation);\n                },\n                (message) => {\n                    const err = new FetchError('Error loading annotations', message);\n                    const annotation = new CellAnnotation(columnId, rowId, err);\n                    return setAnnotations(annotation);\n                },\n                () => (setAnnotations(new CellAnnotation(columnId, rowId, new IsFetching())))\n            )\n        )\n    }\n}\n\n\nconst postUpdateRequest = (dispatch, url, data, dataset, columnId, rowId) => {\n    return dispatch(postResourceData(\n        url,\n        data,\n        (json) => {\n            const content = new AnnotationList(json['annotations'])\n            const annotation = new CellAnnotation(columnId, rowId, content);\n            const isAnnotated = (json['annotations'].length > 0);\n            dispatch({\n                type: UPDATE_DATASET_ANNOTATIONS,\n                dataset: dataset.updateAnnotations(columnId, rowId, isAnnotated)\n            });\n            return setAnnotations(annotation);\n        },\n        (message) => {\n            const err = new FetchError('Error loading annotations', message);\n            const annotation = new CellAnnotation(columnId, rowId, err);\n            return setAnnotations(annotation);\n        },\n        () => (setAnnotations(new CellAnnotation(columnId, rowId, new IsFetching())))\n    ));\n}\n\nexport const setAnnotations = (annotations) => ({\n    type: SET_ANNOTATIONS,\n    annotations\n})\n\nexport const updateAnnotations = (dataset, columnId, rowId, key, value) => (dispatch) => {\n    const oldValue = ''\n    const newValue = value\n\tconst data = {\n        columnId,\n        rowId,\n        key,\n        oldValue,\n        newValue\n    }\n    let annoLink = '';\n    if(dataset.links.annotations){\n    \tannoLink = dataset.links.annotations;\n    }\n    else{\n    \tannoLink = dataset.links.links[4].href;\n    }\n    return postUpdateRequest(\n        dispatch,\n        annoLink,\n        data,\n        dataset,\n        columnId,\n        rowId\n    );\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { REQUEST_CAVEATS } from '../../actions/project/Spreadsheet';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT, RECEIVE_PROJECT_RESOURCE } from '../../actions/project/Project';\nimport { RESOURCE_DATASET_CAVEAT } from '../../util/App';\nimport { CONTENT_DATASET } from '../../resources/Outputs';\n\n/**\n* Reducer for actions that affect the branch history page.\n*/\n\n\n/**\n * STATE:\n *\n * fetchError: Error while loading the project handle or workflow listing\n * isFetching: Load of project handle or workflow listing in progress\n * workflows: List of workflow descriptors in branch history\n */\n\nconst INITIAL_STATE = {\n    fetchError: null,\n    isFetching: false,\n    workflows: null\n}\n\nexport const datasetErrorsPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_PROJECT:\n            return {...state, workflows: null};\n        case REQUEST_PROJECT:\n        case REQUEST_CAVEATS:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case RECEIVE_PROJECT_RESOURCE:\n        \tswitch (action.resource.type) {\n        \t\tcase RESOURCE_DATASET_CAVEAT:\n\t        \t    return {\n\t\t        \t    ...state,\n\t\t        \t    isFetching: false,\n\t\t                resource: action.resource\n\t\t            };\n        \t\tcase CONTENT_DATASET:\n\t        \t    return {\n\t\t        \t    ...state,\n\t\t        \t    dataset: action.resource\n\t\t            };\n        \t\tdefault:\n                    return state\n        \t}\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * Reducer for actions that affect the notebook page.\n */\n\nimport { RECEIVE_WORKFLOW, REQUEST_WORKFLOW, SET_ACTIVE_NOTEBOOK_CELL,\n    UPDATE_NOTEBOOK } from '../../actions/project/Notebook';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT } from '../../actions/project/Project';\nimport { Notebook } from '../../resources/Notebook';\n\n\n/**\n * STATE:\n *\n * activeCell: Identifier of the active cell\n * fetchError: Error while loading the project handle or workflow handle\n * groupMode: Mode for grouping Vizual commands\n * isFetching: Load of project handle or workflow handle in progress\n * notebook: Notebook for the current workflow handle\n * reversed: Order of cells in a notebook\n */\n\nconst INITIAL_STATE = {\n    activeCell: null,\n    fetchError: null,\n    isFetching: false,\n    notebook: null,\n    reversed: false,\n}\n\nexport const notebookPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_WORKFLOW:\n            return {\n                ...state,\n                activeCell: null,\n                isFetching: false,\n                fetchError: null,\n                notebook: new Notebook(action.workflow).fromWorkflow(action.workflow)\n            };\n        case RECEIVE_PROJECT:\n            return {...state, activeCell: null, notebook: null};\n        case REQUEST_PROJECT:\n        case REQUEST_WORKFLOW:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case SET_ACTIVE_NOTEBOOK_CELL:\n            return {...state, activeCell: action.cellId};\n        case UPDATE_NOTEBOOK:\n            return {...state, notebook: action.notebook};\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NO_OP } from '../main/App';\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../main/Service';\nimport { ProjectDescriptor } from '../../resources/Project';\nimport { HATEOASReferences, HATEOAS_PROJECTS_DELETE, HATEOAS_PROJECTS_LIST } from '../../util/HATEOAS';\nimport { createResource, deleteResource } from '../../util/Api'\nimport { notebookPageUrl } from '../../util/App';\nimport { sortByName } from '../../util/Sort';\n\n/**\n* Actions to update the internal state maintaining the project listing on\n* the main page.\n*/\nexport const CLEAR_PROJECT_ACTION_ERROR = 'CLEAR_PROJECT_ACTION_ERROR'\nexport const REQUEST_PROJECTS = 'REQUEST_PROJECTS'\nexport const RECEIVE_PROJECTS = 'RECEIVE_PROJECTS'\nexport const SET_PROJECT_CREATE_ERROR = 'SET_PROJECT_CREATE_ERROR'\nexport const SET_PROJECT_DELETE_ERROR = 'SET_PROJECT_DELETE_ERROR'\nexport const SET_PROJECTS_FETCH_ERROR = 'SET_PROJECTS_FETCH_ERROR'\nexport const SET_PROJECTS_UPLOAD_ERROR = 'SET_PROJECTS_UPLOAD_ERROR'\n\n\n\n/**\n * Handle errors when deleting a project.\n */\nexport const clearProjectActionError = () => ({\n    type: CLEAR_PROJECT_ACTION_ERROR\n})\n\n\n/**\n * Create a new project.\n */\nexport const createProject = (url, name, history) => (dispatch) =>  {\n    // Trim project name. If empty set to default value.\n    let projectName = name.trim();\n    if (projectName === '') {\n        projectName = 'New Project';\n    }\n    // Signal start of create project action\n    dispatch(requestProjects('Create Project ...'))\n    // Set request body\n    const data = {properties: []}\n    if (name.trim() !== '') {\n        data.properties.push({key: 'name', value: projectName})\n    }\n    // Dispatch create resource request\n    dispatch(\n        createResource(\n            url,\n            data,\n            (json) => {\n                dispatch(fetchProjects());\n                history.push(notebookPageUrl(json.id, json.defaultBranch));\n                // Avoid action undefined error\n                return ({type: NO_OP});\n            },\n            projectCreateError\n    ));\n}\n\n\n/**\n * Send DELETE request for project with given Url\n */\nexport const deleteProject = (project) => (dispatch) => {\n    dispatch(\n        deleteResource(\n            project.links.get(HATEOAS_PROJECTS_DELETE),\n            fetchProjects,\n            projectDeleteError,\n            () => (requestProjects('Delete Project ...'))\n        )\n    )\n}\n\n\n/**\n * Action to retrieve project listing. Expects that the Web Service Url has been\n * set during App initialization.\n *\n */\nexport const fetchProjects = () => (dispatch, getState) => {\n    // Get project Url from the API reference set. This set may not have been\n    // initialized yet!\n    if (getState().serviceApi.links) {\n        const url = getState().serviceApi.links.get(HATEOAS_PROJECTS_LIST);\n        // Signal start of fetching project listing\n        dispatch(requestProjects())\n        return fetchAuthed(url)(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(receiveProjects(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth());\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(projectsFetchError(json.message)));\n            }\n        })\n        .catch(err => dispatch(projectsFetchError(err.message)))\n    }\n}\n\n/**\n * upload a project export\n *\n * Parameters:\n *\n * uploadUrl: string\n *\n */\nexport const uploadProject = (uploadUrl, fileArg, history) => (dispatch) => {\n    const file = fileArg;\n    const uploadReqData = new FormData();\n    uploadReqData.append('file', file);\n    const req = {\n        method: 'POST',\n        body: uploadReqData\n    }\n    return fetchAuthed(\n            uploadUrl,\n            req\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Fetch updated file identifier and modify the\n                // request body to update the notebook.\n                checkResponseJsonForReAuth(response).then(json => {\n                    console.log('FILE RESPONSE');\n                    console.log(json);\n                    let defaultBranch = json.defaultBranch;\n                    if(!defaultBranch){\n                    \tdefaultBranch = json.branches[0].id;\n                    }\n                    history.push(notebookPageUrl(json.id, defaultBranch));\n                    // Avoid action undefined error\n                    return ({type: NO_OP});\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message. For some response\n                // codes, however, this is not true (e.g. 413).\n                // TODO: Catch the cases where there is no Json response\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                \t\tprojectsUploadError('Error updating workflow', json.message))\n                )\n            }\n        })\n        .catch(err => {\n            let msg = err.message;\n            if (msg === 'NetworkError when attempting to fetch resource.') {\n                msg = 'Connection closed by server. The file size may exceed the server\\'s upload limit.'\n            }\n            dispatch(projectsUploadError('Error updating workflow', msg))\n        });\n}\n\n\n\n/**\n * Handle errors when retrieving the project listing.\n */\nexport const projectCreateError = (error) => ({\n    type: SET_PROJECT_CREATE_ERROR,\n    error\n})\n\n\n/**\n * Handle errors when deleting a project.\n */\nconst projectDeleteError = (error) => ({\n    type: SET_PROJECT_DELETE_ERROR,\n    error\n})\n\n\n/**\n * Handle errors when retrieving the project listing.\n */\nconst projectsUploadError = (error) => ({\n    type: SET_PROJECTS_UPLOAD_ERROR,\n    error\n})\n\n/**\n * Handle errors when retrieving the project listing.\n */\nconst projectsFetchError = (error) => ({\n    type: SET_PROJECTS_FETCH_ERROR,\n    error\n})\n\n\n/**\n * Signal start of project listing fetch.\n */\nconst requestProjects = (message) => ({\n    type: REQUEST_PROJECTS,\n    message\n})\n\n\n/**\n * Handler for successful retrieval of project listing.\n */\nconst receiveProjects = (json) => {\n    const projects = [];\n    for (let i = 0; i < json.projects.length; i++) {\n        projects.push(new ProjectDescriptor().fromJson(json.projects[i]));\n    }\n    sortByName(projects);\n    return {\n        type: RECEIVE_PROJECTS,\n        projects: projects,\n        links: new HATEOASReferences(json.links)\n    };\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CLEAR_PROJECT_ACTION_ERROR, REQUEST_PROJECTS, RECEIVE_PROJECTS,\n  SET_PROJECT_CREATE_ERROR, SET_PROJECT_DELETE_ERROR, SET_PROJECTS_FETCH_ERROR\n} from '../../actions/project/ProjectListing'\nimport { ErrorObject } from '../../util/Error';\n\n\n/**\n* Reducer for actions that retrieve the Vizier DB Web Service API descriptor.\n*/\n\n\nconst DEFAULT_FETCH_MESSAGE = 'Loading Projects ...';\n\n\n/**\n * STATE:\n *\n * deleteError: Error while deleting a project\n * fetchError: Error while fetching project listing\n * isFetchig: Flag indicating whether fetching is in progress\n * projects: List of retrieved project resources.\n * links: HATEOASReferences\n */\n\nconst INITIAL_STATE = {\n    actionError: null,\n    fetchError: null,\n    fetchMessage: DEFAULT_FETCH_MESSAGE,\n    isFetching: false,\n    projects: null,\n    links: null\n}\n\n\nexport const projectListing = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CLEAR_PROJECT_ACTION_ERROR:\n            return {...state, actionError: null};\n        case REQUEST_PROJECTS:\n            let message = DEFAULT_FETCH_MESSAGE;\n            if (action.message != null) {\n                message = action.message;\n            }\n            return {\n                ...state,\n                isFetching: true,\n                fetchMessage: message\n            }\n        case RECEIVE_PROJECTS:\n            return {\n                ...state,\n                fetchError: null,\n                isFetching: false,\n                projects: action.projects,\n                links: action.links\n            }\n        case SET_PROJECT_CREATE_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                actionError: new ErrorObject('Error creating project', action.error)\n            }\n        case SET_PROJECT_DELETE_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                actionError: new ErrorObject('Error deleting project', action.error)\n            }\n        case SET_PROJECTS_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error,\n                projects: []\n            }\n    default:\n      return state\n  }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_BRANCH } from '../../actions/project/Branch';\nimport { UPDATE_NOTEBOOK } from '../../actions/project/Notebook';\nimport {\n  PROJECT_ACTION_ERROR, PROJECT_FETCH_ERROR, RECEIVE_PROJECT,\n  RECEIVE_PROJECT_RESOURCE, REQUEST_PROJECT, REQUEST_PROJECT_ACTION,\n  UPDATE_PROJECT, UPDATE_RESOURCE, UPDATE_WORKFLOW\n} from '../../actions/project/Project';\n\n/**\n* Reducer for actions that retrieve the Vizier DB Web Service API descriptor.\n*/\n\n\n/**\n * STATE:\n *\n * actionError: Error while loading or updating a project resource\n * fetchError: Error while loading the project handle\n * isActive: Loading or updating a project resource is in progress\n * isFetching: Load of project handle in progress\n * project: The project handle\n * resource: A project resource object that has been loaded\n * workflow: Workflow handle\n */\n\nconst INITIAL_STATE = {\n    actionError: null,\n    branch: null,\n    fetchError: null,\n    isActive: false,\n    isFetching: false,\n    project: null,\n    resource: null\n}\n\nexport const projectPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case REQUEST_PROJECT:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case REQUEST_PROJECT_ACTION:\n            return {\n                ...state,\n                isActive: true\n            };\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                branch: null,\n                fetchError: action.error,\n                isFetching: false,\n                project: null\n            };\n        case PROJECT_ACTION_ERROR:\n            return {\n                ...state,\n                isActive: false,\n                isFetching: false,\n                actionError: action.error\n            };\n        case RECEIVE_PROJECT:\n            return {\n                ...state,\n                actionError: null,\n                branch: action.branch,\n                fetchError: null,\n                isActive: false,\n                isFetching: false,\n                project: action.project,\n                resource: null,\n                workflow: action.workflow\n            };\n        case RECEIVE_PROJECT_RESOURCE:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                resource: action.resource\n\n            };\n        case UPDATE_BRANCH:\n            return {\n                ...state,\n                branch: action.branch,\n                isActive: false,\n                project: action.project\n            };\n        case UPDATE_NOTEBOOK:\n            return {...state, actionError: null, isActive: false};\n        case UPDATE_PROJECT:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                project: action.project\n            };\n        case UPDATE_RESOURCE:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                resource: action.resource\n            };\n        case UPDATE_WORKFLOW:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                resource: action.resource,\n                workflow: action.workflow\n            };\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Set of commands that are supported by the workflow engine which is associated\n * with a curation project. Each command represents a module specification that\n * can be used to define modules in a workflow (-> cells in a notebook). We\n * sometimes refer to a command specification as module.\n *\n * Each command specification belongs to a package and has an indentifier that\n * is unique in the package. In the registry we use the combination of package\n * identifier and command identifier as module (spec.) identifier.\n *\n * The module registry has the following main components:\n *\n * .module: Associative array that provides access to modules by their id.\n * .package: Associative array that provides access to module packages. Each\n *   package in turn is an list of modules in that package.\n * .types: List pf package identifier\n */\n\nimport { sortByName } from '../util/Sort';\nimport {formatBytes} from \"../util/App\";\n\n\n/**\n * Constants for supported datatypes of command parameters in the command\n * specifications that are included in the module registry that is obtained\n * from the API..\n */\n\nexport const DT_BOOL = 'bool';\nexport const DT_CODE = 'code';\nexport const DT_COLUMN_ID = 'colid';\nexport const DT_DATASET_ID = 'dataset';\nexport const DT_ARTIFACT_ID = 'artifact';\nexport const DT_DECIMAL = 'decimal';\nexport const DT_FILE_ID = 'fileid';\nexport const DT_INT = 'int';\nexport const DT_LIST = 'list';\nexport const DT_RECORD = 'record';\nexport const DT_ROW_INDEX = 'rowidx';\nexport const DT_ROW_ID = 'rowid';\nexport const DT_SCALAR = 'scalar';\nexport const DT_STRING = 'string';\nexport const DT_URL = 'url'\n\n/**\n * Declaration of a command in a workflow package. The command maintains a\n * nested list of parameter declarations based on the defined parent-child\n * relationships in the parameter list.\n *\n * The command declaration also maintains a reference to a top-level parameter\n * of type DT_CODE (if it exist). We currently assume that there is at most\n * one code parameter for a command declaration.\n */\nclass CommandDeclaration {\n    constructor(packageId) {\n        this.packageId = packageId;\n    }\n    fromJson(obj) {\n        this.id = obj.id;\n        this.name = obj.name;\n        this.description = obj.description;\n        this.suggest = obj.suggest;\n        // Sort parameters by identifier to ensure that they will be rendered\n        // in the correct order. Then convert the flat list of parameters\n        // into a nested list based on parent-child relationships\n        obj.parameters.sort((a, b) => (a.index - b.index));\n        this.parameters = nestCommandParameters(obj.parameters);\n        // Set the code parameter property for faster access when rendering\n        // notebook cells\n        this.codeParameter = this.parameters.find((p) => (p.datatype === DT_CODE));\n        // Do the same for the file id property\n        this.fileParameter = this.parameters.find((p) => (p.datatype === DT_FILE_ID));\n        return this;\n    }\n}\n\n\n/**\n * The package declaration contains the declarations for all commands in a\n * package of workflow modules.\n */\nclass PackageDeclaration {\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name;\n        this.category = json.category;\n        // Maintain a list of all commands sorted by their name\n        this.elements = [];\n        this.commands = {};\n        for (let i = 0; i < json.commands.length; i++) {\n            const cmd = new CommandDeclaration(json.id).fromJson(json.commands[i]);\n            this.commands[cmd.id] = cmd;\n            this.elements.push(cmd);\n        }\n        // Sort the command listing by name\n        sortByName(this.elements);\n        return this;\n    }\n    /**\n     * Get a listing of all commands in the package.\n     */\n    toList() {\n        return this.elements;\n    }\n}\n\n\n/**\n * The package registry contains a list of all packages. Each package contains\n * a list of all commands in the package. The registry also maintains a package\n * index that enables access to a package by its identifier.\n */\nexport class PackageRegistry {\n    fromJson(json) {\n        // Maintain a list of all packages\n        this.elements = [];\n        // Maintain an index of packages where packages are accessible by their\n        // identifier\n        this.packages = {};\n        for (let i = 0; i < json.length; i++) {\n            const pckg = new PackageDeclaration().fromJson(json[i]);\n            this.packages[pckg.id] = pckg;\n            this.elements.push(pckg);\n        }\n        // Sort package list by package name\n        sortByName(this.elements);\n        return this;\n    }\n    /**\n     * Get the specification for a given command.\n     */\n    getCommandSpec(packageId, commandId) {\n    \tif(packageId && commandId){\n            return this.packages[packageId].commands[commandId];\n    \t}\n    \telse return {name:'Create'}\n    }\n    /**\n     * Get a listing of package declarations in the registry.\n     */\n    toList() {\n        return this.elements;\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Convert form values for the gien command specification into a format that is\n * expected by the API.\n *\n * The API expects a list of arguments that are id-value pairs. For rows and\n * lists the argument value may be nested.\n *\n * Returns an object that contains the request and a\n * potentially empty list of error messages for form values that failed to\n * validate.\n */\nexport const formValuesToRequestData = (values, parameters, serviceProperties) => {\n    const result = {data: [], errors: []};\n    for (let i = 0; i < parameters.length; i++) {\n        const para = parameters[i];\n        let val = values[para.id];\n        if (para.datatype === DT_RECORD) {\n            if (val != null) {\n                const recordResult = formValuesToRequestData(\n                    val,\n                    para.parameters\n                );\n                result.data.push({id: para.id, value: recordResult.data});\n                recordResult.errors.forEach((err) => (result.errors.push(err)))\n            } else if (para.required) {\n                result.errors.push('Missing value for ' + para.name);\n            }\n        } else if (para.datatype === DT_LIST) {\n            if ((val != null) && (val.length > 0)) {\n                const rows = [];\n                for (let r = 0; r < val.length; r++) {\n                    const rowResult = formValuesToRequestData(\n                        val[r],\n                        para.parameters\n                    );\n                    rows.push(rowResult.data);\n                    rowResult.errors.forEach((err) => (result.errors.push(err)))\n                }\n                result.data.push({id: para.id, value: rows});\n            } else if (para.required) {\n                result.errors.push('Missing value for ' + para.name);\n            }\n        } else {\n            const dt = para.datatype;\n            if ((dt === DT_INT)) {\n                val = parseInt(val, 10);\n            } else if (dt === DT_DECIMAL) {\n                val = parseFloat(val);\n            }\n            validateArgument(val, para, result.errors, serviceProperties);\n            result.data.push({id: para.id, value: val});\n        }\n    }\n    return result;\n}\n\n\n/**\n * Returns the selected dataset if the command specification has a top-level\n * argument of type 'dataset' and the value in the module form for this\n * argument is set.\n */\nexport const getSelectedDataset = (commandSpec, values, datasets) => {\n    // If values is undefined we can return immediately\n    if (values == null) {\n        return null;\n    }\n    for (let i = 0; i < commandSpec.parameters.length; i++) {\n        const arg = commandSpec.parameters[i];\n        if (arg.datatype === DT_DATASET_ID) {\n            const val = values[arg.id];\n            if (val != null) {\n                for (let j = 0; j < datasets.length; j++) {\n                    const ds = datasets[j];\n                    if (ds.name === val) {\n                        return ds;\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n/**\n * Create a nested object of command parameters based on parent-child\n * relationships of parameters in a command declaration.\n */\nconst nestCommandParameters = (parameters, parent) => {\n    const result = [];\n    for (let i = 0; i < parameters.length; i++) {\n        const para = parameters[i];\n        if ((para.parent === parent) || ((para.parent == null) && (parent == null))) {\n            if ((para.datatype === DT_RECORD) || (para.datatype === DT_LIST)) {\n                // Add nested parameters property for records and lists\n                para.parameters = nestCommandParameters(parameters, para.id);\n            }\n            result.push(para);\n        }\n    }\n    return result;\n}\n\n\n/**\n * Set the values of all column identifier arguments to null. This reset is\n * necessary when the user selects a new top-level dataset in the command input\n * form.\n */\nexport const resetColumnIds = (values, parameterSpecs) => {\n    for (let i = 0; i < parameterSpecs.length; i++) {\n        const para = parameterSpecs[i];\n        if (para.datatype === DT_COLUMN_ID) {\n            values[para.id] = null;\n        } else if (para.datatype === DT_RECORD) {\n            resetColumnIds(values[para.id], para.parameters);\n        } else if (para.datatype === DT_LIST) {\n            const rows = values[para.id];\n            for (let r = 0; r < rows.length; r++) {\n                resetColumnIds(rows[r], para.parameters);\n            }\n        }\n    }\n}\n\n\n/**\n * Create an object containing default values for each parameter in a given\n * command specification. Initialize values from the given module arguments,\n * where possible.\n */\nexport const toFormValues = (parameters, datasets, moduleArgs) => {\n    const values = {};\n    for (let i = 0; i < parameters.length; i++) {\n        const para = parameters[i];\n        const arg = (moduleArgs != null) ? moduleArgs.find((a) => (a.id === para.id)) : null;\n        let val = null;\n        if (para.datatype === DT_RECORD) {\n            // Get a list of parameter specifications for the children of\n            // the given record.\n            const recordVal = (arg != null) ? arg.value : [];\n            val = toFormValues(para.parameters, datasets, recordVal);\n        } else if (para.datatype === DT_LIST) {\n            // The argument value is a list of lists (one for each record\n            // in the list)\n            val = [];\n            if (arg != null) {\n                for (let r = 0; r < arg.value.length; r++) {\n                    val.push(toFormValues(para.parameters, datasets, arg.value[r]));\n                }\n            }\n        } else {\n            // Get the value for the parameter. We first try to get the\n            // value from the respective element in the module arguments\n            // array. If the argument does not exist we try to get a default\n            // value from the optional values enumeration in the command\n            // specification.\n            if (arg != null) {\n                val = arg.value;\n            } else if (para.values != null) {\n                // By default the first value in the list is used as the\n                // default value.\n                val = para.values[0].value;\n                if (para.values[0].isDefault !== true) {\n                    for (let j = 1; j < para.values.length; j++) {\n                        const opt = para.values[j];\n                        if (opt.isDefault === true) {\n                            val = opt.value;\n                            break;\n                        }\n                    }\n                }\n            } else if (para.defaultValue != null) {\n                // A parameter may have an optional default value specified\n                val = para.defaultValue;\n            } else {\n                // If the value is still undefined we set it to a defined\n                // default.\n                if (para.datatype === DT_BOOL) {\n                    val = false;\n                } else if (para.datatype === DT_DATASET_ID) {\n                    val = (datasets.length > 0) ? datasets[0].name : '';\n                } else if (para.datatype === DT_FILE_ID) {\n                    val = {fileid: null, filename: null, url: null};\n                }\n            }\n        }\n        values[para.id] = val;\n    }\n    return values;\n}\n\n\n/**\n * Validate a single argument in a module command specification. Append all\n * error messages to a given list.\n */\nconst validateArgument = (value, paraSpec, errors, serviceProperties) => {\n    const name = paraSpec.name;\n    if ((value === null) && (paraSpec.required)) {\n        errors.push('Missing value for ' + name);\n    } else if ((value !== null) && (paraSpec.datatype === DT_FILE_ID)) {\n        // For source file arguments there needs to be a filename/file or\n        // url combination.\n        const { file, fileid, filename, url } = value;\n        if ((file != null) && (filename != null)) {\n            if(file[\"size\"]>serviceProperties.maxFileSize){\n                errors.push('Filesize exceeds maximum limit: ' + formatBytes(serviceProperties.maxFileSize, 2))\n            }\n        } else if ((fileid != null) && (filename != null)) {\n        } else if (url != null) {\n        } else {\n            errors.push('No file selected for ' + name);\n        }\n    } else if (value != null) {\n        if ((value === '') && (paraSpec.required)) {\n            errors.push('Missing value for ' + name);\n        } else {\n            const dt = paraSpec.datatype;\n            if ((dt === DT_INT) || (dt === DT_ROW_ID)) {\n                if (isNaN(value)) {\n                    errors.push('Expected integer value for ' + name);\n                }\n            } else if (dt === DT_DECIMAL) {\n                if (isNaN(value)) {\n                    errors.push('Expected decimal value for ' + name);\n                }\n            }\n        }\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n\tMODAL_AUTH, REQUEST_SERVICE, RECEIVE_SERVICE, SERVICE_ERROR, REQUEST_AUTH, RECEIVE_AUTH\n} from '../../actions/main/Service'\nimport { PackageRegistry } from '../../resources/Engine';\nimport { HATEOASReferences } from '../../util/HATEOAS'\n\n/**\n* Reducer for actions that retrieve the Vizier DB Web Service API descriptor.\n*/\n\n/**\n * STATE:\n *\n * engine: INformation about the backend engine and the supported commands\n * error: Error while fetching service descriptor\n * isFetchig: Flag indicating whether fetching is in progress\n * links: HATEOAS references in service descriptor\n * name: Service name\n * links: List of HATEOAS references [rel, href]\n * properties: List of service properties (e.g., max. upload file size)\n * refetch: Flag indicating whether the service descriptor needs to be re-fetched\n *          after the user entered authentication information.\n */\n\n const INITIAL_STATE = {\n     error: null,\n     engine: null,\n     isFetchig: true,\n     links: null,\n     name: null,\n     properties: null,\n     refetch: false\n }\n\n\nexport const serviceApi = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n    \tcase REQUEST_SERVICE:\n\t        return {\n\t          ...state,\n\t          isFetching: true\n\t        }\n\t    case RECEIVE_SERVICE:\n\t        return {\n\t          ...state,\n              engine: {\n                  backend: action.environment.backend,\n                  name: action.environment.name,\n                  packages: new PackageRegistry().fromJson(action.environment.packages),\n                  serviceProperties: action.properties\n              },\n              error: null,\n              isFetching: false,\n              links: new HATEOASReferences(action.links),\n\t          name: action.name,\n\t          properties: action.properties,\n\t          refetch: false\n\t        }\n        case SERVICE_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error\n            }\n        case REQUEST_AUTH:\n        \treturn {...state, showModal: MODAL_AUTH}\n        case RECEIVE_AUTH:\n        \treturn {\n                ...state,\n    \t        showModal:null,\n                isFetching: false,\n                error: null,\n                refetch: true\n        \t}\n\t    default:\n\t      return state\n  }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    PROJECT_ACTION_ERROR, RECEIVE_PROJECT_RESOURCE, UPDATE_WORKFLOW\n} from '../../actions/project/Project';\nimport {\n    SET_ANNOTATIONS, SUBMIT_UPDATE_REQUEST, UPDATE_DATASET_ANNOTATIONS\n} from '../../actions/project/Spreadsheet';\nimport { NoAnnotation } from '../../resources/Annotation';\n\n/**\n* Reducer for spreadsheet.\n*/\n\n\n/**\n * STATE:\n *\n * annotations: CellAnnotations for a dataset cell\n * dataset: DatasetHandle\n * isUpdating: Flag indicating whether update is in progress\n * opError: ErrorObject in case of an update error\n */\n\nconst INITIAL_STATE = {\n    annotations: new NoAnnotation(),\n    dataset: null,\n    isUpdating: false\n}\n\n\nexport const spreadsheet = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case RECEIVE_PROJECT_RESOURCE:\n        case UPDATE_WORKFLOW:\n            const resource = action.resource;\n            if (resource != null) {\n                if (resource.isDataset()) {\n                    return {\n                        ...state,\n                        dataset: resource.content,\n                        annotations: new NoAnnotation(),\n                        isUpdating: false\n                    }\n                }\n            }\n            return state;\n        case PROJECT_ACTION_ERROR:\n            return {...state, isUpdating: false};\n        case SET_ANNOTATIONS:\n            return {...state, annotations: action.annotations};\n        case SUBMIT_UPDATE_REQUEST:\n            return {...state, isUpdating: true};\n        case UPDATE_DATASET_ANNOTATIONS:\n            return {...state, dataset: action.dataset};\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport { app } from './main/App';\nimport { mainPage } from './main/MainPage';\nimport { branchPage } from './project/BranchPage';\nimport { spreadsheetPage } from './project/SpreadsheetPage';\nimport { datasetErrorsPage } from './project/DatasetCaveatsPage';\nimport { notebookPage } from './project/NotebookPage';\nimport { projectListing } from './project/ProjectListing';\nimport { projectPage} from './project/ProjectPage';\nimport { serviceApi } from './main/Service';\nimport { spreadsheet } from './spreadsheet/Spreadsheet';\n\nconst rootReducer = combineReducers({\n    app,\n    branchPage,\n    mainPage,\n    notebookPage,\n    spreadsheetPage,\n    datasetErrorsPage,\n    projectListing,\n    projectPage,\n    serviceApi,\n    spreadsheet,\n    router: routerReducer\n})\n\nexport default rootReducer\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\nimport '../../css/App.css';\n\n\n/**\n * Show a spinner to indicate that content is being loaded. The size property\n * allows to specify the loader size. Currently, only medium or small are\n * suppoerted (the default is massive).\n */\nclass ContentSpinner extends React.Component {\n    static propTypes = {\n        size: PropTypes.string,\n        text: PropTypes.string\n    }\n    render() {\n        const { size, text } = this.props;\n        // Default layout is massive\n        let cssClass = 'spinner-padding-ms';\n        let loaderSize = 'massive';\n        if (size === 'medium') {\n            cssClass = 'spinner-padding-lg';\n            loaderSize = 'medium';\n        } else if (size === 'small') {\n            cssClass = 'spinner-padding-md';\n            loaderSize = 'small';\n        }\n        return (\n            <div className={cssClass}>\n                <Loader inline active size={loaderSize}>\n                    {text}\n                </Loader>\n            </div>\n        );\n    }\n}\n\nexport default ContentSpinner;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport ContentSpinner from './ContentSpinner';\nimport { HATEOAS_API_DOC } from '../util/HATEOAS';\nimport '../../css/App.css';\nimport '../../css/Connection.css'\n\n\n/**\n * Component that continuously sends polling requests to the API and\n * dispatches the result to a given callback handler.\n *\n * Displays a cancel button to activate a given callback handler.\n *\n * https://stackoverflow.com/questions/46140764/polling-api-every-x-seconds-with-react\n */\nexport class ApiPolling extends React.Component {\n    static propTypes = {\n        interval: PropTypes.number.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onFetch: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired,\n        text: PropTypes.string.isRequired\n    }\n    /**\n     * Start a timer to call the provided fetch function at the specified\n     * interval.\n     */\n    componentDidMount() {\n        const { interval, onFetch, resource } = this.props;\n        window.pollingTimer = setInterval(() => (onFetch(resource)), interval);\n        this.timer = window.pollingTimer\n    }\n    /**\n     * Cancel the fetch timer.\n     */\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n    /**\n     * Show a spinner with a cancel button.\n     */\n    render() {\n        const { onCancel, text } = this.props;\n        return (\n            <div>\n                <ContentSpinner text={ text } size='small' />\n                <div className='centered'>\n                    <Button\n                        content='Cancel'\n                        negative\n                        title='Cancel active task'\n                        onClick={onCancel}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n\n/**\n * Show Web Service API Connection info and documentation link.\n */\nexport class ConnectionInfo extends React.Component {\n    static propTypes = {\n        links: PropTypes.object.isRequired,\n        name: PropTypes.string.isRequired\n    }\n    render() {\n        const { name, links } = this.props;\n        const url = links.getSelf();\n        return (\n            <div className='connection-info'>\n                <pre className='connection-info'>\n                    {'Connected to '}{name}{' @ '}\n                    <a className=\"connection-link\" target='_blank' href={url}>\n                        {url}\n                    </a>\n                    <span className=\"docu-icon\">\n                        <a\n                            href={links.get(HATEOAS_API_DOC)}\n                            className='docu-icon'\n                            target='_blank'\n                        >\n                            <i className='fa fa-book'/>\n                        </a>\n                    </span>\n                </pre>\n            </div>\n        );\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Message } from 'semantic-ui-react'\n\n\n/**\n * Display an error message.\n */\nexport const ErrorMessage = ({title, message, onDismiss}) => (\n    <Message\n        negative\n        icon='warning sign'\n        header={title}\n        onDismiss={onDismiss}\n        content={message != null ? message.charAt(0).toUpperCase() + message.slice(1) : \"No Message\"}\n    />\n);\n\n\n/**\n * Display a list of error messages in a single message frame.\n */\nexport const ErrorListMessage = ({title, errors, onDismiss}) => (\n    <Message\n        negative\n        icon='warning sign'\n        header={title}\n        list={errors}\n        onDismiss={onDismiss}\n    />\n);\n\n\n/**\n * Display an error message generated by a fetch request. Depending on whether\n * the error is due to an unknown resource (404) or not the error message will\n * differ.\n */\nexport const FetchError = ({error}) => {\n    if (error.is404()) {\n        return (\n            <div className='not-found'>\n                <NotFoundMessage message={error.message} />\n            </div>\n        )\n    } else {\n        return (<ErrorMessage\n            title={error.title}\n            message={error.message}\n        />)\n    }\n}\n\n\n/**\n * Display an warning message.\n */\nexport const WarningMessage = ({title, message, onDismiss}) => (\n    <Message\n        warning\n        icon='warning circle'\n        header={title}\n        onDismiss={onDismiss}\n        content={(message != null) ? ( message.charAt(0).toUpperCase() + message.slice(1) ) : \"Unknown Error\"}\n    />\n);\n\n\n/**\n * Display an warning message.\n */\nexport const NotFoundMessage = ({message}) => (\n    <Message\n        floating\n        icon='frown'\n        header='Ooops ... 404'\n        size='massive'\n        content={(message != null) ? ( message.charAt(0).toUpperCase() + message.slice(1) ) : \"Unknown Error\" }\n    />\n);\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Input } from 'semantic-ui-react'\nimport '../../../../../css/ResourceListing.css';\n\n/**\n* Checkbox for boolean input\n*/\n\nexport class TextInput extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        onKeyDown: PropTypes.func.isRequired,\n    }\n    render() {\n        const { value, onKeyDown, onChange } = this.props\n        return (\n            <Input\n\t\t        autoFocus\n\t            className=\"resource-name-input\"\n\t            value={value}\n\t            onChange={onChange}\n\t            onKeyDown={onKeyDown}\n\t\t    />\n        );\n    }\n}\n\n\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport { TextInput } from '../notebook/input/form/TextInput'\nimport '../../../css/ResourceListing.css'\n\n/**\n * Modal to input (or modify) the name of a resource. The optional isValid\n * function is used to check whether the entered value is valid or not.\n */\nclass EditResourceNameModal extends React.Component {\n    static propTypes = {\n        isValid: PropTypes.func,\n        prompt: PropTypes.string,\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        inputComponent: PropTypes.object\n    }\n    /**\n     * Keep the new resource name in the local state.\n     */\n    constructor(props) {\n        super(props)\n        let { value } = props;\n        if (value == null) {\n            value = '';\n        }\n        this.state = {value: value};\n    }\n    /**\n     * Make sure the clear the internal state value on cancel.\n     */\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        this.setState({value: ''});\n        onCancel();\n    }\n    /**\n     * Handle changes in the input control.\n     */\n    handleChange = (event) => {\n        const val = event.target.value\n        this.setState({value: val})\n    }\n    /**\n     * Handle ESC and RETURN to cancel or submit the name update request.\n     */\n    handleKeyDown = (event) => {\n        const { onCancel } = this.props;\n        if (event.keyCode === 13) {\n            this.handleSubmit();\n        } else if (event.keyCode === 27) {\n            onCancel();\n        }\n    }\n    /**\n     * Call the provided onSubmit with the entered name. Use the optional\n     * isValid function to check if the entered value is valid or not.\n     */\n    handleSubmit = (event) => {\n        const { isValid, onSubmit } = this.props;\n        let { value } = this.state\n        if(!value && this.props.value){\n        \tvalue = this.props.value\n        }\n        // Return without submit if invalid value is given.\n        if (isValid != null) {\n            if (!isValid(value)) {\n                return;\n            }\n        }\n        onSubmit(value);\n    }\n    /**\n     * Show simple modal with input text box.\n     */\n    render() {\n        const { isValid, prompt, open, title, inputComponent } = this.props;\n        let { value } = this.state;\n        let message = null;\n        if(!value && this.props.value){\n        \tvalue = this.props.value\n        }\n        if (prompt != null) {\n            message = (<p>{prompt}</p>);\n        }\n        let validName = true;\n        if (isValid != null) {\n            validName = isValid(value);\n        }\n        let Tag = 'TextInput'\n        let inputProps = {}\n        if(!inputComponent){\n        \tlet ic = <TextInput\n                id=\"EditResourceNameModal\"\n\t\t        value={value}\n\t            onChange={this.handleChange}\n\t            onKeyDown={this.handleKeyDown}\n\t\t    />\n        \tTag = ic.type;\n            inputProps = Object.assign(inputProps, ic.props);\n        }\n        else {\n            Tag = inputComponent.type;\n            inputProps = Object.assign(inputProps, inputComponent.props);\n            delete this.props.inputComponent;\n        }\n        return (\n            <Modal open={open} size={'small'}>\n                <Modal.Header>{title}</Modal.Header>\n                <Modal.Content>\n                    <div className=\"resource-name\">\n                        {message}\n                        <Tag {...inputProps} />\n                    </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  onClick={this.handleCancel}>Cancel</Button>\n                    <Button\n                        primary\n                        icon='checkmark'\n                        labelPosition='right'\n                        content='Submit'\n                        disabled={!validName}\n                        onClick={this.handleSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\n\nexport default EditResourceNameModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport 'font-awesome/css/font-awesome.css';\nimport '../../css/Button.css';\nimport { Divider, Icon } from 'semantic-ui-react'\n\n/**\n * Module containing a collection of different button comonents for the UI.\n */\n\n/**\n * Clickable icon button using Font Awesome icons.\n */\nexport const IconButton = ({name, onClick, title}) => (\n    <FontAwesome className=\"icon-button\" name={name} onClick={onClick} title={title}/>\n)\n\nIconButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\n\n/**\n * Clickable icon button using Font Awesome icons.\n */\nexport const CloseButton = ({name, onClick}) => (\n    <FontAwesome className=\"close-button\" name={name} onClick={onClick} />\n)\n\nCloseButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\n\nexport const LargeMessageButton = ({message, icon, css, onClick, title, caption, captionIcon}) => {\n\n    let mainMessage = <div>\n        <p className='lg-message'>{message}</p>\n        <p className='lg-button'>\n            <IconButton name={icon + ' fa-4x'} title={title} onClick={onClick}/>\n        </p>\n    </div>;\n\n    let captionMessage = caption !== null ? <div>\n        <Divider horizontal>\n            <p className='lg-button'>\n                <Icon size=\"big\" name={captionIcon} style={{margin:0}}/>\n            </p>\n        </Divider>\n        <p className='lg-message'>{caption}</p>\n    </div> : null;\n\n    return(<div>\n            <div className={css}>\n              {mainMessage}\n            </div>\n            {captionMessage}\n    </div>)\n};\n\nLargeMessageButton.propTypes = {\n    css: PropTypes.string,\n    icon: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    caption: PropTypes.string,\n    captionIcon: PropTypes.string\n};\n\n\n/**\n * Text button shows a clickable text.\n */\n\nexport class TextButton extends React.Component {\n    static propTypes = {\n        css: PropTypes.string,\n        text: PropTypes.string.isRequired,\n        title: PropTypes.string,\n        onClick: PropTypes.func.isRequired\n    }\n    render() {\n        const { css, text, title, onClick } = this.props;\n        let linkCss = null;\n        if (css != null) {\n            linkCss = css;\n        } else {\n            linkCss = 'icon-button';\n        }\n        return (\n            <a className={linkCss} title={title} onClick={onClick}>\n                {text}\n            </a>\n        );\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\n\n\n/**\n * Generic modal dialog to confirm deleting a resource object.\n */\n\nclass DeleteResourceModal extends React.Component {\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        prompt: PropTypes.string,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.object.isRequired\n    }\n    /**\n     * Call the given submit method with the given object.\n     */\n    handleSubmit = () => {\n        const { onSubmit, value } = this.props;\n        onSubmit(value);\n    }\n    /**\n     * Show simple confirm dialog.\n     */\n    render() {\n        const { prompt, open, onCancel, title } = this.props;\n        return (\n            <Modal open={open} basic size='small'>\n                <Header icon='trash' content={title} />\n                <Modal.Content>\n                    {prompt}\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button basic color='red' inverted onClick={onCancel}>\n                        <Icon name='remove' /> No\n                    </Button>\n                    <Button\n                        color='green'\n                        inverted\n                        onClick={this.handleSubmit}\n                    >\n                        <Icon name='checkmark' /> Yes\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nDeleteResourceModal.defaultProps = {\n    open: false\n}\n\nexport default DeleteResourceModal;\n","import _ from 'lodash'\nimport React from 'react'\nimport { Search } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\n\n/**\n * To return a search bar that filters results on the calling component\n * */\nexport default class SearchBar extends React.Component {\n    static defaultProps = {\n        aligned: 'right'\n    }\n\n    static propTypes = {\n        aligned: PropTypes.string,\n        projects: PropTypes.array.isRequired,\n        filterProjectListing: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.initialState = { isLoading: false, results: [], value: ''}\n        this.state = this.initialState\n        this.projects = this.addTitleFieldToProjects(this.props.projects)\n    }\n\n    addTitleFieldToProjects = (projects) => {\n        if(projects !== null && projects.length > 0){\n            const projectsClone = [...projects]\n            for (let i = 0; i < projectsClone.length; i++) {\n                projectsClone[i][\"title\"] = projectsClone[i][\"name\"]\n            }\n            return projectsClone\n        }\n        return []\n    }\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, value })\n\n        setTimeout(() => {\n            if (this.state.value.length < 1) {\n                this.setState(this.initialState)\n                return this.props.filterProjectListing(this.projects, value)\n            }\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n            const isMatch = (result) => re.test(result.title)\n            this.setState({\n                isLoading: false,\n                results: _.filter(this.projects, isMatch),\n            }, ()=> this.props.filterProjectListing(this.state.results))\n        }, 300)\n    }\n\n    render(){\n        const { isLoading, value, results } = this.state\n\n        return (\n            <div align={this.props.aligned}>\n                <Search\n                    aligned={this.props.aligned}\n                    loading={isLoading}\n                    onSearchChange={this.handleSearchChange}\n                    results={results}\n                    value={value}\n                    open={false}\n                    />\n            </div>)\n    }\n}","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Icon, Table } from 'semantic-ui-react'\nimport { clearProjectActionError, deleteProject, fetchProjects } from '../../actions/project/ProjectListing'\nimport { ErrorMessage } from '../../components/Message';\nimport DeleteResourceModal from '../../components/modals/DeleteResourceModal'\nimport ContentSpinner from '../../components/ContentSpinner'\nimport { notebookPageUrl } from '../../util/App.js';\n// For history to work this link was helpful. Does not seem to be required\n// for all components (?).\n// https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/api/withRouter.md\nimport { withRouter } from 'react-router';\nimport SearchBar from \"../../components/SearchBar\";\n\nimport '../../../css/ResourceListing.css'\n\n\nclass ProjectListing extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        fetchError: PropTypes.string,\n        fetchMessage: PropTypes.string.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        projects: PropTypes.array,\n        links: PropTypes.object\n    }\n    constructor(props) {\n        super(props);\n        // The local state keeps track of the project that the user intends to\n        // delete. If the value is non-null the delete modal for confirmation\n        // is shown.\n        this.state = {deleteProject: null, filteredProjects: this.props.projects}\n        // Load the project listing\n        const { dispatch } = this.props;\n        dispatch(fetchProjects());\n    }\n    componentWillReceiveProps({projects}){\n        this.setState({filteredProjects:projects})\n    }\n    /**\n     * Clear create or delete project error message.\n     */\n    clearActionError = () => {\n        const { dispatch } = this.props\n        dispatch(clearProjectActionError());\n    }\n    /**\n     * Delete the project with the given Url.Delete\n     */\n    confirmDeleteProject = (project) => {\n        const { dispatch } = this.props\n        dispatch(deleteProject(project))\n        this.hideModal()\n    }\n    /**\n     * Show page for a selected project.\n     */\n    handleShowProjectPage = (project) => {\n        const { history } = this.props;\n        history.push(notebookPageUrl(project.id, project.defaultBranch));\n    }\n    /**\n     * Hide all modals by setting the respective state variables to null..\n     */\n    hideModal = () => {\n        this.setState({deleteProject: null})\n    }\n    /**\n     * Display search bar filtered project listing\n     **/\n    filterProjectListing = (results) => {\n        this.setState({\n            filteredProjects: results\n        })\n    }\n    /**\n     * Show a list of existing projects and the Create Project form. Optional, a\n     * 'Delete Project' dialog is being displayed.\n     */\n    render() {\n        const {\n            actionError,\n            fetchError,\n            fetchMessage,\n            isFetching,\n            projects\n        } = this.props;\n        let content = null;\n        if (isFetching) {\n            content = <ContentSpinner text={fetchMessage}/>;\n        } else if (fetchError) {\n            content = (<ErrorMessage\n                title=\"Error while loading project list\"\n                message={fetchError}\n            />)\n        } else if (projects != null) {\n            const tabHead = (\n                    <Table.Row>\n                        <Table.HeaderCell className=\"resource\">Project</Table.HeaderCell>\n                        <Table.HeaderCell className=\"resource\">Created</Table.HeaderCell>\n                        <Table.HeaderCell className=\"resource\">Last modified</Table.HeaderCell>\n                        <Table.HeaderCell className=\"resource\"></Table.HeaderCell>\n                    </Table.Row>\n            );\n            let {filteredProjects} = this.state;\n            let rows = [];\n            for (let i = 0; i < filteredProjects.length; i++) {\n                const pj = filteredProjects[i];\n                rows.push(<Table.Row key={pj.id}>\n                    <Table.Cell className='resource'>\n                        <a\n                            className='resource-link'\n                            onClick={() => (this.handleShowProjectPage(pj))}\n                        >\n                            {pj.name}\n                        </a>\n                    </Table.Cell>\n                    <Table.Cell className='resource-text'>{pj.createdAt}</Table.Cell>\n                    <Table.Cell className='resource-text'>{pj.lastModifiedAt}</Table.Cell>\n                    <Table.Cell className='resource-buttons'>\n                        <span className='button-wrapper'>\n                            <Icon\n                            name=\"trash\"\n                            link\n                            onClick={() => (this.showDeleteProjectModal(pj))} />\n                        </span>\n                    </Table.Cell>\n                </Table.Row>);\n            }\n            const noResults = (\n                <Table.Row>\n                    <Table.Cell className='resource-text'>\n                        No Results Found!\n                    </Table.Cell>\n                </Table.Row>);\n            if (filteredProjects.length < 1){\n                rows.push(noResults)\n            }\n            // Check if deleteProject is set. In that case display a modal\n            // dialog for the user to either confirm (or cancel) project\n            // deletion.\n            const { deleteProject } = this.state\n            let modal = null;\n            if (deleteProject) {\n                modal = (\n                    <DeleteResourceModal\n                        open={true}\n                        prompt={'Do you really want to delete ' + deleteProject.name + '?'}\n                        title='Delete Project'\n                        value={deleteProject}\n                        onCancel={this.hideModal}\n                        onSubmit={this.confirmDeleteProject}\n                    />\n                );\n            }\n            // Display an error message generated while deleting or updating a\n            // project. The message is shown at the bottom of the project\n            // listing\n            let projectActionErrorMessage = null\n            if (actionError) {\n                projectActionErrorMessage = (<ErrorMessage\n                    title={actionError.title}\n                    message={actionError.message}\n                    onDismiss={this.clearActionError}\n                />)\n            }\n            const searchBar = (\n                    <SearchBar\n                        projects={projects}\n                        filterProjectListing={this.filterProjectListing}\n                    />)\n\n            content = (\n                <div>\n                    { projectActionErrorMessage }\n                    { searchBar }\n                    <Table singleLine>\n                        <Table.Header>{tabHead}</Table.Header>\n                        <Table.Body>{rows}</Table.Body>\n                    </Table>\n                    { modal }\n                </div>\n            );\n        }\n        return content;\n    }\n    /**\n     * Show modal to confirm project deletion.\n     */\n    showDeleteProjectModal = (project) => {\n        this.setState({deleteProject: project})\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectListing.actionError,\n        fetchError: state.projectListing.fetchError,\n        fetchMessage: state.projectListing.fetchMessage,\n        isFetching: state.projectListing.isFetching,\n        projects: state.projectListing.projects,\n        links: state.projectListing.links\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProjectListing))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    projectActionError, requestProjectAction, updateResource\n} from '../project/Project';\nimport { ChartResource } from '../../util/App';\nimport { fetchResource } from '../../util/Api';\n\n/**\n * Load a chart view from the Web API. On success, update the content of the\n * project page to show the loaded chart.\n *\n * Parameters:\n *\n * chart: ChartDescriptor\n *\n */\nexport const showChartView = (chart) => (dispatch) => {\n    dispatch(\n        fetchResource(\n            // Url\n            chart.links.self,\n            // Success handler\n            (json) => {\n                return dispatch(\n                    updateResource(new ChartResource(chart.name, json))\n                );\n            },\n            // Error handler\n            (message) => (projectActionError(\n                'Error loading dataset chart view', message\n            )),\n            // Set busy flag\n            requestProjectAction\n        )\n    )\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\n\n/**\n * Branches Menu: Contains a list of project branches (to switch) and edit\n * options for the currently selected branch.\n */\n\nclass BranchMenuDropdown extends React.Component {\n    static propTypes = {\n        branches: PropTypes.array.isRequired,\n        isMostRecent: PropTypes.bool.isRequired,\n        onCreateBranch: PropTypes.func,\n        onDelete: PropTypes.func.isRequired,\n        onEdit: PropTypes.func.isRequired,\n        onGetMostRecent: PropTypes.func.isRequired,\n        onSelect: PropTypes.func,\n        onShowHistory: PropTypes.func.isRequired,\n        onCancelExec: PropTypes.func,\n        resource: PropTypes.object.isRequired,\n        selectedBranch: PropTypes.object.isRequired,\n        isRunning: PropTypes.bool\n    }\n    /**\n     * Call the create branch callback without an argument to create a new\n     * branch at the end of the current notebook workflow.\n     */\n    handleCreateBranch = () => {\n        this.props.onCreateBranch();\n    }\n    render() {\n        const {\n            branches,\n            isMostRecent,\n            onCreateBranch,\n            onDelete,\n            onEdit,\n            onGetMostRecent,\n            onSelect,\n            onShowHistory,\n            onCancelExec,\n            resource,\n            selectedBranch,\n            isRunning\n        } = this.props;\n        // List of items in the dropdown menu\n        let branchItems = [];\n        // List project branches (only if there is more than one branch)\n        if (branches.length > 1) {\n            branchItems.push(<Dropdown.Divider key='divider'/>);\n            branchItems.push(<Dropdown.Header key='header' content='Switch Branch' />);\n            for (let i = 0; i < branches.length; i++) {\n                const br = branches[i];\n                let iconName;\n                if (br.id === selectedBranch.id) {\n                    iconName = 'checkmark box';\n                } else {\n                    iconName = 'square outline';\n                }\n                branchItems.push(\n                    <Dropdown.Item\n                        key={br.id}\n                        icon={iconName}\n                        active={br.id === selectedBranch.id}\n                        text={br.name}\n                        value={br.id}\n                        onClick={() => (onSelect(br))}\n                    />);\n            }\n        }\n        if (onCreateBranch != null) {\n            branchItems.push(<Dropdown.Divider key='divider-new'/>);\n            branchItems.push(<Dropdown.Item\n                    key='createBranch'\n                    icon='plus'\n                    text='New Branch ...'\n                    onClick={this.handleCreateBranch}\n                />);\n        }\n        branchItems.push(<Dropdown.Divider key='divider-tm'/>);\n        branchItems.push(<Dropdown.Header content='Time Machine' key='header-tm' />);\n        branchItems.push(<Dropdown.Item\n                key='history'\n                icon='history'\n                disabled={resource.isBranch()}\n                text='History'\n                onClick={onShowHistory}\n            />);\n        branchItems.push(<Dropdown.Item\n                key='mostRecent'\n                icon='play'\n                disabled={(!resource.isBranch()) && (isMostRecent)}\n                text='Latest Version'\n                onClick={onGetMostRecent}\n            />);\n        if(onCancelExec != null) {\n            branchItems.push(<Dropdown.Header content='Execution' key='header-tm' />);\n            branchItems.push(<Dropdown.Item\n                    key='cancelExecution'\n                    icon='fa-times-circle'\n                    disabled={!isRunning}\n                    text='Cancel Workflow'\n                    onClick={onCancelExec}\n                />);\n        }\n        // Add option to create a new branch from the end of the current\n        // notebook (if the onCreateBranch callback is given).\n        return (\n            <Dropdown item text='Branches'>\n                <Dropdown.Menu>\n                    <Dropdown.Header key='onBranch' icon='fork' content={selectedBranch.name} />\n                    <Dropdown.Item\n                        key='edit'\n                        icon='edit'\n                        text='Rename'\n                        onClick={onEdit}\n                    />\n                    <Dropdown.Item\n                        key='delete'\n                        icon='trash'\n                        disabled={selectedBranch.isDefault}\n                        text='Delete'\n                        onClick={onDelete}\n                    />\n                    { branchItems }\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default BranchMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Menu } from 'semantic-ui-react';\n\n/**\n * Chart Menu: Contains a list of all active datasets in the selected dataset\n * chart views version.\n */\n\nclass ChartMenuDropdown extends React.Component {\n    static propTypes = {\n        charts: PropTypes.array.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired\n    }\n    /**\n     * Find the chart with the given name when the user clicks on a menu\n     * item. The call onSelect method to show the chart.\n     */\n    handleSelect = (e, {value}) => {\n        const { charts, onSelect } = this.props;\n        for (let i = 0; i < charts.length; i++) {\n            const chart = charts[i];\n            if (chart.name === value) {\n                onSelect(chart);\n                break;\n            }\n        }\n    }\n    render() {\n        const { charts, resource } = this.props;\n        // Show nothing if the list of charts is empty\n        if (charts.length === 0) {\n            return null;\n        } else if (charts.length === 1) {\n            const chart = charts[0];\n            const disabled = resource.isChart();\n            // Set onClick handler to null if disabled\n            let onClickHandler = null;\n            if (!disabled) {\n                onClickHandler = this.handleSelect;\n            }\n            return (\n                <Menu.Item\n                    key={chart.name}\n                    icon='bar chart'\n                    name={chart.name}\n                    value={chart.name}\n                    disabled={disabled}\n                    onClick={onClickHandler}\n                />\n            );\n        } else {\n            // List of charts. Keep track whether there are any selectable items.\n            // Otherwise, disable the menu entry.\n            let hasSelectableItems = false;\n            let menuItems = [];\n            for (let i = 0; i < charts.length; i++) {\n                const chart = charts[i];\n                let disabled = false;\n                if (resource.isChart()) {\n                    disabled = resource.content.name === chart.name;\n                }\n                if (!disabled) {\n                    hasSelectableItems = true;\n                }\n                menuItems.push(\n                    <Dropdown.Item\n                        key={chart.name}\n                        icon='bar chart'\n                        text={chart.name}\n                        value={chart.name}\n                        disabled={disabled}\n                        onClick={this.handleSelect}\n                    />\n                );\n            }\n            return (\n                <Dropdown item text='Chart' disabled={!hasSelectableItems}>\n                    <Dropdown.Menu>\n                        { menuItems }\n                    </Dropdown.Menu>\n                </Dropdown>\n            );\n        }\n    }\n}\n\nexport default ChartMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Menu } from 'semantic-ui-react';\n\n/**\n * Dataset Menu: Contains a list of all active datasets in the selected\n * workflow version.\n */\n\nclass DatasetMenuDropdown extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired\n    }\n    /**\n     * Find selected dataset and call onSelect handler.\n     */\n    handleSelect = (e, { value }) => {\n        const { datasets, onSelect } = this.props;\n        for (let i = 0; i < datasets.length; i++) {\n            const ds = datasets[i];\n            if (ds.name === value) {\n                onSelect(ds);\n                break;\n            }\n        }\n    }\n    render() {\n        const { datasets, resource } = this.props;\n        // Show nothing if the list of datasets is empty\n        if (datasets.length === 0) {\n            return null;\n        } else if (datasets.length === 1) {\n            const ds = datasets[0];\n            const disabled = resource.isDataset();\n            // Set onClick handler to null if disabled\n            let onClickHandler = null;\n            if (!disabled) {\n                onClickHandler = this.handleSelect;\n            }\n            return (\n                <Menu.Item\n                    key={ds.name}\n                    icon='table'\n                    name={ds.name}\n                    value={ds.name}\n                    disabled={disabled}\n                    onClick={onClickHandler}\n                />\n            );\n        } else {\n            // List of datasets. Keep track whether there are any selectable\n            // items. Otherwise, disable the menu entry.\n            let hasSelectableItems = false;\n            let menuItems = [];\n            for (let i = 0; i < datasets.length; i++) {\n                const ds = datasets[i];\n                let disabled = false;\n                if (resource.isDataset()) {\n                    disabled = resource.content.name === ds.name;\n                }\n                if (!disabled) {\n                    hasSelectableItems = true;\n                }\n                menuItems.push(\n                    <Dropdown.Item\n                        key={ds.name}\n                        icon='table'\n                        text={ds.name}\n                        value={ds.name}\n                        disabled={disabled}\n                        onClick={this.handleSelect}\n                    />\n                );\n            }\n            return (\n                <Dropdown item text='Dataset' disabled={!hasSelectableItems}>\n                    <Dropdown.Menu>\n                        { menuItems }\n                    </Dropdown.Menu>\n                </Dropdown>\n            );\n        }\n    }\n}\n\nexport default DatasetMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Menu } from 'semantic-ui-react';\n\n/**\n * Dataset Menu: Contains a list of all active datasets in the selected\n * workflow version.\n */\n\nclass DatasetCaveatMenuDropdown extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired\n    }\n    /**\n     * Find selected dataset and call onSelect handler.\n     */\n    handleSelect = (e, { value }) => {\n        const { datasets, onSelect } = this.props;\n        for (let i = 0; i < datasets.length; i++) {\n            const ds = datasets[i];\n            if (ds.name === value) {\n                onSelect(ds);\n                break;\n            }\n        }\n    }\n    render() {\n        const { datasets, resource } = this.props;\n        // Show nothing if the list of datasets is empty\n        if (datasets.length === 0) {\n            return null;\n        } else if (datasets.length === 1) {\n            const ds = datasets[0];\n            const disabled = resource.isDatasetCaveat();\n            // Set onClick handler to null if disabled\n            let onClickHandler = null;\n            if (!disabled) {\n                onClickHandler = this.handleSelect;\n            }\n            return (\n                <Menu.Item\n                    key={ds.name}\n                    icon='warning sign'\n                    name={ds.name}\n                    value={ds.name}\n                    disabled={disabled}\n                    onClick={onClickHandler}\n                />\n            );\n        } else {\n            // List of datasets. Keep track whether there are any selectable\n            // items. Otherwise, disable the menu entry.\n            let hasSelectableItems = false;\n            let menuItems = [];\n            for (let i = 0; i < datasets.length; i++) {\n                const ds = datasets[i];\n                let disabled = false;\n                if (resource.isDatasetCaveat()) {\n                    disabled = resource.content.name === ds.name;\n                }\n                if (!disabled) {\n                    hasSelectableItems = true;\n                }\n                menuItems.push(\n                    <Dropdown.Item\n                        key={ds.name}\n                        icon='warning sign'\n                        text={ds.name}\n                        value={ds.name}\n                        disabled={disabled}\n                        onClick={this.handleSelect}\n                    />\n                );\n            }\n            return (\n                <Dropdown item text='Caveats' disabled={!hasSelectableItems}>\n                    <Dropdown.Menu>\n                        { menuItems }\n                    </Dropdown.Menu>\n                </Dropdown>\n            );\n        }\n    }\n}\n\nexport default DatasetCaveatMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\n\n/**\n * Project Menu: The only menu item is for renaming the project.\n */\n\nclass ProjectMenuDropdown extends React.Component {\n    static propTypes = {\n        onCreate: PropTypes.func.isRequired,\n        onImport: PropTypes.func.isRequired,\n        onDelete: PropTypes.func,\n        onEdit: PropTypes.func.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n    }\n    /**\n     * handle project export\n     */\n    handleExportProject = (project) => () => {\n    \twindow.open(project.links.getSelf() + \"/export\")\n    }\n    render() {\n        const {\n            onCreate,\n            onImport,\n            onDelete,\n            onEdit,\n            //onSelect,\n            project,\n            //projectList\n        } = this.props;\n        const menuItems = [];\n        // Show the current project name, the rename option and the delete\n        // option if there is a current project\n        if (project != null) {\n            menuItems.push(<Dropdown.Header\n                key='header1'\n                icon='database'\n                content={project.name} />\n            );\n            menuItems.push(<Dropdown.Item\n                key='edit'\n                icon='edit'\n                text='Rename'\n                title='Edit project name'\n                onClick={onEdit}\n            />);\n            menuItems.push(<Dropdown.Item\n                key='delete'\n                icon='trash'\n                text='Delete'\n                title='Delete the current project'\n                onClick={onDelete}\n            />);\n        }\n        // todo: add funcationality to display the latest 5 projects (issue 169)\n        // Show project listing only if the variable is set and contains more\n        // than one project\n        // if ((projectList != null) && (projectList.length > 1)) {\n        //     if (menuItems.length > 0) {\n        //         menuItems.push(<Dropdown.Divider key='div1'/>);\n        //         menuItems.push(<Dropdown.Header\n        //             key='header2'\n        //             content='Projects'\n        //         />);\n        //     }\n        //     for (let i = 0; i < projectList.length; i++) {\n        //         let pj = projectList[i];\n        //         menuItems.push(<Dropdown.Item\n        //             key={pj.id}\n        //             disabled={(project != null) && (pj.id === project.id)}\n        //             icon='database'\n        //             text={pj.name}\n        //             title={'Switch to project ' + pj.name}\n        //             onClick={() => (onSelect(pj))}\n        //         />);\n        //     }\n        // }\n        // Show the add project option at the bottom of the menu\n        if (menuItems.length > 0) {\n            menuItems.push(<Dropdown.Divider key='div2'/>);\n        }\n        menuItems.push(<Dropdown.Item\n            key='create'\n            icon='plus'\n            text='New Project ...'\n            title='Create a new project'\n            onClick={onCreate}\n        />);\n        menuItems.push(<Dropdown.Item\n            key='import'\n            icon='plus'\n            text='Import Project ...'\n            title='Import a project from a export file'\n            onClick={onImport}\n        />);\n        if ( project != null ){\n        \tmenuItems.push(<Dropdown.Item\n                    key='export'\n                    disabled={(project == null)}\n                    icon='database'\n                    text={'Export Project'}\n                    title={'Export current project'}\n                    onClick={this.handleExportProject(project)}\n                />);\n        }\n        return (\n            <Dropdown item text='Projects'>\n                <Dropdown.Menu>\n                    { menuItems }\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default ProjectMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport '../../../css/ResourceListing.css'\n\n/**\n * Modal to input (or modify) the name of a resource. The optional isValid\n * function is used to check whether the entered value is valid or not.\n */\nclass FileUploadModal extends React.Component {\n    static propTypes = {\n        prompt: PropTypes.string,\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.string\n    }\n    /**\n     * Keep the new resource name in the local state.\n     */\n    constructor(props) {\n        super(props)\n        \n        this.state = {file: null};\n    }\n    /**\n     * Make sure the clear the internal state value on cancel.\n     */\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        this.setState({file: null});\n        onCancel();\n    }\n    onChange = (e) => {\n        this.setState({file:e.target.files[0]})\n      }\n    /**\n     * Call the provided onSubmit with the entered name. Use the optional\n     * isValid function to check if the entered value is valid or not.\n     */\n    handleSubmit = (event) => {\n        const { onSubmit } = this.props;\n        const { file } = this.state\n        // Return without submit if invalid value is given.\n        if (file != null) {\n        \tonSubmit(file);\n        }\n        else \n        \treturn;\n    }\n    /**\n     * Show simple modal with input text box.\n     */\n    render() {\n        const { prompt, open, title } = this.props;\n        const { file } = this.state;\n        let message = null;\n        if (prompt != null) {\n            message = (<p>{prompt}</p>);\n        }\n        let validFile = file != null;\n        \n        return (\n            <Modal open={open} size={'small'}>\n                <Modal.Header>{title}</Modal.Header>\n                <Modal.Content>\n                    <div className=\"resource-name\">\n                        {message}\n                        <input type=\"file\" onChange={this.onChange} />\n                     </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  negative onClick={this.handleCancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        positive\n                        icon='checkmark'\n                        labelPosition='right'\n                        content=\"Done\"\n                        disabled={!validFile}\n                        onClick={this.handleSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nexport default FileUploadModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { DEFAULT_FILTERED_COMMANDS } from '../../util/Settings';\n\n\n/**\n * Dropdown menu for the global user preferences. The menu allow the user to\n * reverse the order of notebook cells and to define the filter for shown/\n * hidden notebook cells (based on the package and command).\n */\n\nclass SettingsMenuDropdown extends React.Component {\n    static propTypes = {\n        onHideCells: PropTypes.func.isRequired,\n        onReverse: PropTypes.func.isRequired,\n        onSetFilter: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired\n    }\n    render() {\n        const { onHideCells, onReverse, onSetFilter, userSettings } = this.props;\n        return (\n            <Dropdown item text='Settings'>\n                <Dropdown.Menu>\n                    <Dropdown.Header key='head1' content='Notebook cells in ...' />\n                    <Dropdown.Item\n                        disabled={!userSettings.showNotebookReversed()}\n                        key='defaultOrder'\n                        icon='sort numeric ascending'\n                        text='Default order'\n                        title='List notebook cells in default order (first cell shown first)'\n                        onClick={onReverse}\n                    />\n                    <Dropdown.Item\n                        key='reverseOrder'\n                        disabled={userSettings.showNotebookReversed()}\n                        icon='sort numeric descending'\n                        text='Reverse order'\n                        title='List notebook cells in reverse order (last cell shown first)'\n                        onClick={onReverse}\n                    />\n                    <Dropdown.Divider key='div1' />\n                    <Dropdown.Header key='head2' content='Filter Modules' />\n                    <Dropdown.Item\n                        key='showAll'\n                        icon='remove circle'\n                        text='Remove Filter'\n                        title={'Clear module filter to show all notebook cells'}\n                        onClick={() => (onSetFilter())}\n                    />\n                    <Dropdown.Item\n                        key='defaultFilter'\n                        icon='th'\n                        text='Filter VizUAL'\n                        title={'Filter VizUAL commands by default'}\n                        onClick={() => (onSetFilter(DEFAULT_FILTERED_COMMANDS))}\n                    />\n                    <Dropdown.Item\n                        disabled={true}\n                        key='filter'\n                        icon='filter'\n                        text='Customized Filter'\n                        title={'Show form to specify filter for all modules'}\n                    />\n                    <Dropdown.Divider key='div2' />\n                    <Dropdown.Header key='head3' content='Show Filtered Modules as ...' />\n                    <Dropdown.Item\n                        disabled={!userSettings.hideFilteredCommands()}\n                        key='collapse'\n                        icon='compress'\n                        text='Collapsed'\n                        title='Collapse cells that contain filtered modules'\n                        onClick={onHideCells}\n                    />\n                    <Dropdown.Item\n                        disabled={userSettings.hideFilteredCommands()}\n                        key='hide'\n                        icon='hide'\n                        text='Hidden'\n                        title='Hide cells that contain filtered modules'\n                        onClick={onHideCells}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default SettingsMenuDropdown;\n","export default __webpack_public_path__ + \"static/media/vizier_tiny.f23e05e5.svg\";","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, Menu } from 'semantic-ui-react';\nimport BranchMenuDropdown from './BranchMenuDropdown';\nimport ChartMenuDropdown from './ChartMenuDropdown';\nimport DatasetMenuDropdown from './DatasetMenuDropdown';\nimport DatasetCaveatMenuDropdown from './DatasetCaveatMenuDropdown';\n// import NotebookMenuDropdown from './NotebookMenuDropdown';\nimport ProjectMenuDropdown from './ProjectMenuDropdown';\nimport DeleteResourceModal from '../modals/DeleteResourceModal';\nimport EditResourceNameModal from '../modals/EditResourceNameModal';\nimport FileUploadModal from '../modals/FileUploadModal';\nimport SettingsMenuDropdown from './SettingsMenuDropdown';\nimport { isNotEmptyString } from '../../util/App';\nimport '../../../css/ResourceListing.css';\nimport '../../../css/ProjectPage.css';\n\nimport logo from '../../../img/vizier_tiny.svg';\n\n/**\n * Component that allows to select the current branch. In addition to switching\n * between branches the component allows to edit the branch name and to delete\n * selected branch.\n */\n\n/*\n * Identify the different types of modals that may be displayed.\n */\nconst MODAL_CREATE_PROJECT = 'MODAL_CREATE_PROJECT';\nconst MODAL_IMPORT_PROJECT = 'MODAL_IMPORT_PROJECT';\nconst MODAL_DELETE_BRANCH = 'MODAL_DELETE_BRANCH';\nconst MODAL_DELETE_PROJECT = 'MODAL_DELETE_PROJECT';\nconst MODAL_EDIT_BRANCH_NAME = 'MODAL_EDIT_BRANCH_NAME';\nconst MODAL_EDIT_PROJECT_NAME = 'MODAL_EDIT_PROJECT_NAME';\n\nclass AppMenu extends React.Component {\n    static propTypes = {\n        branch: PropTypes.object,\n        notebook: PropTypes.object,\n        onCreateBranch: PropTypes.func,\n        onCreateProject: PropTypes.func.isRequired,\n        onImportProject: PropTypes.func.isRequired,\n        onDeleteBranch: PropTypes.func,\n        onDeleteProject: PropTypes.func.isRequired,\n        onEditBranch: PropTypes.func.isRequired,\n        onEditProject: PropTypes.func.isRequired,\n        onCancelExec: PropTypes.func.isRequired,\n        onGoHome: PropTypes.func.isRequired,\n        onHideCells: PropTypes.func.isRequired,\n        onReverse: PropTypes.func.isRequired,\n        onSetFilter: PropTypes.func.isRequired,\n        onShowChart: PropTypes.func.isRequired,\n        onShowDataset: PropTypes.func.isRequired,\n        onShowDatasetCaveat: PropTypes.func.isRequired,\n        onShowHistory: PropTypes.func.isRequired,\n        onShowNotebook: PropTypes.func,\n        onShowProject: PropTypes.func.isRequired,\n        onSwitchBranch: PropTypes.func,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        resource: PropTypes.object.isRequired,\n        userSettings: PropTypes.object.isRequired\n    }\n    /**\n     * Initialize internal state to keep track of any modal that may be shown.\n     */\n    constructor(props) {\n        super(props);\n        // No modal shown initially\n        this.state = {modal: null};\n    }\n    /**\n     * Submit request to delete the current branch.\n     */\n    handleDeleteCurrentBranch = (branch) => {\n        const { onDeleteBranch } = this.props;\n        onDeleteBranch(branch);\n        this.hideModal();\n    }\n    /**\n     * Hide the modal and delete the current project using the given callback\n     * handler.\n     */\n    handleDeleteProject = () => {\n        const { onDeleteProject, project } = this.props;\n        this.hideModal();\n        onDeleteProject(project);\n    }\n    /**\n     * Hide any open modal.\n     */\n    hideModal = () => (this.setState({modal: null}));\n    /**\n     * Depending on the edit flag either show the name or the edit name form.\n     */\n    render() {\n        const {\n            branch,\n            notebook,\n            onCreateBranch,\n            onCancelExec,\n            onCreateProject,\n            onImportProject,\n            onGoHome,\n            onHideCells,\n            onReverse,\n            onSetFilter,\n            onShowChart,\n            onShowDataset,\n            onShowDatasetCaveat,\n            onShowHistory,\n            onShowNotebook,\n            onShowProject,\n            onSwitchBranch,\n            project,\n            projectList,\n            resource,\n            userSettings\n        } = this.props;\n        // The basic layout contains a menu bar and an optional modal or error\n        // message.\n        // Start by generating the list of elements in the menu bar.\n        let menuItems = [];\n        // Show the project logo as the first element. If not on the main page\n        // have the logo be clickable to get to the homepage.\n        if (!resource.isMainPage()) {\n            menuItems.push(\n                <Menu.Item key='logo' header onClick={onGoHome}>\n                    <Image src={logo}/>\n                </Menu.Item>\n            );\n        } else {\n            menuItems.push(\n                <Menu.Item key='logo' header><Image src={logo} /></Menu.Item>\n            );\n        }\n        // Show the project name if the project is set\n        if (project != null) {\n            menuItems.push(<Menu.Item key='name' header>{project.name}</Menu.Item>);\n        }\n        menuItems.push(\n            <ProjectMenuDropdown\n                key='project'\n                onCreate={this.showCreateProjecthModal}\n            \tonImport={this.showImportProjecthModal}\n            \tonDelete={this.showDeleteProjectModal}\n                onEdit={this.showEditProjectNameModal}\n                onSelect={onShowProject}\n                project={project}\n                projectList={projectList}\n            />\n        );\n        if (resource != null) {\n            // Show the branch menu if the branch is given\n            if (branch != null) {\n                let isMostRecentEnabled = false;\n                if (notebook != null) {\n                    isMostRecentEnabled = notebook.readOnly;\n                }\n                menuItems.push(\n                    <BranchMenuDropdown\n                        key='branches'\n                        branches={project.branches}\n                        isMostRecent={!isMostRecentEnabled}\n                        onCreateBranch={onCreateBranch}\n                        onDelete={this.showDeleteBranchModal}\n                        onEdit={this.showEditBranchNameModal}\n                        onGetMostRecent={this.switchToBranchHead}\n                        onSelect={onSwitchBranch}\n                        onShowHistory={onShowHistory}\n                        onCancelExec={onCancelExec}\n                        resource={resource}\n                        selectedBranch={branch}\n                        isRunning={notebook.workflow.isRunning()}\n                    />\n                );\n            }\n            // Depending on whether the resource is a notebook or not the\n            // notebook menue is changed. If the resource is not a notebook the\n            // menu item is a button that allows to show the notebook. If the\n            // resource is a notebook the menu is a dropdown that allows th user\n            // to select properties of how the notebook is displayed.\n            if (!resource.isMainPage()) {\n                    menuItems.push(\n                        <Menu.Item\n                            key='notebook'\n                            icon='file alternate outline' \n                            name='Notebook'\n                            disabled={resource.isNotebook()}\n                            onClick={onShowNotebook}\n                        />\n                    );\n                \n                if(notebook){\n                \tconst modulesCount = notebook.workflow.modules.length;\n\t                if (modulesCount > 0 && Object.keys(notebook.workflow.datasets).length > 0) {\n\t                \tconst datasets = Array.from(new Map(notebook.workflow.modules.flatMap(function(module, index) {\n\t                \t\tif(module.datasets){\n\t                \t\t\treturn module.datasets;\n\t                \t\t}\n\t                \t\telse {\n\t                \t\t\treturn [];\n\t                \t\t}\n\t                \t}).map(ds => [ds.name, ds])).values());\n\t                \tmenuItems.push(\n\t\t                    <DatasetMenuDropdown\n\t\t                        key='datasets'\n\t\t                        datasets={datasets}\n\t\t                        onSelect={onShowDataset}\n\t\t                        resource={resource}\n\t\t                    />\n\t\t                );\n\t\t                menuItems.push(\n\t\t                    <DatasetCaveatMenuDropdown\n\t\t                        key='errors'\n\t\t                        datasets={datasets}\n\t\t                        onSelect={onShowDatasetCaveat}\n\t\t                        resource={resource}\n\t\t                    />\n\t\t                );\n\t                }\n\t                if (notebook.workflow.charts) {\n\t\t                menuItems.push(\n\t\t                    <ChartMenuDropdown\n\t\t                        key='charts'\n\t\t                        charts={notebook.workflow.charts}\n\t\t                        onSelect={onShowChart}\n\t\t                        resource={resource}\n\t\t                    />\n\t\t                );\n\t                }\n\t            }\n            }\n        }\n        // Menu options to modify global user settings\n        menuItems.push(\n            <SettingsMenuDropdown\n                key='settings'\n                onHideCells={onHideCells}\n                onReverse={onReverse}\n                onSetFilter={onSetFilter}\n                userSettings={userSettings}\n            />);\n        let menuBar = (\n            <Menu fixed='top' >\n                { menuItems }\n            </Menu>\n        );\n        // Show optional modal or error message.\n        let optionalModalOrMessage = null;\n        const { modal } = this.state;\n        if (modal !== null) {\n            if (modal === MODAL_CREATE_PROJECT) {\n                optionalModalOrMessage = (<EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={true}\n                    prompt='Enter a name for the new project'\n                    title={'Create project'}\n                    onCancel={this.hideModal}\n                    onSubmit={onCreateProject}\n                />);\n            } else if (modal === MODAL_IMPORT_PROJECT) {\n                optionalModalOrMessage = (<FileUploadModal\n                        open={true}\n                        prompt='Select a project export file to import'\n                        title={'Import project'}\n                        onCancel={this.hideModal}\n                        onSubmit={onImportProject}\n                    />);\n            } else if ((modal === MODAL_DELETE_BRANCH) && (branch != null)) {\n                optionalModalOrMessage = (<DeleteResourceModal\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.handleDeleteCurrentBranch}\n                    prompt={'Do you really want to delete the branch ' + branch.name + '?'}\n                    title={'Delete branch'}\n                    value={branch}\n                />)\n            } else if ((modal === MODAL_DELETE_PROJECT) && (project != null)) {\n                optionalModalOrMessage = (<DeleteResourceModal\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.handleDeleteProject}\n                    prompt={'Do you really want to delete the project ' + project.name + '?'}\n                    title={'Delete project'}\n                    value={branch}\n                />)\n            } else if ((modal === MODAL_EDIT_PROJECT_NAME) && (project != null)) {\n                optionalModalOrMessage = (<EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.submitUpdateProjectName}\n                    title={'Edit project name'}\n                    value={project.name}\n                />)\n            } else if ((modal === MODAL_EDIT_BRANCH_NAME) && (branch != null)) {\n                optionalModalOrMessage = (<EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.submitUpdateBranchName}\n                    title={'Edit branch name'}\n                    value={branch.name}\n                />)\n            }\n        }\n        return (\n            <div className='project-menu'>\n                { menuBar }\n                { optionalModalOrMessage }\n            </div>\n        );\n    }\n    /**\n     * Show modal dialog to enter a new project name.\n     */\n    showCreateProjecthModal = () => (this.setState({modal: MODAL_CREATE_PROJECT }));\n    /**\n     * Show modal dialog to upload a project export.\n     */\n    showImportProjecthModal = () => (this.setState({modal: MODAL_IMPORT_PROJECT }));\n    /**\n     * Show modal dialog to confirm branch delete.\n     */\n    showDeleteBranchModal = () => (this.setState({modal: MODAL_DELETE_BRANCH }));\n    /**\n     * Show modal dialog to confirm project delete.\n     */\n    showDeleteProjectModal = () => (this.setState({modal: MODAL_DELETE_PROJECT }));\n    /**\n     * Show modal to edit the current branch name.\n     */\n    showEditBranchNameModal = () => (this.setState({modal: MODAL_EDIT_BRANCH_NAME }));\n    /**\n     * Show modal to edit the project name.\n     */\n    showEditProjectNameModal = () => (this.setState({modal: MODAL_EDIT_PROJECT_NAME }));\n    /**\n     * Submit change to current branch name.\n     */\n    submitUpdateBranchName = (name) => {\n        const { onEditBranch, branch } = this.props;\n        this.hideModal();\n        if (name.trim() !== branch.name) {\n            onEditBranch(name);\n        }\n    }\n    /**\n     * Submit change to project name.\n     */\n    submitUpdateProjectName = (name) => {\n        const { onEditProject, project } = this.props;\n        this.hideModal();\n        if (name.trim() !== project.name) {\n            onEditProject(name);\n        }\n    }\n    /**\n     * Show workflow at branch head when user wants to return to the head - previously 'Go Live'\n     */\n    switchToBranchHead = () => {\n        const { onShowNotebook } = this.props;\n        onShowNotebook();\n    }\n}\n\nexport default AppMenu;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport {  Grid, Loader, Modal } from 'semantic-ui-react';\nimport { showChartView } from '../actions/chart/Chart';\nimport { reverseOrder, setModuleFilter, toggleHideCells } from '../actions/main/App';\nimport { updateBranch } from '../actions/project/Branch';\nimport { dismissProjectActionError, updateProject } from '../actions/project/Project';\nimport { createProject, deleteProject, uploadProject } from '../actions/project/ProjectListing';\nimport { showSpreadsheet, showDatasetCaveat, repairDatasetCaveat } from '../actions/project/Spreadsheet';\nimport AppMenu from './menu/AppMenu';\nimport { ErrorMessage } from './Message';\nimport { baseHref, branchPageUrl, notebookPageUrl, spreadsheetPageUrl, errorListPageUrl, valueOrDefault } from '../util/App';\nimport { HATEOAS_PROJECTS_CREATE, HATEOAS_PROJECTS_IMPORT }  from '../util/HATEOAS';\nimport { isCellOutputRequest } from '../actions/project/Notebook';\n\nclass ResourcePage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        branch: PropTypes.object,\n        content: PropTypes.object.isRequired,\n        contentCss: PropTypes.string.isRequired,\n        dispatch: PropTypes.func.isRequired,\n        history: PropTypes.object.isRequired,\n        isActive: PropTypes.bool.isRequired,\n        notebook: PropTypes.object,\n        onCreateBranch: PropTypes.func,\n        onDeleteBranch: PropTypes.func,\n        onShowNotebook: PropTypes.func,\n        onSwitchBranch: PropTypes.func,\n        onCancelExec: PropTypes.func,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        resource: PropTypes.object.isRequired,\n        serviceApi: PropTypes.object.isRequired,\n        userSettings: PropTypes.object.isRequired\n    }\n    /**\n     * Dismiss resource error message.\n     */\n    dismissResourceError = () => {\n        const { dispatch } = this.props;\n        dispatch(dismissProjectActionError(null));\n    }\n    handleCreateProject = (name) => {\n        const { dispatch, history, serviceApi } = this.props;\n        const url = serviceApi.links.get(HATEOAS_PROJECTS_CREATE);\n        dispatch(createProject(url, name, history));\n    }\n    handleImportProject = (file) => {\n        const { dispatch, history, serviceApi } = this.props;\n        const url = serviceApi.links.get(HATEOAS_PROJECTS_IMPORT);\n        dispatch(uploadProject(url, file, history));\n    }\n    /**\n     * Handle the deletion of the given project and switch to the home page.\n     */\n    handleDeleteProject = (project) => {\n        const { dispatch, history } = this.props;\n        dispatch(deleteProject(project))\n        history.push(baseHref)\n    }\n    /**\n     * Switch to the main page when the user presses the home button in the\n     * application menu.\n     */\n    handleGoHome = () => {\n        this.props.history.push(baseHref);\n    }\n    /**\n     * Set the object that contains the filtered module identifier. Expects an\n     * object where the properties are package identifier and the values are\n     * lists of command identifier.\n     */\n    handleSetFilter = (filter) => {\n        this.props.dispatch(setModuleFilter(filter));\n    }\n    /**\n     * Show branch history page.\n     */\n    handleShowBranch = () => {\n        const { branch, history, project } = this.props;\n        history.push(branchPageUrl(project.id, branch.id));\n    }\n    /**\n     * Show given project.\n     */\n    handleShowProject = (project) => {\n        const { history } = this.props;\n        history.push(notebookPageUrl(project.id, project.defaultBranch));\n    }\n    /**\n     * Dispatch action to toggle the value of the reversed property in the\n     * user settings.\n     */\n    handleToggleHideCells = () => {\n        const { dispatch } = this.props;\n        dispatch(toggleHideCells());\n    }\n    /**\n     * Dispatch action to toggle the value of the reversed property in the\n     * user settings.\n     */\n    handleToggleNotebookReverse = () => {\n        const { dispatch } = this.props;\n        dispatch(reverseOrder());\n    }\n    /**\n     * Load a chart view and dispaly it as the project page resource content.\n     */\n    loadChartView = (chart) => {\n        const { dispatch } = this.props;\n        dispatch(showChartView(chart));\n    }\n    /**\n     * Switch to spreadsheet view and load the selected dataset.\n     */\n    loadDataset = (dataset) => {\n        const { dispatch, history, notebook, branch, project } = this.props;\n        notebook.datasets[dataset.id].name = dataset.name\n        dispatch(showSpreadsheet(notebook.datasets[dataset.id]));  \n        history.push(spreadsheetPageUrl(project.id, branch.id, dataset.id));\n    }\n    /**\n     * Switch to error view and load the selected dataset.\n     */\n    loadDatasetCaveat = (dataset) => {\n        const { dispatch, history, notebook, branch, project } = this.props;\n        const datasetAnnoUrl = notebook.datasets[dataset.id].links.getSelf()+'/annotations';\n        notebook.datasets[dataset.id].name = dataset.name\n         //dispatch(fetchAnnotations(dataset));\n        dispatch(showDatasetCaveat(notebook.datasets[dataset.id], datasetAnnoUrl));\n        history.push(errorListPageUrl(project.id, branch.id, dataset.id));\n    }\n    /**\n     * Switch to spreadsheet view and load the selected to the page\n     * that has the source of a specific error.\n     */\n    loadDatasetToError = (dataset) => (reason) => {\n    \tconst { dispatch, serviceApi } = this.props;\n    \tconst fetch_url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '?rowid='+reason.args[reason.rowidarg]\n        dispatch(showSpreadsheet(dataset, fetch_url));\n    }\n    /**\n     * Repair a specific error.\n     */\n    loadDatasetRepair = (dataset) => (reason, repair, acknowledge) => {\n        const { dispatch, serviceApi } = this.props;\n        const url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '/feedback'\n        dispatch(repairDatasetCaveat(dataset, url, reason, repair, acknowledge));\n    }\n    render() {\n        const {\n            actionError,\n            branch,\n            content,\n            contentCss,\n            notebook,\n            onCreateBranch,\n            onDeleteBranch,\n            onShowNotebook,\n            onSwitchBranch,\n            onCancelExec,\n            project,\n            projectList,\n            resource,\n            userSettings\n        } = this.props\n\n        // Set window title to contain project name\n        if (project != null) {\n            document.title = 'Vizier DB - ' + valueOrDefault(project.name, 'undefined');\n        } else {\n            document.title = 'Vizier DB - Projects';\n        }\n        // A resource error may be present independently of the project\n        // resource, i.e., due to resource fetch error (-> no resource) or\n        // resource update error (-> we have a resource)\n        let optionalError = null;\n        if (actionError != null) {\n            optionalError = <ErrorMessage\n                title={actionError.title}\n                message={actionError.message}\n                onDismiss={this.dismissResourceError}\n            />;\n        }\n        // Show a modal with a loader that overlays the full screen if\n        // the page content is currently being fetched: open={isActive}\n        let pageContent = (\n            <div>\n                <Modal dimmer={true} open={false}>\n                    <Loader size='large' active={true}>Update in progress ...</Loader>\n                </Modal>\n                { optionalError }\n                { content }\n            </div>\n        )\n        let headerContent = null;\n        let contentCssClass = '';\n        const cellOutput = isCellOutputRequest();\n        if(cellOutput){\n        \tcontentCssClass = '';\n        }\n        else{\n        \tcontentCssClass = contentCss;\n        \theaderContent = (\n        \t\t<Grid>\n\t\t            <Grid.Row>\n\t\t            <Grid.Column className='project-menu-bar'>\n\t\t            <AppMenu\n\t\t                branch={branch}\n\t\t                notebook={notebook}\n\t\t                onCreateBranch={onCreateBranch}\n\t\t                onCreateProject={this.handleCreateProject}\n\t\t            \tonImportProject={this.handleImportProject}\n\t\t            \tonDeleteBranch={onDeleteBranch}\n\t\t                onDeleteProject={this.handleDeleteProject}\n\t\t                onEditBranch={this.submitEditBranch}\n\t\t                onEditProject={this.submitEditProject}\n\t\t                onGoHome={this.handleGoHome}\n\t\t                onHideCells={this.handleToggleHideCells}\n\t\t                onReverse={this.handleToggleNotebookReverse}\n\t\t                onSetFilter={this.handleSetFilter}\n\t\t                onShowChart={this.loadChartView}\n\t\t                onShowDataset={this.loadDataset}\n\t\t                onShowDatasetCaveat={this.loadDatasetCaveat}\n\t\t                onShowHistory={this.handleShowBranch}\n\t\t                onShowNotebook={onShowNotebook}\n\t\t                onShowProject={this.handleShowProject}\n\t\t                onSwitchBranch={onSwitchBranch}\n                        onCancelExec={onCancelExec}\n\t\t                project={project}\n\t\t                projectList={projectList}\n\t\t                resource={resource}\n\t\t                userSettings={userSettings}\n\t\t            />\n\t\t            </Grid.Column>\n\t\t        </Grid.Row>\n\t\t    </Grid>\n\t\t    );\n        }\n        return (\n            <div>\n                { headerContent }\n                <div className={'page-content ' + contentCssClass}>\n                    { pageContent }\n                </div>\n            </div>\n        );\n    }\n    /**\n     * Submit request to update the name of the current branch.\n     */\n    submitEditBranch = (name) => {\n        const { dispatch, project, branch } = this.props;\n        dispatch(updateBranch(project, branch, name));\n    }\n    /**\n     * Submit request to update the name of the project.\n     */\n    submitEditProject = (name) => {\n        const { dispatch, project } = this.props;\n        dispatch(updateProject(project, name))\n    }\n}\n\nexport default withRouter(ResourcePage);\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Icon } from 'semantic-ui-react'\nimport { createProject } from '../../actions/project/ProjectListing'\nimport EditResourceNameModal from '../../components/modals/EditResourceNameModal';\nimport { LargeMessageButton } from '../../components/Button';\nimport { MainPageResource } from '../../util/App.js';\nimport ProjectListing from '../project/ProjectListing'\nimport ResourcePage from '../../components/ResourcePage';\nimport { isNotEmptyString, notebookPageUrl } from '../../util/App.js';\nimport { HATEOAS_PROJECTS_CREATE } from '../../util/HATEOAS';\nimport '../../../css/App.css'\nimport '../../../css/ResourceListing.css'\n\n\nclass MainPage extends Component {\n    static propTypes = {\n        homePageContent: PropTypes.string,\n        projects: PropTypes.array,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired\n    }\n    constructor(props) {\n        super(props);\n        // Flag indicating if the create modal is being shown.\n        this.state = {showModal: false};\n    }\n    /**\n     * Submit a create new project request. If the name is empty it is set to\n     * 'undefined' by default.\n     */\n    handleCreateProject = (name) => {\n        const { dispatch, history, serviceApi } = this.props;\n        const url = serviceApi.links.get(HATEOAS_PROJECTS_CREATE);\n        this.hideModal();\n        dispatch(createProject(url, name, history));\n    }\n    /**\n     * Show page for a selected project.\n     */\n    handleShowProjectPage = (project) => {\n        const { history } = this.props;\n        history.push(notebookPageUrl(project.id, project.defaultBranch));\n    }\n    /**\n     * Set the show modal flag to false;\n     */\n    hideModal = () => (this.setState({showModal: false}));\n    /**\n     */\n    render() {\n        const {\n            dispatch,\n            homePageContent,\n            projects,\n            serviceApi,\n            userSettings\n        } = this.props;\n        // Headline and optional description contained in the service descriptor\n        let headline = null;\n        let description = null;\n        if (homePageContent != null) {\n            headline  = homePageContent.headline;\n            description = homePageContent.description;\n        } else {\n            headline = (\n                <span>\n                    Vizier\n                    <span className='headline-small'>\n                        Streamlined Data Curation\n                    </span>\n                </span>\n            );\n        }\n        // If the list of project is empty show a message and button to add a\n        // new project.\n        let listingContent = null;\n        if ((projects != null) && (projects.length === 0)) {\n            listingContent = (\n                <div className='empty-list-message'>\n                    <LargeMessageButton\n                        message='Your project list is empty. Start by creating a new project.'\n                        icon='plus'\n                        onClick={this.showCreateProjectModal}\n                    />\n                </div>\n            );\n        } else {\n            listingContent = (\n                <div>\n                    <div className='project-listing'>\n                        <ProjectListing />\n                    </div>\n                    <Button\n                        icon\n                        labelPosition='left'\n                        size='tiny'\n                        positive\n                        onClick={this.showCreateProjectModal}\n                    >\n                      <Icon name='plus' /> New Project ...\n                    </Button>\n                </div>\n            );\n        }\n        const content = (\n            <div className='home-content'>\n                <h1 className='home-headline'>{headline}</h1>\n                { description }\n                { listingContent }\n                <EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={this.state.showModal}\n                    prompt='Enter a name for the new project'\n                    title={'Create project'}\n                    onCancel={this.hideModal}\n                    onSubmit={this.handleCreateProject}\n                />\n            </div>\n        );\n        return (\n            <ResourcePage\n                content={content}\n                contentCss='wide'\n                dispatch={dispatch}\n                isActive={false}\n                projectList={projects}\n                resource={MainPageResource()}\n                serviceApi={serviceApi}\n                userSettings={userSettings}\n            />\n        );\n    }\n    /**\n     * Show the create project modal.\n     */\n    showCreateProjectModal = () => (this.setState({showModal: true}));\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        homePageContent: state.mainPage.homePageContent,\n        projects: state.projectListing.projects,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(MainPage))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport {  Icon } from 'semantic-ui-react';\nimport { deleteBranch, fetchBranch } from '../../actions/project/Branch';\nimport { fetchProject, setBranch } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\nimport ResourcePage from '../../components/ResourcePage';\nimport { BranchResource } from '../../util/App';\nimport { branchPageUrl, notebookPageUrl } from '../../util/App.js';\n\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/BranchHistory.css';\n\n\n/**\n * The branch history page displays the list of workflow versions that form the\n * history of a project branch. For each version the action that created the\n * workflow is shown together with the time of creation. The user can select\n * any of the workflow versions and display them in a different page.\n *\n */\n\nclass BranchPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        workflows: PropTypes.array\n    }\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        const { branch, dispatch, project, projectList, workflows } = this.props;\n        // Get project and branch identifier from the URL\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        // Fetch any resources that are currently missing. It is assumed that\n        // the branch is set if the project is set.\n        dispatch(fetchProject(projectId, branchId, fetchBranch));\n        if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        } else if (workflows == null) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        }\n        // Get project listing if not set\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. It appears that when the user\n     * uses the back and previous button in the browser the current state and\n     * the previous state are the same but the branch identifier in the URL\n     * is different.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Check if the location path has changed. The change may either be\n        // the result from a delete branch operation or the result of the user\n        // usingthe back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(fetchProject(projectId, branchId, fetchBranch));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(fetchBranch(project, project.findBranch(branchId)));\n            }\n        }\n    }\n    /**\n     * Delete the given branch. Switch to the project default branch on success.\n     */\n    handleDeleteBranch = (branch) => {\n        const { dispatch, history, project } = this.props;\n        // The delete branch method will delete the branch on the server, update\n        // the project and push the URL of the default branch onto the history\n        // stack. This should trigger the component to render that branch.\n        dispatch(deleteBranch(project, branch, branchPageUrl, history));\n    }\n    /**\n     * Push URL for notebook page onto history stack. This will render a new\n     * component.\n     */\n    handleShowWorkflow = (workflow, isHead) => {\n        const { branch, history, project } = this.props;\n        let workflowId = null;\n        if ((!isHead) && (workflow != null)) {\n            workflowId = workflow.id;\n        }\n        history.push(notebookPageUrl(project.id, branch.id, workflowId));\n    }\n    /**\n     * Dispatch actions to switch to a given branch and load the branch history.\n     */\n    handleSwitchBranch = (branch) => {\n        const { dispatch, history, project } = this.props;\n        history.push(branchPageUrl(project.id, branch.id));\n        dispatch(setBranch(project, branch.id, fetchBranch));\n    }\n    /**\n     * The branch history is rendered as a table with five columns: (1) the\n     * workflow version identifier, (2) an icon containing a link to display\n     * the workflow version in a web page, (3) an icon depicting the type of\n     * action that created the workflow version (i.e., CREATE BRANCH,\n     * INSERT/APPEND MODULE, DELETE MODULE, or REPLACE MODULE), (4) the short\n     * form of the command specification that was used to define the module\n     * that was affected by the action, and (5) the time of creation.\n     */\n    render() {\n        const {\n            actionError,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            project,\n            projectList,\n            serviceApi,\n            userSettings,\n            workflows\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (workflows == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading History ...' />;\n        } else if (workflows != null) {\n            // The branch history has been fetched successfully. Show a table\n            // containing the different workflow versions.\n            const rows = [];\n            for (let i = 0; i < workflows.length; i++) {\n                const wf = workflows[i];\n                let icon = null;\n                let action = null;\n                let command = null;\n                let color = 'black';\n                if (wf.actionIsCreate()) {\n                    icon = 'fork';\n                    color = 'grey';\n                    action = 'Create branch';\n                } else {\n                    if (wf.actionIsDelete()) {\n                        icon = 'trash';\n                        color = 'red';\n                        action = 'Delete cell';\n                    } else if (wf.actionIsAppend()) {\n                        icon = 'add square';\n                        color = 'green';\n                        action = 'Append cell';\n                    } else if  (wf.actionIsInsert()) {\n                        icon = 'add circle';\n                        color = 'olive';\n                        action = 'Insert cell';\n                    } else if (wf.actionIsReplace()) {\n                        icon = 'pencil';\n                        color = 'blue';\n                        action = 'Replace cell';\n                    }\n                    command = serviceApi\n                        .engine\n                        .packages\n                        .getCommandSpec(wf.packageId, wf.commandId)\n                        .name;\n                }\n                const isHead = (i === workflows.length - 1);\n                rows.push(\n                    <tr key={wf.id}>\n                        <td className='workflow-nr'>{wf.id}</td>\n                        <td className='workflow-icon'>\n                            <Icon\n                                title='Show notebook'\n                                link name={'eye'}\n                                onClick={() => (this.handleShowWorkflow(wf, isHead))}\n                            />\n                        </td>\n                        <td className='workflow-icon'><Icon title={action} name={icon} color={color}/></td>\n                        <td className='workflow-command'>{command}</td>\n                        <td className='version-timestamp'>{wf.createdAt}</td>\n                    </tr>\n                )\n            }\n            const pageContent = (\n                <div className='branch-history'>\n                    <h1 className='branch-history'>\n                        {'Notebooks in Branch '}\n                        <span className='branch-highlight'>{branch.name}</span>\n                    </h1>\n                    <p className='info-text'>This is a list of all notebook versions in the history of\n                        the branch {branch.name}. Click on the&nbsp; <Icon name='eye' /> to display a notebook.\n                    </p>\n                    <table><tbody>{rows}</tbody></table>\n                </div>\n            );\n            // Show branch history table as the main content in a project\n            // resource page\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    onDeleteBranch={this.handleDeleteBranch}\n                    onShowNotebook={this.handleShowWorkflow}\n                    onSwitchBranch={this.handleSwitchBranch}\n                    project={project}\n                    projectList={projectList}\n                    resource={new BranchResource()}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                />\n            );\n        }\n        return content;\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        branch: state.projectPage.branch,\n        fetchError: state.branchPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.branchPage.isFetching,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        workflows: state.branchPage.workflows\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(BranchPage))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Button, Dropdown, Grid, Icon, Input, List, Loader, Modal, Message } from 'semantic-ui-react';\nimport { IconButton } from '../Button'\nimport '../../../css/Annotation.css';\nimport '../../../css/App.css';\n\nclass AnnotationObject extends React.Component {\n    static propTypes = {\n        annotation: PropTypes.object.isRequired,\n        onDelete: PropTypes.func,\n        onDiscard: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func\n    }\n    constructor(props) {\n        super(props);\n        this.keys = [\n            { key: 'user:comment', text: 'Comment', value: 'user:comment' },\n            { key: 'user:issue', text: 'Issue', value: 'user:issue' },\n        ];\n        this.state = {key: 'user:comment', value: '', selectedAnnotation: -1};\n    }\n    handleDelete = () => {\n        const { annotation, onDelete } = this.props;\n        const { selectedAnnotation } = this.state;\n        onDelete(annotation, selectedAnnotation);\n        // Make sure to clear the selected item\n        this.setState({selectedAnnotation: -1});\n    }\n    /**\n     * Handle changes in the form control element by updating the internal state.\n     */\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n    /**\n     * Clear the selected items and text input when closing the modal.\n     */\n    handleClose = () => {\n        const { onDiscard } = this.props;\n        this.setState({key: 'user:comment', value: '', selectedAnnotation: -1});\n        onDiscard()\n    }\n    /**\n     * Detect RETURN key press to submit form.\n     */\n    handleKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            this.handleSubmit();\n        }\n    }\n    handleSelectAnnotation = (e, { id }) => {\n        const { selectedAnnotation } = this.state;\n        if (selectedAnnotation === id) {\n            this.setState({selectedAnnotation: -1});\n        } else {\n            this.setState({selectedAnnotation: id});\n        }\n    }\n    handleSelectKey = (e, { value }) => {\n        this.setState({key: value});\n    }\n    handleSubmit = () => {\n        const { annotation, onSubmit } = this.props;\n        const { key, value } = this.state;\n        if (value.trim() !== '') {\n            onSubmit(annotation, key, value);\n        }\n        this.setState({value: '', selectedAnnotation: -1});\n    }\n    render() {\n        const { annotation, onDelete, onSubmit } = this.props;\n        const { selectedAnnotation } = this.state;\n        if (annotation.content != null) {\n            let content = null;\n            if (annotation.content.isFetching()) {\n                content = (<Loader active inline='centered' />);\n            } else if (annotation.content.isError()) {\n                content = (\n                    <Message negative\n                      header={annotation.content.title}\n                      content={annotation.content.message}\n                    />\n                );\n            } else {\n                if (annotation.content.items.length > 0) {\n                    const rows = [];\n                    for (let i = 0; i < annotation.content.items.length; i++) {\n                        const anno = annotation.content.items[i];\n                        let color = null;\n                        let icon = null;\n                        let title = null;\n                        if (anno.key === 'mimir:uncertain') {\n                            icon = 'warning sign';\n                            title = 'Mimir';\n                            color = 'yellow';\n                            anno.value = anno.message;\n                        } else if (anno.key === 'user:issue') {\n                            icon = 'info circle';\n                            title = 'Issue';\n                        } else {\n                            icon = 'comment alternate outline';\n                            title = 'Comment';\n                            anno.value = anno.message;\n                        }\n                        let cssSuffix = '';\n                        if ((anno.key === 'mimir:uncertain') || (onSubmit == null)) {\n                            cssSuffix = ' disabled';\n                        }\n                        let annoIcon = null;\n                        if ((onDelete != null) && (anno.key !== 'mimir:uncertain') && (anno.id === selectedAnnotation)) {\n                            annoIcon = (\n                                <Icon\n                                    name='trash'\n                                    size='large'\n                                    onClick={this.handleDelete}\n                                />\n                            );\n                            cssSuffix = ' delete';\n                        } else {\n                            annoIcon = (<Icon name={icon} size='large' color={color}/>);\n                        }\n                        rows.push(\n                            <tr key={i}>\n                                <td className={'list-icon' + cssSuffix}>\n                                    { annoIcon }\n                                </td>\n                                <td className={'list-text' + cssSuffix}>\n                                    <List relaxed>\n                                        <List.Item id={anno.id} onClick={this.handleSelectAnnotation}>\n                                          <List.Content>\n                                            <List.Header>{title}</List.Header>\n                                            <List.Description>\n                                                {anno.value}\n                                                </List.Description>\n                                          </List.Content>\n                                        </List.Item>\n                                    </List>\n                                </td>\n                            </tr>\n                        );\n                    }\n                    content = (\n                        <table className='annotations'><tbody>\n                            { rows }\n                        </tbody></table>\n                    );\n                } else {\n                    content = (\n                        <p className='info-text'>\n                            There are currently no annotations for this cell\n                        </p>\n                    );\n                }\n            }\n            let inputForm = null;\n            if (onSubmit != null) {\n                inputForm = (\n                    <Modal.Actions>\n                        <Input\n                            fluid\n                            label={<Dropdown\n                                defaultValue='user:comment'\n                                options={this.keys}\n                                onChange={this.handleSelectKey}\n                            />}\n                            action={<Button\n                                color='green'\n                                icon='plus'\n                                onClick={this.handleSubmit}\n                            />}\n                            placeholder='Add a new comment...'\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            onKeyDown={this.handleKeyDown}\n                        />\n                    </Modal.Actions>\n                );\n            }\n            return (\n                <Modal open={true} dimmer={'inverted'} size={'small'}>\n                    <Modal.Header>\n                        <Grid columns={2}>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    Cell Annotations\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <div className='header-button'>\n                                        <IconButton name=\"close\" onClick={this.handleClose}/>\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Modal.Header>\n                    <Modal.Content>\n                        { content }\n                    </Modal.Content>\n                    {inputForm}\n                </Modal>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default AnnotationObject;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Modal, Input, Label } from 'semantic-ui-react'\nimport '../../../css/Modals.css'\n\n\n/**\n* Modal to display a shareable link for a notebook version\n*/\nclass ShareLinkModal extends React.Component {\n    static propTypes = {\n        onClose: PropTypes.func.isRequired,\n        open: PropTypes.bool.isRequired,\n        url: PropTypes.string.isRequired,\n        copySupport: PropTypes.bool.isRequired\n    }\n\n    state = {\n        copySuccess: false\n    }\n\n    copyToClipboard = () => {\n        this.textInput.select();\n        document.execCommand('copy');\n        this.setState({copySuccess : true})\n    }\n\n    /**\n     * Show notebook cell content. There are four different layouts depending on\n     * the values of the isExpanded and hasModule flags. The general layout is\n     * two columns: the first column contain the cell index and the second\n     * column the cell module.\n     */\n    render() {\n        const { onClose, open, url, copySupport } = this.props;\n        return (\n            <Modal open={open} dimmer={'inverted'} size={'small'}>\n                <Modal.Header>Share Link</Modal.Header>\n                <Modal.Content>\n                    <div>\n                        <p className='share-header'>\n                            Copy link below to share this notebook version\n                        </p>\n                        { // ensure copying to clipboard is supported by the browser else just display the link\n                        \tcopySupport ?\n                            <Input\n                                fluid\n                                readOnly\n                                action={{\n                                    icon: \"copy\",\n                                    onClick: () => this.copyToClipboard(),\n                                    content: this.state.copySuccess ? \"Copied!\" : \"Copy\"\n                                }}\n                                value = {url}\n                                ref={ref=>this.textInput=ref}\n                            /> :\n                                <Label readOnly>\n                                    <a href={url} target=\"_blank\">{url}</a>\n                                </Label>\n                        }\n                    </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  primary onClick={onClose}>Done</Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nexport default ShareLinkModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon } from 'semantic-ui-react';\nimport ShareLinkModal from '../modals/ShareLinkModal'\nimport { notebookPageUrl } from '../../util/App'\nimport '../../../css/App.css'\nimport '../../../css/ProjectPage.css'\n\n\n/**\n * Display a status header for the current resource workflow. Shows the workflow\n * branch and shareable link.\n */\nclass NotebookStatusHeader extends Component {\n    static propTypes = {\n        branch: PropTypes.object.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onShowHistory: PropTypes.func.isRequired,\n        onSwitchBranch: PropTypes.func.isRequired,\n        project: PropTypes.object.isRequired,\n        copySupport: PropTypes.bool.isRequired \n    }\n    constructor(props) {\n        super(props);\n        this.state = {showModal: false};\n    }\n    /**\n     * Close the shareable link modal.\n     */\n    closeModal = () => (this.setState({showModal: false}));\n    /**\n     * Show information about the current workflow version and a button to\n     * display the shareable link modal.\n     */\n    render() {\n        const {\n            branch,\n            notebook,\n            onShowHistory,\n            onSwitchBranch,\n            project,\n            copySupport\n        } = this.props;\n        const { showModal } = this.state;\n        let extraContent = null;\n        if (notebook.readOnly) {\n            extraContent = (\n                <span>\n                    <span className='right-padding-sm'>{'at '}</span>\n                    <span className='info-date'>{notebook.createdAt}</span>\n                    <span className='padding-sm'>\n                        <span className='clickable-icon'>\n                            <Icon\n                                name='play'\n                                title='Latest Version'\n                                onClick={() => (onSwitchBranch(branch))}\n                            />\n                        </span>\n                    </span>\n                </span>\n            );\n        } else {\n            extraContent = (\n                <span className='padding-sm'>\n                    <span className='clickable-icon'>\n                        <Icon\n                            name='history'\n                            title='Show history'\n                            onClick={onShowHistory}\n                        />\n                    </span>\n                </span>\n            );\n        }\n\n        const isAuth = window.env.API_ADV_AUTH;\n        let url = window.location.protocol + '//' + window.location.host;\n        url += notebookPageUrl(project.id, branch.id, notebook.id);\n        if( isAuth ){\n        \turl =  window.location.protocol + '//' + window.location.host +'/auth/public?workflow-url=' + url\n        }\n\n        return (\n            <div className='notebook-header status-header'>\n                <span>{<Icon name='fork' />}</span>\n                <span>{'On branch '}</span>\n                <span className='right-padding-sm'>\n                    <span className='info-bold'>{branch.name}</span>\n                </span>\n                { extraContent }\n                <span className='clickable-icon'>\n                    <Icon\n                        name='linkify'\n                        title='Get shareable link to this notebook'\n                        onClick={this.openModal}\n                    />\n                </span>\n                <ShareLinkModal\n                    url={url}\n                    onClose={this.closeModal}\n                    open={showModal}\n                    copySupport={copySupport}\n                />\n            </div>\n        );\n    }\n    openModal = () => (this.setState({showModal: true}));\n}\n\nexport default NotebookStatusHeader;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Icon, List, Segment, Header } from 'semantic-ui-react'\nimport '../../../../css/Commands.css'\n\n\n/**\n * Display a listing of all available module specifications (commands) as user\n * can chose from in a new notebook cell.\n */\nclass CommandsListing extends React.Component {\n    static propTypes = {\n        apiEngine: PropTypes.object.isRequired,\n        onDismiss: PropTypes.func.isRequired,\n        onPaste: PropTypes.func,\n        onSelect: PropTypes.func.isRequired,\n    }\n    \n    groupBy = (arr, property)  => {\n    \t  return arr.reduce((cat, x) => {\n    \t    if (!cat[x[property]]) { cat[x[property]] = []; }\n    \t    cat[x[property]].push(x);\n    \t    return cat;\n    \t  }, {});\n    \t}\n\n    \t\n    render() {\n        const { apiEngine, onDismiss, onPaste, onSelect} = this.props;\n        // Get a list of command types\n        const gridColumns = [];\n        // Get list of packages. The list is sorted by package name by default.\n        const knownCategories = ['data_m','code','data_v','vizualization','default'];\n        const columnOrg = {'MIMIR':0,'DATA':1,'R':2,'SAMPLING':1,'SCALA':2,'SQL':2,'MARKDOWN':2,'PLOT':2,'PYTHON':2,'VIZUAL':3};\n        const packages = apiEngine.packages.toList();//.sort((c1, c2) => (knownCategories.indexOf(c1.category)-knownCategories.indexOf(c2.category)));\n        //const groupedPackages = this.groupBy(packages, 'category');\n        const groupedPackages = [[],[],[],[]];\n        for (let pckg of packages) {\n        \tlet colIdx = (pckg.name.toUpperCase() in columnOrg) ? columnOrg[pckg.name.toUpperCase()] : 1;\n        \tgroupedPackages[colIdx].push(pckg);\n        }\n        const sortedKeys = [0,1,2,3]//Object.keys(groupedPackages).sort((c1, c2) => (knownCategories.indexOf(c1)-knownCategories.indexOf(c2)))\n        //groupedPackages[knownCategories[i]]\n        let listItems = [];\n        for (const packageCategory of sortedKeys) {\n        \tlistItems = [];\n        \tconst catPackages = groupedPackages[packageCategory];\n\t        for (let pckg of catPackages) {\n\t            // Get list of package commands. Elements in the list are sorted by\n\t            // the command name by default.\n\t            const commands = pckg.toList();\n\t            listItems.push(\n\t                <List.Item key={pckg.id}>\n\t                    <List.Header>{pckg.name.toUpperCase()}</List.Header>\n\t                </List.Item>\n\t            );\n\t            for (let i = 0; i < commands.length; i++) {\n\t                const cmd = commands[i];\n                    let item = cmd.suggest ? <List.Item key={listItems.length} onClick={() => (onSelect(pckg.id, cmd.id))}>\n                        <List.Content>\n                            <List.Header as='a' className='suggested-action' icon>\n                                <Header.Content>\n                                    <Icon name={'star'} color={'yellow'}/>\n                                    { cmd.name }\n                                </Header.Content>\n                            </List.Header>\n                        </List.Content>\n                    </List.Item> : <List.Item key={listItems.length} onClick={() => (onSelect(pckg.id, cmd.id))}>\n                        <List.Content>\n                            <List.Header as='a'>{'  ' + cmd.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                    listItems.push(item)\n\t            }\n\t        }\n\t        gridColumns.push(\n                    <Grid.Column className={packageCategory} width={4} key={gridColumns.length}>\n                        <List link>\n                            { listItems }\n                        </List>\n                    </Grid.Column>\n                );\n        }\n        // Show a paste command button in the title if the onPaste callback is\n        // given.\n        let title = null;\n        if (onPaste != null) {\n            title = (\n                <div>\n                    {'Select a module from the list below or paste '}\n                    <Icon\n                        name='paste'\n                        link\n                        onClick={onPaste}\n                        title='Paste from clipboard'\n                    />\n                    {'from clipboard.'}\n                </div>\n            );\n        } else {\n            title = 'Select a module from the list below.'\n        }\n        return (\n            <div className='commands-listing'>\n                <Segment>\n                    <div className='commands-listing-header'>\n                        { title }\n                        <span className='pull-right clickable-icon'>\n                            <Icon\n                                name='close'\n                                link\n                                onClick={onDismiss}\n                            />\n                        </span>\n                    </div>\n                    <Grid columns={packages.length} divided>\n                        <Grid.Row>\n                            { gridColumns }\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nexport default CommandsListing;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/mode/r/r';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\nimport '../../../../../css/CodeHighlight.css';\nimport Highlight from 'react-highlight'\n\nclass CodeCell extends React.Component {\n    static propTypes = {\n        cursorPosition: PropTypes.object.isRequired,\n        id: PropTypes.string.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        language: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        onCursor: PropTypes.func.isRequired,\n        onFocus: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        locked: PropTypes.bool\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1) {\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete') {\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n        let cursorPos = editor.getCursor();\n        this.props.onCursor(cursorPos);\n    }\n    \n    /**\n     * Handle keymap for codemirror to replace tab key with spaces\n     */\n    tabReplace = (cm) => {\n\t    const spaces = Array(cm.getOption(\"indentUnit\") + 1).join(\" \");\n\t    cm.replaceSelection(spaces);\n\t  }\n    \n    /**\n     * Handle click for inactive cell to map click to cursor position in codemirror\n     */\n    onClickInactiveCodeCell = (event) => {\n    \t const {\n             onFocus,\n             onCursor\n         } = this.props;\n         let div = document.getElementById(\"empxCalc\");\n         div.style.height = '1em';\n         const lineHeightInPx = div.offsetHeight * 1.4285;//because lineheight is 1.4285em\n         const chWidthInPx = div.offsetHeight / 1.6585;//because font size is 1em\n         const transCY = event.nativeEvent.layerY;\n         const transCX = event.nativeEvent.layerX;\n         const lineNo = (transCY/lineHeightInPx)\n         const lineSkew = lineNo * 0.03448; \n         let cursorPos = { line:Math.round(lineNo+lineSkew) , ch:Math.round(transCX/chWidthInPx)-1, sticky:\"before\", xRel: 0};\n         onFocus();\n         onCursor(cursorPos);\n\t  }\n    \n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const {\n            cursorPosition,\n            isActiveCell,\n            language,\n            onFocus,\n            readOnly,\n            value,\n            locked\n        } = this.props;\n        // The editor mode and the shown code snippet selector depends on the\n        // value of the language property. By now we support the following\n        // three languages: Python, Scala, SQL. It would be nice to have a more\n        // comprehensive mapping of language identifier to CodeMirror modes.\n        let mode = null;\n        if (language === 'python') {\n            mode = 'python';\n        } else if (language === 'scala') {\n            mode = 'text/x-scala';\n        } else if (language === 'r') {\n            mode = 'text/x-rsrc';\n        } else if (language === 'sql') {\n            mode = 'text/x-sql';\n        } else if (language === 'markdown') {\n            mode = 'markdown';\n        }\n        let codeEditor = null;\n        if(isActiveCell){\n        \tif(locked){\n        \t\tcodeEditor = <div className='editor-container'>{'Code Cell'}</div>\n        \t}\n        \telse{\n\t        \tcodeEditor = <div className='editor-container'>\n\t\t        \t<CodeMirror\n\t\t\t            value={value}\n\t\t\t            cursor={cursorPosition}\n\t\t\t            options={{\n\t\t\t                autofocus: isActiveCell,\n\t\t\t                lineNumbers: true,\n\t\t\t                mode: mode,\n\t\t\t                indentUnit: 4,\n\t\t\t                readOnly: ((!isActiveCell) || readOnly) ,\n\t\t\t                dragDrop: false,\n\t\t\t                extraKeys: { Tab: this.tabReplace }\n\t\t\t            }}\n\t\t\t            onBeforeChange={(editor, data, value) => {\n\t\t\t                this.handleChange(editor, value, data);\n\t\t\t            }}\n\t\t\t        \tonCursor={(editor, data) => {\n\t\t\t        \t\tthis.handleCursorActivity(editor, data)\n\t\t\t        \t}}\n\t\t\t            onFocus={onFocus}\n\t\t\t        />\n\t\t         </div>\n        \t}\n        }\n        else {\n        \tif(locked){\n        \t\tcodeEditor = <div className='editor-container'>{'Code Cell'}</div>\n        \t}\n        \telse{\n        \t\tif(!(language === 'markdown')){\n        \t      codeEditor = \n\t        \t    <div \n\t        \t      className='editor-container'\n\t        \t      onClick={this.onClickInactiveCodeCell} >\n\t\t        \t\t<Highlight className={ language }>\n\t\t        \t\t  { value }\n\t\t        \t\t</Highlight>\n\t\t            </div>\n\t            }\n        \t}\n        }\n        return (<div>\n        \t\t  <div id=\"empxCalc\" className=\"empxCalc\"></div>\n        \t\t  { codeEditor }\n        \t\t</div>);\n    }\n}\n\nexport default CodeCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\n\n\n/**\n * Simple text control to input a string.\n */\nclass TextControl extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        placeholder: PropTypes.string.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]),\n        onChange: PropTypes.func.isRequired\n    }\n    /**\n     * Change handler for text control. Update the state of the control in the\n     * component that maintains the state of the form that contains this text\n     * control.\n     */\n    handleChange = (event, { value }) => {\n        const { id, onChange } = this.props\n        onChange(id, value)\n    }\n    render() {\n        const { placeholder, value } = this.props;\n        // Get a string representation of the cell value. The value could be a\n        // number, boolean, string or null.\n        let strValue = null;\n        if (value == null) {\n            strValue = '';\n        } else {\n            strValue = value.toString();\n        }\n        return (\n            <Form.Input\n                placeholder={placeholder}\n                fluid\n                value={strValue}\n                onChange={this.handleChange}\n            />\n        );\n    }\n}\n\nexport default TextControl\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Checkbox } from 'semantic-ui-react'\nimport '../../../../../css/ModuleForm.css';\n\n/**\n* Checkbox for boolean input\n*/\n\nclass BoolInput extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.bool,\n        onChange: PropTypes.func.isRequired\n    }\n    handleChange = (e, { checked }) => {\n        const { id, onChange } = this.props\n        onChange(id, checked)\n    }\n    render() {\n        const { value } = this.props\n        return (\n            <span className='boolctrl'>\n                <Checkbox checked={value === undefined ? false : value} onChange={this.handleChange}/>\n            </span>\n        );\n    }\n}\n/*<Form.Checkbox\n    checked={value}\n    onChange={this.handleChange}\n/>*/\n\nexport default BoolInput\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n/**\n* Selector component for datasets.\n*/\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Convert column index into spreadsheet column label (letter).\n * Copied from:\n * https://stackoverflow.com/questions/21229180/convert-column-index-into-corresponding-column-letter\n *\n */\nconst COLUMN_2_LETTER = (column) => {\n    let temp, letter = '';\n    while (column > 0) {\n        temp = (column - 1) % 26;\n        letter = String.fromCharCode(temp + 65) + letter;\n        column = (column - temp - 1) / 26;\n    }\n    return letter;\n}\n\n\nclass ColumnSelector extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object,\n        id: PropTypes.string.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]),\n        onChange: PropTypes.func.isRequired,\n    }\n    handleChange = (e, { value }) => {\n        const { id, onChange } = this.props\n        onChange(id, value)\n    }\n    render() {\n        const { dataset, isRequired, value } = this.props\n        let options = [];\n        if (dataset != null) {\n            if (!isRequired) {\n                // Add entry to set value to empty if not required\n                options.push({\n                    key: '',\n                    text: '<none>',\n                    value: ''\n                })\n            }\n            for (let i = 0; i < dataset.columns.length; i++) {\n                const column = dataset.columns[i];\n                let name = '';\n                if (column.name !== '') {\n                    name = column.name;\n                } else {\n                    name = COLUMN_2_LETTER(i + 1);\n                }\n                options.push({\n                    key: column.id,\n                    text: name,\n                    value: column.id\n                })\n            }\n        }\n        return (\n            <Dropdown\n                value={value}\n                selection\n                fluid\n                scrolling\n                options={options}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nexport default ColumnSelector;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport ModuleFormControl from './ModuleFormControl';\nimport { toFormValues } from '../../../../resources/Engine';\nimport '../../../../../css/Notebook.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n// -----------------------------------------------------------------------------\n// Local helper functions\n// -----------------------------------------------------------------------------\n\n/**\n * A group of control elements. Allows user to insert a set of tuples.\n *\n * Expects a value which is a pair of .values and .tuplels. The .values element\n * is an object with a single entry per element in the group. The .tuples\n * element is an array of tuples, each representing a complete group element.\n *\n * TODO: Checking of valid arguments is also not implementd yet.\n */\nclass ControlGroup extends React.Component {\n    static propTypes = {\n        controlSpec: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        selectedDataset: PropTypes.object,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.array.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, controlSpec, datasets } = this.props;\n        const newRow = toFormValues(controlSpec.parameters, datasets, null, id)\n        this.state = ({addTuple: newRow});\n    }\n    /**\n     * Add the current values in the form controls as a tuple to the list of\n     * argument values.\n     */\n    handleAdd = (childId, childValue) => {\n        const { id, controlSpec, datasets, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value\n        const rows = []\n        for (let i = 0; i < formValue.length; i++) {\n            rows.push(formValue[i])\n        }\n        // Add a new row of default values to the modified row list\n        let newRow = toFormValues(controlSpec.parameters, datasets, null, id)\n        let blankRow = toFormValues(controlSpec.parameters, datasets, null, id)\n        this.setState({addTuple: blankRow});\n        newRow[childId] = childValue\n        rows.push(newRow);\n        onChange(id, rows);\n    }\n    /**\n     * Handle change in any of the group's input controls.\n     */\n    handleChange = (rowIdx, name, value) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the form values where the value of the tuple that\n        // is isentified by the row index is modified\n        const rows = [];\n        for (let i = 0; i < formValue.length; i++) {\n            if ((i === rowIdx) || (value === null)) {\n                const row = {...formValue[i]};\n                row[name] = value;\n                rows.push(row);\n            } else {\n                rows.push(formValue[i])\n            }\n        }\n        onChange(id, rows);\n    }\n    /**\n     * Remove an existing tuple from the list of argument values.\n     */\n    handleDelete = (e, { value }) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value that does not contain the\n        // row that is currently at position value\n        const rows = []\n        for (let i = 0; i < formValue.length; i++) {\n            if (i !== value) {\n                rows.push(formValue[i])\n            }\n            else {\n            \tthis.setState({addTuple: ''});//formValue[i]});\n            }\n        }\n        onChange(id, rows);\n    }\n    /**\n     * Move the row at the given position (value) one position down in the form\n     * value list.\n     */\n    handleMoveDown = (e, { value }) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value\n        const rows = [];\n        let row = null;\n        for (let i = 0; i < formValue.length; i++) {\n            if (i === value) {\n                row = formValue[i];\n            } else {\n                rows.push(formValue[i]);\n                if (i === (value + 1)) {\n                    rows.push(row);\n                }\n            }\n        }\n        onChange(id, rows);\n    }\n    /**\n     * Move the row at the given position (value) one position up in the form\n     * value list.\n     */\n    handleMoveUp = (e, { value }) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value\n        const rows = [];\n        let row = null;\n        for (let i = 0; i < formValue.length; i++) {\n            if (i === (value - 1)) {\n                row = formValue[i];\n            } else {\n                rows.push(formValue[i]);\n                if (i === value) {\n                    rows.push(row);\n                }\n            }\n        }\n        onChange(id, rows);\n    }\n    render() {\n        const {\n            controlSpec,\n            datasets,\n            artifacts,\n            id,\n            selectedDataset,\n            serviceProperties,\n            value\n        } = this.props;\n        const rows = [];\n        // Stat by generating the header for the elements in the control group.\n        const formLabels = [];\n        for (let i = 0; i < controlSpec.parameters.length; i++) {\n            const child = controlSpec.parameters[i]\n            formLabels.push(\n                <td key={'th_ctrl' + i} className='inner-form-header'>\n                    {child.name}\n                </td>\n            );\n        }\n        // Add columns for controll buttons\n        formLabels.push(<td key={'th_btn1'} className='inner-form-header'></td>);\n        formLabels.push(<td key={'th_btn2'} className='inner-form-header'></td>);\n        formLabels.push(<td key={'th_btn3'} className='inner-form-header'></td>);\n        rows.push(<tr key='header'>{formLabels}</tr>);\n        // Add a row of controls for each row in the form\n        for (let t = 0; t < value.length; t++) {\n            let tuple = value[t];\n            const key = 'r_' + t + '_' + id;\n            const rowControls = [];\n            for (let c = 0; c < controlSpec.parameters.length; c++) {\n                const child = controlSpec.parameters[c]\n                rowControls.push(\n                    <td key={key + '_ctrl_' + child.id} className='inner-form-control'>\n                        <ModuleFormControl\n                            key={child.id}\n                            controlSpec={child}\n                            datasets={datasets} \n                            artifacts={artifacts}\n                           onChange={(name, value) => (this.handleChange(t, name, value))}\n                            selectedDataset={selectedDataset}\n                            serviceProperties={serviceProperties}\n                            value={tuple[child.id]}\n                        />\n                    </td>\n                );\n            }\n            rowControls.push(\n                <td key={key + '_btn_del'} className='inner-form-button'>\n                    <Button\n                        icon='trash'\n                        value={t}\n                        negative\n                        onClick={this.handleDelete}\n                        title='Delete row from the list'\n                    />\n                </td>\n            );\n            rowControls.push(\n                <td key={key + '_btn_up'} className='inner-form-button'>\n                    <Button\n                        icon='chevron up'\n                        disabled={t === 0}\n                        onClick={this.handleMoveUp}\n                        title='Move row one position up'\n                        value={t}\n                    />\n                </td>\n            );\n            rowControls.push(\n                <td key={key + '_btn_dowm'} className='inner-form-button'>\n                    <Button\n                        icon='chevron down'\n                        disabled={t === (value.length - 1)}\n                        onClick={this.handleMoveDown}\n                        title='Move row one position down'\n                        value={t}\n                    />\n                </td>\n            );\n            rows.push(<tr key={key}>{rowControls}</tr>);\n        }\n        const lastRowControls = [];\n        const { addTuple } = this.state\n        const key = 'r_' + (value.length+1) + '_' + id;\n        for (let c = 0; c < controlSpec.parameters.length; c++) {\n            const child = controlSpec.parameters[c]\n            lastRowControls.push(\n                <td key={key + '_ctrl_' + child.id} className='inner-form-control'>\n                    <ModuleFormControl\n                        key={child.id}\n                        controlSpec={child}\n                        datasets={datasets}\n                        artifacts={artifacts}\n                        onChange={(name, value) => (this.handleAdd(child.id, value))}\n                        selectedDataset={selectedDataset}\n                        serviceProperties={serviceProperties}\n                        value={addTuple[child.id]}\n                    />\n                </td>\n            );\n        }\n        const lastRow = <tr key={key}>{lastRowControls}</tr>\n        // Add another row that contains the add button.\n        return (\n            <div>\n                <table className='inner-form'><tbody>{rows}{lastRow}</tbody></table>\n            </div>\n        );\n    }\n}\n\nexport default ControlGroup\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport ModuleFormControl from './ModuleFormControl'\nimport '../../../../../css/Notebook.css'\nimport '../../../../../css/ModuleForm.css'\n\n\n/**\n * A row of control elements. This is a style-element. All elements are shown in\n * a single row layout.\n *\n * Expects a value that is an object with a sigle element values which in turn\n * is an object with a single value for each element in the row.\n */\nclass ControlRow extends React.Component {\n    static propTypes = {\n        controlSpec: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        selectedDataset: PropTypes.object,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.object.isRequired\n    }\n    /**\n     * Handle change in any of the group's input controls.\n     */\n    handleChange = (name, value) => {\n        const { id, onChange } = this.props;\n        let formValue = {...this.props.value};\n        formValue[name] = value;\n        onChange(id, formValue)\n    }\n    render() {\n        const {\n            controlSpec,\n            datasets,\n            artifacts,\n            selectedDataset,\n            serviceProperties,\n            value\n        } = this.props;\n        const formLabels = []\n        const formControls = []\n        console.log(\"ROW\")\n        console.log(value)\n        for (let i = 0; i < controlSpec.parameters.length; i++) {\n            const child = controlSpec.parameters[i]\n            console.log(\"CHILD\")\n            console.log(child)\n            formLabels.push(\n                <td key={formLabels.length} className='inner-form-header'>\n                    {child.name}\n                </td>\n            )\n            formControls.push(\n                <td key={formControls.length} className='inner-form-control'>\n                    <ModuleFormControl\n                        key={child.id}\n                        controlSpec={child}\n                        datasets={datasets}\n                        artifacts={artifacts}\n                        onChange={this.handleChange}\n                        selectedDataset={selectedDataset}\n                        serviceProperties={serviceProperties}\n                        value={value[child.id]}\n                    />\n                </td>\n            );\n        }\n        return (\n            <table className='inner-form'>\n                <tbody>\n                    <tr key='row-header'>{ formLabels }</tr>\n                    <tr key='row-values'>{formControls}</tr>\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default ControlRow\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n/**\n* Selector component for datasets.\n*/\nclass DatasetSelector extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { value } = this.props;\n        this.state = {ctrlValue: value};\n    }\n    /**\n     * Handle change in the dropdown box. This event fires whenever the user\n     * clicks on the select box. We maintain the current value in the local\n     * state to avoid updating the form values if nothing has changed.\n     * This is important here since a change to the dataset selector will\n     * trigger all column id controls to reset.\n     */\n    handleChange = (e, { value }) => {\n        const { id, onChange } = this.props\n        const { ctrlValue } = this.state;\n        if (ctrlValue !== value) {\n            this.setState({ctrlValue: value});\n            onChange(id, value, null)\n        }\n    }\n    render() {\n        const { datasets, isRequired, value } = this.props\n        let options = [];\n        if (!isRequired) {\n            // Add entry to set value to empty if not required\n            options.push({\n                key: '',\n                text: '<none>',\n                value: ''\n            })\n        }\n        for (let i = 0; datasets && i < datasets.length; i++) {\n            const dataset = datasets[i];\n            options.push({\n                key: dataset.name,\n                text: dataset.name,\n                value: dataset.name\n            })\n        }\n        return (\n            <Dropdown\n                value={value}\n                selection\n                fluid\n                scrolling\n                options={options}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nexport default DatasetSelector\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n/**\n* Selector component for datasets.\n*/\nclass ArtifactSelector extends React.Component {\n    static propTypes = {\n        artifacts: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        artifactType: PropTypes.string,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { value } = this.props;\n        this.state = {ctrlValue: value};\n    }\n    /**\n     * Handle change in the dropdown box. This event fires whenever the user\n     * clicks on the select box. We maintain the current value in the local\n     * state to avoid updating the form values if nothing has changed.\n     * This is important here since a change to the dataset selector will\n     * trigger all column id controls to reset.\n     */\n    handleChange = (e, { value }) => {\n        const { id, onChange } = this.props\n        const { ctrlValue } = this.state;\n        if (ctrlValue !== value) {\n            this.setState({ctrlValue: value});\n            onChange(id, value, null)\n        }\n    }\n    render() {\n        const { artifacts, artifactType, isRequired, value } = this.props\n        let options = [];\n        if (!isRequired) {\n            // Add entry to set value to empty if not required\n            options.push({\n                key: '',\n                text: '<none>',\n                value: ''\n            })\n        }\n        for (let i = 0; i < artifacts.length; i++) {\n            const artifact = artifacts[i];\n            if(artifactType == null || artifactType == artifact.artifact_type){\n                options.push({\n                    key: artifact.name,\n                    text: artifact.name,\n                    value: artifact.name\n                })\n            }\n        }\n        return (\n            <Dropdown\n                value={value}\n                selection\n                fluid\n                scrolling\n                options={options}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nexport default ArtifactSelector\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\nimport Dropzone from 'react-dropzone';\nimport { formatBytes } from '../../../../util/App';\n\n/**\n * Dropdown selector for uploaded files. The value is an object that contains\n * the following fields: fileid, oneOf(filename, url). The fileid is the unique\n * identifier of the selected file. If null, no file has been selected. The\n * filename is the name of a file that was uploaded from disk. The url is\n * the Url of a file that has been uploaded from the Web.\n *\n */\nclass FileSelector extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.object.isRequired,\n        onChange: PropTypes.func.isRequired\n    }\n    /**\n     * Clear the currently selected source file.\n     */\n    clearSourceFile = () => {\n        const { id, onChange } = this.props\n        onChange(id, {fileid: null, filename: null, url: null});\n    }\n    /**\n     * Dispatch upload file action when a file is dropped in the Dropzone.\n     */\n    handleFileDrop = (files) => {\n        const { id, onChange } = this.props\n        // Submit new value with additional file information\n        onChange(id, {fileid: null, filename: files[0].name, file: files[0], url: null});\n    }\n    render() {\n        const { serviceProperties } = this.props;\n        const { fileid, filename } = this.props.value;\n        let content = null;\n        let css = null;\n        if ((filename != null)) {\n            let action = null;\n            if (fileid != null) {\n                action = 'Uploaded';\n            } else {\n                action = 'Upload';\n            }\n            let name = null;\n            let text = null;\n            if (filename != null) {\n                text = action + ' file from local disk'\n                name = filename;\n            } else {\n                name = 'unknown';\n            }\n            css = 'file-content';\n            content = (\n                <div>\n                    <p className='info-text'>{text}</p>\n                    <p className='file-name'>{name}</p>\n                    <Button\n                        icon='trash'\n                        title='Clear source file'\n                        size='large'\n                        negative\n                        onClick={this.clearSourceFile}\n                    />\n                </div>\n            );\n        } else {\n            let uploadInfo = null\n            if (serviceProperties.maxFileSize) {\n                uploadInfo = (\n                    <p className='upload-info'>\n                        <Icon name='info circle' />\n                        <span>\n                            The size for file uploads is limited to\n                        </span>\n                        <span className='upload-size'>\n                            {' ' + formatBytes(serviceProperties.maxFileSize, 2)}\n                        </span>\n                    </p>\n                )\n            }\n            css = 'file-selector';\n            content = (\n                <div>\n                    <p className='info-text md-top'>Upload file from local disk</p>\n                    <div className='dropzone-container'>\n                        <div className='dropzone'>\n                            <Dropzone onDrop={this.handleFileDrop} multiple={false}>\n                                <p className='p-dropzone'>Drop file here or click to select file to upload.</p>\n                            </Dropzone>\n                        </div>\n                    </div>\n                    { uploadInfo }\n                </div>\n            );\n        }\n        return (\n            <div className={css}>\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default FileSelector\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n\n/**\n* Dropdown selector for uploaded files\n*/\nclass TextSelector extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        options: PropTypes.array.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { options, isRequired } = props;\n        const listItems = [];\n        if (!isRequired) {\n            // Add entry to set value to empty if not required\n            listItems.push({\n                key: '',\n                text: '<none>',\n                value: ''\n            })\n        }\n        for (let i = 0; i < options.length; i++) {\n            const entry = options[i];\n            // Check whether the entry is a structired value or a string\n            if (typeof entry === 'object') {\n                // A structured value is expected to have at least a .value\n                // element. Other optional elements are .key and .isDefault\n                let entryKey = null;\n                if (entry.key) {\n                    entryKey = entry.key;\n                } else {\n                    entryKey = entry.value;\n                }\n                listItems.push({\n                    key: entryKey,\n                    text: entry.text,\n                    value: entryKey\n                })\n            } else {\n                // Assumes entry to be a scalar (string) value\n                listItems.push({\n                    key: entry,\n                    text: entry,\n                    value: entry\n                })\n            }\n        }\n        this.state ={listItems};\n    }\n    handleChange = (event, { value }) => {\n        const { id, onChange } = this.props\n        onChange(id, value)\n    }\n    render() {\n        const { id, value } = this.props;\n        const { listItems } = this.state;\n        return (\n            <Dropdown\n                name={id}\n                selection\n                scrolling\n                fluid\n                options={listItems}\n                value={value}\n                onChange={this.handleChange}\n            />\n        );\n    }\n}\n\nexport default TextSelector\n","import {Button, Form} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport {KEY} from \"../../../../util/App\";\nimport PropTypes from 'prop-types'\n\nURLSelector.propTypes = {\n    id: PropTypes.string.isRequired,\n    value: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default function URLSelector(props) {\n    const [downloadUrl, setDownloadUrl] = useState('');\n\n    /**\n     * Submit upload request from a given Url.\n     */\n    const uploadFromUrl = () => {\n        const {id, onChange} = props\n        if (downloadUrl.trim() !== '') {\n            onChange(id, {fileid: null, filename: null, url: downloadUrl});\n            setDownloadUrl('');\n        }\n    }\n\n    /**\n     * Handle changes in the Url form control.\n     */\n    const handleUrlChange = (event) => {\n        setDownloadUrl(event.target.value);\n    }\n\n    /**\n     * Detect RETURN key press in the Url control to submit form.\n     */\n    const handleUrlKeyDown = (event) => {\n        if (event.keyCode === KEY.ENTER) {\n            uploadFromUrl();\n        }\n    }\n\n    /**\n     * Clear the currently selected source file.\n     */\n    const clearSourceFile = () => {\n        const { id, onChange } = props\n        onChange(id, {fileid: null, filename: null, url: null});\n    }\n\n    const {fileid, url} = props.value;\n    let content = null;\n    let css = null;\n    if ((url != null)) {\n        let action = null;\n        if (fileid != null) {\n            action = 'Downloaded';\n        } else {\n            action = 'Download';\n        }\n        let name = url;\n        let text = action + ' file from URL'\n        css = 'file-content';\n        content = (\n            <div>\n                <p className='info-text'>{text}</p>\n                <p className='file-name'>{name}</p>\n                <Button\n                    icon='trash'\n                    title='Clear source file'\n                    size='large'\n                    negative\n                    onClick={clearSourceFile}\n                />\n            </div>\n        );\n    } else {\n        css = \"file-selector\"\n        content = (<div>\n            <p className='info-text md-top'>Download file from URL</p>\n            <Form.Input\n                type='text'\n                value={downloadUrl}\n                placeholder={'Upload File from Url'}\n                icon='world'\n                iconPosition='left'\n                fluid\n                action={<Button\n                    icon='upload'\n                    onClick={uploadFromUrl}\n                />}\n                onChange={handleUrlChange}\n                onKeyDown={handleUrlKeyDown}\n                onBlur={uploadFromUrl}\n            />\n        </div>)\n    }\n    return ( <div className={css}>\n                {content}\n            </div>)\n}","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport BoolInput from './BoolInput';\nimport ColumnSelector from './ColumnSelector';\nimport ControlGroup from './ControlGroup';\nimport ControlRow from './ControlRow';\nimport DatasetSelector from './DatasetSelector';\nimport ArtifactSelector from './ArtifactSelector';\nimport FileSelector from './FileSelector';\nimport TextControl from './TextControl';\nimport TextSelector from './TextSelector';\nimport {\n    DT_BOOL, DT_COLUMN_ID, DT_DATASET_ID, DT_DECIMAL, DT_FILE_ID, DT_INT,\n    DT_LIST, DT_RECORD, DT_ROW_ID, DT_ROW_INDEX, DT_SCALAR, DT_STRING, DT_URL,\n    DT_ARTIFACT_ID\n} from '../../../../resources/Engine';\nimport URLSelector from \"./URLSelector\";\n\n\n/**\n * Generic form control. Generates a module form control instance from a given\n * specification.\n */\nclass ModuleFormControl extends React.Component {\n    static propTypes = {\n        controlSpec: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        selectedDataset: PropTypes.object,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool,\n            PropTypes.object,\n            PropTypes.array\n        ]),\n        onChange: PropTypes.func.isRequired\n    }\n    render() {\n        const {\n            controlSpec,\n            datasets,\n            artifacts,\n            selectedDataset,\n            serviceProperties,\n            value,\n            onChange\n        } = this.props;\n        if (controlSpec.datatype === DT_COLUMN_ID) {\n             return (\n                <ColumnSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    dataset={selectedDataset}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_ARTIFACT_ID) {\n            return (\n                <ArtifactSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    artifactType={controlSpec.artifactType}\n                    artifacts={artifacts}\n                    datasets={datasets}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_DATASET_ID) {\n            return (\n                <DatasetSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    value={value}\n                    onChange={onChange}\n                    artifacts={artifacts}\n                    datasets={datasets}\n                />\n            )\n        } else if ((controlSpec.datatype === DT_STRING) && (controlSpec.values)) {\n            return (\n                <TextSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    options={controlSpec.values}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (\n            (controlSpec.datatype === DT_DECIMAL) ||\n            (controlSpec.datatype === DT_INT) ||\n            (controlSpec.datatype === DT_ROW_ID) ||\n            (controlSpec.datatype === DT_ROW_INDEX) ||\n            (controlSpec.datatype === DT_SCALAR) ||\n            (controlSpec.datatype === DT_STRING)\n        ) {\n            return (\n                <TextControl\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    placeholder={controlSpec.name}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_BOOL) {\n            return (\n                <BoolInput\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_FILE_ID) {\n            return (\n                <FileSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    serviceProperties={serviceProperties}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_URL) {\n            return (\n                <URLSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    serviceProperties={serviceProperties}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_LIST) {\n            return (\n                <ControlGroup\n                    key={controlSpec.id}\n                    controlSpec={controlSpec}\n                    datasets={datasets}\n                    artifacts={artifacts}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    value={value === undefined ? [] : value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_RECORD) {\n            return (\n                <ControlRow\n                    key={controlSpec.id}\n                    controlSpec={controlSpec}\n                    datasets={datasets}\n                    artifacts={artifacts}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    value={value === undefined ? {} : value}\n                    onChange={onChange}\n                />\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default ModuleFormControl;\n","import React from 'react'\n\nconst ProgressContext = React.createContext({\n    moduleProgress: 0\n})\n\n\nexport const ProgressConsumer = ProgressContext.Consumer\n\nexport default ProgressContext","import React, {useState, useEffect, useContext} from \"react\"\nimport {Tab, Button, Label} from \"semantic-ui-react\";\nimport ModuleFormControl from \"./form/ModuleFormControl\";\nimport {DT_CODE, DT_FILE_ID} from \"../../../resources/Engine\";\nimport PropTypes from 'prop-types';\nimport ProgressContext from \"../../ProgressContext\";\nimport Progress from \"semantic-ui-react/dist/commonjs/modules/Progress\";\n\nLoadDatasetForm.propTypes = {\n    selectedCommand: PropTypes.object.isRequired,\n    datasets: PropTypes.array.isRequired,\n    artifacts: PropTypes.array.isRequired,\n    selectedDataset:PropTypes.object,\n    serviceProperties: PropTypes.object.isRequired,\n    values: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\n/**\n * Creates a Load Dataset Form with internal state management per tab/source type\n */\nexport default function LoadDatasetForm(props) {\n    const {selectedCommand, datasets, artifacts, selectedDataset, serviceProperties, values, onChange} = props;\n\n    const initialState = {\n        \"name\":null,\n        \"file\":{\"fileid\":null,\"filename\":null,\"url\":null},\n        \"loadFormat\":\"csv\",\n        \"schema\":[],\n        \"loadInferTypes\":false,\n        \"loadDetectHeaders\":false,\n        \"loadDataSourceErrors\":false,\n        \"loadOptions\":[]\n    };\n\n    const [localSourceState, setLocalSourceState] = useState(initialState);\n    const [remoteSourceState, setRemoteSourceState] = useState(initialState);\n    const [activeIndexValue,setActiveIndex] = useState(null);\n\n    const state = [localSourceState, remoteSourceState];\n    const setState = [setLocalSourceState, setRemoteSourceState];\n\n    /**\n     * Load cell state values into the form when rendering an existing cell\n     */\n    useEffect(()=> {\n        console.log(values[\"file\"])\n        if(values[\"file\"][\"url\"] == null){\n            setState[0](values);\n            setActiveIndex(0);\n        }else{\n            setState[1](values);\n            setActiveIndex(1);\n        }\n    },[]);\n\n    /**\n     * Update local tab state and cell state on form update\n     */\n    const handleValueChange = (id, value) => {\n        setState[activeIndexValue]({\n            ...state[activeIndexValue],\n            [id]:value,\n        });\n        onChange(id, value)\n    };\n\n    /**\n     * Overwrite cell state with new tab state when tab switched\n     */\n    useEffect(()=>{\n        onChange(\"bulk\", state[activeIndexValue])\n    },[activeIndexValue]);\n\n    const panes = [\n        { menuItem:<Label size=\"large\" content=\"From Local Machine\" icon='computer' />, render: ()=> <Tab.Pane>{\n                <LoadFormPane\n                    datasets = {datasets}\n                    artifacts = {[]}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    selectedCommand={selectedCommand}\n                    tabState={localSourceState}\n                    isUrlPane={false}\n                    onChange={handleValueChange}\n                />}</Tab.Pane>},\n        { menuItem: <Label size=\"large\" content='From the Internet' icon='world' />, render: ()=> <Tab.Pane>{\n                <LoadFormPane\n                    datasets = {datasets}\n                    artifacts = {[]}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    selectedCommand={selectedCommand}\n                    tabState={remoteSourceState}\n                    isUrlPane={true}\n                    onChange={handleValueChange}\n                />}</Tab.Pane>}\n    ];\n    const progress = useContext(ProgressContext);\n    return (progress.moduleProgress && 0 < progress.moduleProgress < 100 ? <Progress percent={progress.moduleProgress} autoSuccess indicating progress>\n        Uploading\n    </Progress>:<Tab\n        activeIndex={activeIndexValue}\n        onTabChange={(e, {activeIndex}) => setActiveIndex(activeIndex)}\n        panes={panes} />)\n}\n\n/**\n * Internal component to create panes for Local and Remote Sources\n */\nconst LoadFormPane = (props) => {\n    const {datasets,\n        artifacts,\n        selectedDataset,\n        serviceProperties,\n        selectedCommand,\n        tabState,\n        isUrlPane,\n        onChange} = props;\n\n    let cssTable = 'form-table wide';\n    let components = [];\n\n    const [showingAdvancedOptions, setShowingAdvancedOptions] = useState(false);\n\n    const toggleAdvanced = () => setShowingAdvancedOptions(prevState => !prevState);\n\n    const toggleAdvancedOptionsButton = () => <Button\n        onClick={toggleAdvanced}\n        basic\n        content={`${showingAdvancedOptions?'Hide':'Show'} Advanced Options`}\n    />;\n\n    for (let i = 0; i < selectedCommand.parameters.length; i++) {\n        let para = selectedCommand.parameters[i];\n\n        // create a url selector instead of a file selector when required\n        if (isUrlPane === true && para.datatype === DT_FILE_ID){\n            para = { \"datatype\": \"url\", \"hidden\": false, \"id\": \"file\", \"index\": 1, \"name\": \"URL\",\"required\": true }\n        }\n\n        let cssAdvancedOption = 'form-options';\n        if(!(['name','file','loadFormat'].includes(para.id))){\n            !showingAdvancedOptions ? cssAdvancedOption += '-advanced-hidden':cssAdvancedOption += '-advanced'\n        }\n\n        if ((para.parent == null) && (para.hidden !== true) && (para.datatype !== DT_CODE)) {\n            components.push(\n                <tr key={para.id} className={cssAdvancedOption}>\n                    <td className='form-label'>{para.name}</td>\n                    <td className='form-control'>\n                        <ModuleFormControl\n                            key={para.id}\n                            controlSpec={para}\n                            datasets={datasets}\n                            artifacts={artifacts}\n                            selectedDataset={selectedDataset}\n                            serviceProperties={serviceProperties}\n                            value={tabState[para.id]}\n                            onChange={onChange}\n                        />\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    return <React.Fragment><table className={cssTable}>\n        <tbody>{components}</tbody>\n    </table>\n        <div className=\"form-add-button\">{toggleAdvancedOptionsButton()}</div>\n    </React.Fragment>\n};\n","import React from \"react\"\nimport PropTypes from 'prop-types'\nimport LoadDatasetForm from \"./LoadDatasetForm\";\n\nModuleInputFormDecorator.propTypes = {\n    components:PropTypes.array.isRequired,\n    selectedCommand: PropTypes.object.isRequired,\n    cssTable:PropTypes.string,\n    datasets: PropTypes.array.isRequired,\n    artifacts: PropTypes.array.isRequired,\n    selectedDataset:PropTypes.object,\n    serviceProperties: PropTypes.object.isRequired,\n    values: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default function ModuleInputFormDecorator(props) {\n    const { components,\n        selectedCommand,\n        cssTable,\n        datasets,\n        artifacts,\n        selectedDataset,\n        serviceProperties,\n        values,\n        onChange} = props;\n\n    const undecorated = (\n        <table className={cssTable}>\n            <tbody>\n            {components}\n            </tbody>\n        </table>);\n\n    switch (selectedCommand.id) {\n        case \"load\": return <LoadDatasetForm\n            selectedCommand={selectedCommand}\n            datasets={datasets}\n            artifacts={artifacts}\n            selectedDataset={selectedDataset}\n            serviceProperties={serviceProperties}\n            values = {values}\n            onChange = {onChange}\n        />\n        default: return undecorated\n    }\n\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ModuleFormControl from './form/ModuleFormControl';\nimport { DT_CODE, DT_FILE_ID, getSelectedDataset } from '../../../resources/Engine';\nimport '../../../../css/ModuleForm.css';\nimport ModuleInputFormDecorator from \"./ModuleInputFormDecorator\";\n\n\nclass ModuleInputForm extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        selectedCommand: PropTypes.object.isRequired,\n        serviceProperties: PropTypes.object.isRequired,\n        values: PropTypes.object.isRequired,\n        onChange: PropTypes.func.isRequired\n    }\n    render() {\n        const {\n            datasets,\n            artifacts,\n            selectedCommand,\n            serviceProperties,\n            onChange,\n            values\n        } = this.props;\n        // Check if the command specification contains a dataset column. If so,\n        // try to find the dataset that is being selected.\n        const selectedDataset = getSelectedDataset(selectedCommand, values, datasets);\n        // If the command contains a file parameter then the style of the table\n        // should be wide.\n        let cssTable = 'form-table';\n        let components = [];\n        for (let i = 0; i < selectedCommand.parameters.length; i++) {\n            const para = selectedCommand.parameters[i];\n            // Skip elements that are part of a group, hidden or are of type\n            // code\n            if ((para.parent == null) && (para.hidden !== true) && (para.datatype !== DT_CODE)) {\n                // Values may be undefined\n                //let val = null;\n                //if (values != null) {\n                //    val = values[para.id];\n                //}\n                components.push(\n                    <tr key={para.id}>\n                        <td className='form-label'>{para.name}</td>\n                        <td className='form-control'>\n                            <ModuleFormControl\n                                key={para.id}\n                                controlSpec={para}\n                                datasets={datasets}\n                                artifacts={artifacts}\n                                selectedDataset={selectedDataset}\n                                serviceProperties={serviceProperties}\n                                value={values[para.id]}\n                                onChange={onChange}\n                            />\n                        </td>\n                    </tr>\n                );\n                if (para.datatype === DT_FILE_ID) {\n                    cssTable += ' wide';\n                }\n            }\n        }\n        return (\n            <ModuleInputFormDecorator\n                components={ components }\n                selectedCommand={ selectedCommand }\n                cssTable = {cssTable}\n                datasets = { datasets }\n                artifacts = { artifacts }\n                selectedDataset = { selectedDataset }\n                serviceProperties = { serviceProperties }\n                values = { values }\n                onChange = { onChange }\n            />\n        );\n    }\n}\n\nexport default ModuleInputForm;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n/**\n* A Python command cell contains a text field for the command content and a\n* submit button.\n*/\n\nconst ADD_ANNOTATION = 'ADD_ANNOTATION';\nconst CREATE_DATASET = 'CREATE_DATASET';\nconst DELETE_ANNOTATION = 'DELETE_ANNOTATION';\nconst DELETE_COLUMN = 'DELETE_COLUMN';\nconst DELETE_DATASET = 'DELETE_DATASET';\nconst DELETE_ROW = 'DELETE_ROW';\nconst GET_DATASET = 'GET_DATASET';\nconst GET_DATASET_FRAME = 'GET_DATASET_FRAME';\nconst INSERT_COLUMN = 'INSERT_COLUMN';\nconst INSERT_ROW = 'INSERT_ROW';\nconst NEW_DATASET_OBJECT = 'NEW_DATASET_OBJECT';\nconst OUTPUT_ANNOTATIONS = 'OUTPUT_ANNOTATIONS';\nconst OUTPUT_COLUMN_NAMES = 'OUTPUT_COLUMN_NAMES';\nconst OUTPUT_CELL_VALUES = 'OUTPUT_CELL_VALUES';\nconst OUTPUT_D3_PLOT = 'OUTPUT_D3_PLOT';\nconst OUTPUT_BOKEH_PLOT = 'OUTPUT_BOKEH_PLOT';\nconst OUTPUT_MAP = 'OUTPUT_MAP';\nconst EXPORT_MODULE = 'EXPORT_MODULE';\nconst RENAME_DATASET = 'RENAME_DATASET';\nconst UPDATE_CELL_VALUE = 'UPDATE_CELL_VALUE';\nconst UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nconst UPDATE_DATASET = 'UPDATE_DATASET';\n\n\nexport class CodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === ADD_ANNOTATION) {\n            lines.push('# Add new annotation for dataset cells. Note that rows');\n            lines.push('# and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    if not annos.contains(\\'some:key\\'):');\n            lines.push('        annos.add(\\'some:key\\', \\'some-value\\')');\n        } else if (value === CREATE_DATASET) {\n            lines.push('# Create a new dataset in the data store. Expects a');\n            lines.push('# dataset object and a unique dataset name.');\n            lines.push('vizierdb.create_dataset(\\'unique-ds-name\\', ds)')\n        } else if (value === DELETE_ANNOTATION) {\n            lines.push('# Delete annotations for dataset cell. Delete is similar to');\n            lines.push('# update. Delete an annotation by setting its value to None.');\n            lines.push('# Rows and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    for a in annos.find_all(\\'some:key\\'):');\n            lines.push('        annos.update(identifier=a.identifier, value=None)');\n        } else if (value === DELETE_COLUMN) {\n            lines.push('# Delete dataset column by name (only if column names');\n            lines.push('# are unique), spreadsheet label (\\'A\\', \\'B\\', ...), or');\n            lines.push('# column index (0, 1, ...).');\n            lines.push('ds.delete_column(\\'name-label-or-index\\')');\n        } else if (value === DELETE_DATASET) {\n            lines.push('# Delete dataset with the given name from data store.')\n            lines.push('vizierdb.drop_dataset(\\'unique-ds-name\\')');\n        } else if (value === DELETE_ROW) {\n            lines.push('# Delete dataset rows by removing them from the list of');\n            lines.push('# rows using the row index.');\n            lines.push('del ds.rows[index]');\n        } else if (value === GET_DATASET) {\n            lines.push('# Get object for dataset with given name.');\n            lines.push('ds = vizierdb.get_dataset(\\'unique-ds-name\\')');\n        } else if (value === GET_DATASET_FRAME) {\n            lines.push('# Get read-only pandas dataframe object for dataset with given name.');\n            lines.push('df = vizierdb.get_dataset_frame(\\'unique-ds-name\\')');\n        } else if (value === INSERT_COLUMN) {\n            lines.push('# Create a new column with a given name. The column');\n            lines.push('# position is optional.');\n            lines.push('ds.insert_column(\\'column-name\\', position=0)');\n        } else if (value === INSERT_ROW) {\n            lines.push('# When inserting a row the list of values and the row');\n            lines.push('# position are optional. By default row cells are None.');\n            lines.push('ds.insert_row(values=[\\'list-of-values-for-each-column\\'], position=0)');\n        } else if (value === NEW_DATASET_OBJECT) {\n            lines.push('# Get object containing an empty dataset.');\n            lines.push('ds = vizierdb.new_dataset()');\n        } else if (value === OUTPUT_ANNOTATIONS) {\n            lines.push('# Print all annotations for dataset column. Note that');\n            lines.push('# rows and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    for key in annos.keys():');\n            lines.push('        for a in annos.find_all(key):');\n            lines.push('            print(a.key + \\' = \\' + str(a.value))');\n        } else if (value === OUTPUT_COLUMN_NAMES) {\n            lines.push('# Iterate over list of dataset columns and print column name');\n            lines.push('for col in ds.columns:');\n            lines.push('    print(col.name)');\n        } else if (value === OUTPUT_CELL_VALUES) {\n            lines.push('# Iterate over list of dataset rows and print cell value.')\n            lines.push('# Reference column by name, label (\\'A\\', \\'B\\', ...), or');\n            lines.push('# column index (0, 1, ...).');\n            lines.push('for row in ds.rows:');\n            lines.push('    print(row.get_value(\\'name-label-or-index\\'))');\n        } else if (value === OUTPUT_D3_PLOT) {\n            lines.push('# Generate a plot using Vizier\\'s internal D3-based engine.')\n            lines.push('# (Expects a dataset named `ds`)')\n            lines.push('ds.show_d3_plot(\\'bar_cluster\\', ')\n            lines.push('  labels_inner= [ \\'LINE 1\\',  \\'LINE 2\\',  \\'LINE 3\\'],')\n            lines.push('  keys        = [ \\'VALUE-1\\', \\'VALUE-2\\', \\'VALUE-3\\'],')\n            lines.push('  key_col     = \\'KEY-COLUMN-NAME\\',')\n            lines.push('  value_cols  = [ \\'VALUE-COL-1\\', \\'VALUE-COL-2\\', \\'VALUE-COL-3\\'],')\n            lines.push('  title       = \\'My Plot\\',')\n            lines.push('  legend_title=\\'Legend\\'')\n            lines.push(')')\n        } else if (value === OUTPUT_BOKEH_PLOT) {\n            lines.push('# Generate a plot using Bokeh')\n            lines.push('# (Expects a dataset named `ds`)')\n            lines.push('# See https://bokeh.pydata.org/en/latest/docs/reference.html')\n            lines.push('from bokeh.io import show')\n            lines.push('from bokeh.plotting import figure')\n            lines.push('plot = figure(title = \\'MyFigure\\')')\n            lines.push('plot.line(')\n            lines.push('  x = \\'X-COLUMN-NAME\\', ')\n            lines.push('  y = \\'Y-COLUMN-NAME\\', ')\n            lines.push('  source = ds.to_bokeh()')\n            lines.push(')')\n            lines.push('show(plot)')\n        } else if (value === OUTPUT_MAP) {\n            lines.push('# Render an interactive OpenStreetMap with points marked')\n            lines.push('# (Expects a dataset named `ds`)')\n            lines.push('ds.show_map(')\n            lines.push('  lat_col = \\'LATITUDE-COLUMN-NAME\\',')\n            lines.push('  lon_col = \\'LONGITUDE-COLUMN-NAME\\',')\n            lines.push('  label_col = \\'LABEL-COLUMN-NAME\\' # Optional')\n            lines.push(')')\n        } else if (value === EXPORT_MODULE) {\n            lines.push('# Export a variable, a function or a class for use in subsequent cells')\n            lines.push('def add_numbers(number_1, number_2):')\n            lines.push('    print(\\'adding \\' + str(number_1) + \\' + \\' +str(number_2))')\n            lines.push('    return number_1 + number_2')\n            lines.push('vizierdb.export_module(')\n            lines.push('    add_numbers')\n            lines.push(')')\n            lines.push('#  Use it in a subsequent like normal: add_numbers(1,2)')\n        } else if (value === RENAME_DATASET) {\n            lines.push('# Rename given dataset to a new (unique) name.');\n            lines.push('vizierdb.rename_dataset(\\'unique-ds-name\\', \\'new-unique-ds-name\\')');\n        } else if (value === UPDATE_CELL_VALUE) {\n            lines.push('# Iterate over list of dataset rows and update cell value.')\n            lines.push('# Reference column by name, label (\\'A\\', \\'B\\', ...), or');\n            lines.push('# column index (0, 1, ...).');\n            lines.push('for row in ds.rows:');\n            lines.push('    row.set_value(\\'name-label-or-index\\', value)');\n        } else if (value === UPDATE_ANNOTATION) {\n            lines.push('# Update all annotations for dataset cell. Note that');\n            lines.push('# rows and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    for a in annos.find_all(\\'some:key\\'):');\n            lines.push('        annos.update(identifier=a.identifier, value=\\'some-value\\')');\n        } else if (value === UPDATE_DATASET) {\n            lines.push('# Update existing dataset with given name.');\n            lines.push('vizierdb.update_dataset(\\'unique-ds-name\\', ds)');\n        }\n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={GET_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Get Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={GET_DATASET_FRAME} onClick={this.handleSelect}>\n\t                                <List.Content as='a'>Get Dataset Dataframe</List.Content>\n\t                            </List.Item>\n                                <List.Item value={OUTPUT_COLUMN_NAMES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Column Names</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_CELL_VALUES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_ANNOTATIONS} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Annotations</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_D3_PLOT} onClick={this.handleSelect}>\n\t                                <List.Content as='a'>Output Plot (D3)</List.Content>\n\t                            </List.Item>\n                                <List.Item value={OUTPUT_BOKEH_PLOT} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Output Plot (Bokeh)</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_MAP} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Output Map</List.Content>\n                                </List.Item>\n                                <List.Item value={EXPORT_MODULE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Export Module</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> New</List.Header>\n                                </List.Item>\n                                <List.Item value={NEW_DATASET_OBJECT} onClick={this.handleSelect}>\n                                    <List.Content as='a'>New Dataset Object</List.Content>\n                                </List.Item>\n                                <List.Item value={INSERT_COLUMN} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Insert Column</List.Content>\n                                </List.Item>\n                                <List.Item value={INSERT_ROW} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Insert Row</List.Content>\n                                </List.Item>\n                                <List.Item value={ADD_ANNOTATION} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Annotate Cell Value</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='update'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='edit' /> Update</List.Header>\n                                </List.Item>\n                                <List.Item value={UPDATE_CELL_VALUE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Edit Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={UPDATE_ANNOTATION} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Update Cell Annotations</List.Content>\n                                </List.Item>\n                                <List.Item value={UPDATE_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Save Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={CREATE_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Save Dataset As ...</List.Content>\n                                </List.Item>\n                                <List.Item value={RENAME_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Rename Dataset</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='delete'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='trash' /> Delete</List.Header>\n                                </List.Item>\n                                <List.Item value={DELETE_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={DELETE_COLUMN} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Dataset Column</List.Content>\n                                </List.Item>\n                                <List.Item value={DELETE_ROW} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Dataset Row</List.Content>\n                                </List.Item>\n                                <List.Item value={DELETE_ANNOTATION} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Cell Annotations</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nclass PythonCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, cursorPosition, newLines, onChange } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (id === window.activeCodeCell || window.activeCodeCell == null);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines};\n        if(addLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line in the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n        const { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1) {\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete') {\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  {\n            editorValue,\n            snippetSelectorVisible,\n            editing,\n            active,\n            cursorPosition\n        } = this.state;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        let editorContainerCss = active ? '' : ' collapsed'\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <CodeSnippetsSelector onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel =\n            \t<div className='python-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n        }\n        return (\n            <div>\n                {examplePanel}\n                <div className={'editor-container' + editorContainerCss }>\n                    <CodeMirror\n                        value={editorValue}\n\t                    cursor={cursorPosition}\n                        options={{\n                            lineNumbers: true,\n                            mode: 'python',\n                            indentUnit: 4\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.handleChange(editor, value, data);\n                        }}\n                        editorDidMount={(editor) => {\n\t                    \tthis.handleEditorDidMount(editor)\n\t                    }}\n                    \tonCursor={(editor, data) => {\n                    \t\tthis.handleCursorActivity(editor, data)\n                    \t}}\n                    />\n                </div>\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default PythonCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/clike/clike';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n/**\n* A Scala command cell contains a text field for the command content and a\n* submit button.\n*/\n\n\nconst WITH_DATASET = 'WITH_DATASET';\nconst OUTPUT_ANNOTATIONS = 'OUTPUT_ANNOTATIONS';\nconst OUTPUT_COLUMN_NAMES = 'OUTPUT_COLUMN_NAMES';\nconst OUTPUT_CELL_VALUES = 'OUTPUT_CELL_VALUES';\n\n\nexport class ScalaCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === WITH_DATASET) {\n            lines.push('// do something with a dataset with given name.');\n            lines.push('VizierDB.withDataset(\"unique-ds-name\", ds => { //do things with ds here })');\n        } else if (value === OUTPUT_ANNOTATIONS) {\n            lines.push('VizierDB.outputAnnotations(\"unique-ds-name\")');\n        } else if (value === OUTPUT_COLUMN_NAMES) {\n            lines.push('//Iterate over list of dataset columns and print column name');\n            lines.push('ds.schema.map(se => se._1).mkString(\"<br>\")');\n        } else if (value === OUTPUT_CELL_VALUES) {\n            lines.push('//Iterate over list of dataset rows and print cell value.')\n            lines.push('ds.toList.map(row => row.tuple.mkString(\",\")).mkString(\"<br>\")');\n        }\n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={WITH_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Get Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_COLUMN_NAMES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Column Names</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_CELL_VALUES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_ANNOTATIONS} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Annotations</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> New</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='update'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='edit' /> Update</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='delete'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='trash' /> Delete</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nclass ScalaCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        sequenceIndex: PropTypes.number.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, sequenceIndex, cursorPosition, newLines, onChange } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (sequenceIndex === window.activeCodeCell);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines};\n        if(newLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line tin the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n    \tconst { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1){\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete'){\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  {\n            editorValue,\n            snippetSelectorVisible,\n            editing,\n            cursorPosition\n        } = this.state;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <ScalaCodeSnippetsSelector onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel =\n            \t<div className='scala-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n        }\n        return (\n            <div>\n\t            {examplePanel}\n\t            <div className='editor-container'>\n                    <CodeMirror\n                        value={editorValue}\n\t                    cursor={cursorPosition}\n\t                    options={{\n                            lineNumbers: true,\n                            mode: 'text/x-scala',\n                            indentUnit: 4\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                        \tthis.handleChange(editor, value, data);\n                        }}\n                        editorDidMount={(editor) => {\n\t                    \tthis.handleEditorDidMount(editor)\n\t                    }}\n\t                \tonCursor={(editor, data) => {\n\t                \t\tthis.handleCursorActivity(editor, data)\n\t                \t}}\n                    />\n                </div>\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default ScalaCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n/**\n* A Scala command cell contains a text field for the command content and a\n* submit button.\n*/\n\n\nconst WITH_DATASET = 'WITH_DATASET';\nconst OUTPUT_ANNOTATIONS = 'OUTPUT_ANNOTATIONS';\nconst OUTPUT_COLUMN_NAMES = 'OUTPUT_COLUMN_NAMES';\nconst OUTPUT_CELL_VALUES = 'OUTPUT_CELL_VALUES';\n\n\nexport class RCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === WITH_DATASET) {\n            lines.push('// do something with a dataset with given name.');\n            lines.push('vizierdb.withDataset(\"unique-ds-name\", ds => { //do things with ds here })');\n        } else if (value === OUTPUT_ANNOTATIONS) {\n            lines.push('vizierdb.outputAnnotations(\"unique-ds-name\")');\n        } else if (value === OUTPUT_COLUMN_NAMES) {\n            lines.push('//Iterate over list of dataset columns and print column name');\n            lines.push('ds.schema.map(se => se._1).mkString(\"<br>\")');\n        } else if (value === OUTPUT_CELL_VALUES) {\n            lines.push('//Iterate over list of dataset rows and print cell value.')\n            lines.push('ds.toList.map(row => row.tuple.mkString(\",\")).mkString(\"<br>\")');\n        }\n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={WITH_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Get Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_COLUMN_NAMES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Column Names</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_CELL_VALUES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_ANNOTATIONS} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Annotations</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> New</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='update'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='edit' /> Update</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='delete'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='trash' /> Delete</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport DatasetSelector from './DatasetSelector';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\nimport TextControl from './TextControl';\n\n\n/**\n* A Python command cell contains a text field for the command content and a\n* submit button.\n*/\n\nconst SELECT_TABLE = 'SELECT_TABLE';\nconst JOIN_TABLES = 'JOIN_TABLES';\nconst UNION_TABLES = 'UNION_TABLES';\nconst DATASET = 'DATASET';\n\n\n\nexport class SQLCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        this.state = {secondaryDatasetValue: \"\"}\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n    \tconst { onSelect } = this.props;\n    \tconst { secondaryDatasetValue, primaryDatasetValue } = this.state\n    \tlet lines = [];\n        if (value === SELECT_TABLE) {\n            lines.push('SELECT * FROM '+primaryDatasetValue);\n        } else if (value === JOIN_TABLES) {\n        \tlines.push('SELECT * FROM '+primaryDatasetValue+' JOIN '+secondaryDatasetValue);\n        } else if (value === UNION_TABLES) {\n        \tlines.push('(SELECT * FROM '+primaryDatasetValue+') UNION ALL (SELECT * FROM '+secondaryDatasetValue+')');\n        } else if (value === DATASET) {\n            lines.push(' '+primaryDatasetValue+' ');\n        }\n        onSelect(lines);\n    }\n    handleSecondaryDatasetChange = (value) => {\n        this.setState({secondaryDatasetValue: value});\n    }\n    handlePrimaryDatasetChange = (value) => {\n        this.setState({primaryDatasetValue: value});\n    }\n    \n    render() {\n    \tconst { id, datasets } = this.props;\n    \tconst { secondaryDatasetValue, primaryDatasetValue } = this.state;\n    \treturn (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item className='sql-example-list-item' value={SELECT_TABLE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>\n                                       <span className='sql-example-a-span'>Select from</span>\n                                       <div className='sql-example-ds-selector'>\n\t\t                \t\t        \t<DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={primaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t\t                                        }}\n\t\t                \t\t        \t/>\n\t\t                                </div>\n\t\t                \t\t        <Icon name='plus' />\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className='sql-example-list-item' value={JOIN_TABLES} onClick={this.handleSelect}>\n\t                                <List.Content as='a'>\n\t                                    <div className='sql-example-ds-selector'>\n\t\t                \t\t        \t<DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={primaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t\t                                        }}\n\t\t                \t\t        \t/>\n\t\t                \t\t        </div>\n\t\t                \t\t        <span className='sql-example-a-span'>Join</span>\n\t\t                \t\t        <div className='sql-example-ds-selector'>\n\t                                        <DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={secondaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handleSecondaryDatasetChange(value)\n\t\t                                        }}\n\t                \t\t        \t    />\n\t\t                \t\t        </div>\n\t                                    <Icon name='plus' />\n\t                                </List.Content>\n\t                            </List.Item>\n\t                            <List.Item className='sql-example-list-item' value={UNION_TABLES} onClick={this.handleSelect}>\n                                <List.Content as='a'>\n                                    <div className='sql-example-ds-selector'>\n\t                \t\t        \t<DatasetSelector\n\t                \t\t                key={id}\n\t                \t\t                id={id}\n\t                \t\t                isRequired={false}\n\t                \t\t                name={id}\n\t                \t\t                datasets={datasets}\n\t                \t\t                value={primaryDatasetValue}\n\t                \t\t                onChange={(dsselector, value) => {\n\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t                                        }}\n\t                \t\t        \t/>\n\t                \t\t        </div>\n\t                \t\t        <span className='sql-example-a-span'>Union</span>\n\t                \t\t        <div className='sql-example-ds-selector'>\n\t                \t\t        \t<DatasetSelector\n\t                \t\t                key={id}\n\t                \t\t                id={id}\n\t                \t\t                isRequired={false}\n\t                \t\t                name={id}\n\t                \t\t                datasets={datasets}\n\t                \t\t                value={secondaryDatasetValue}\n\t                \t\t                onChange={(dsselector, value) => {\n\t                \t\t                \tthis.handleSecondaryDatasetChange(value)\n\t                                        }}\n                \t\t        \t    />\n\t                \t\t        </div>\n\t                \t\t        <Icon name='plus' />\n                                </List.Content>\n                            </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> Dataset</List.Header>\n                                </List.Item>\n                                <List.Item className='sql-example-list-item' value={DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>\n                                        <span className='sql-example-a-span'>Dataset</span>\n\t                                    <div className='sql-example-ds-selector'>\n\t\t                \t\t        \t<DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={primaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t\t                                        }}\n\t\t                \t\t        \t/>\n\t\t                                </div>\n\t\t                \t\t        <Icon name='plus' />\n                                    </List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\nclass SQLCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        otputDataset: PropTypes.string,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        sequenceIndex: PropTypes.number.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, sequenceIndex, cursorPosition, newLines, onChange, outputDataset } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (sequenceIndex === window.activeCodeCell);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines, outputDataset:outputDataset };\n        if(newLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line tin the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n    \tconst { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n    \tconst { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1){\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete'){\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Handle change of dataset\n     */\n    handleDatasetChange = (value) => {\n        this.setState({datasetValue: value});\n    }\n    /**\n     * Handle change of output dataset\n     */\n    handleOutputDatasetChange = (value) => {\n        const { onChange } = this.props;\n        this.setState({outputDataset: value});\n        onChange('output_dataset', value);\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  {\n            // datasetValue,\n            editorValue,\n            snippetSelectorVisible,\n            outputDataset,\n            editing,\n            cursorPosition\n        } = this.state;\n        const { id, datasets } = this.props;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <SQLCodeSnippetsSelector datasets={datasets} onDatasetChange={this.handleDatasetChange} onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel =\n            \t<div className='sql-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n        }\n        return (\n            <div>\n\t            {examplePanel}\n\t            <div className='editor-container'>\n                    <CodeMirror\n                        value={editorValue}\n\t                    cursor={cursorPosition}\n\t                    options={{\n                            lineNumbers: true,\n                            mode: 'text/x-sql',\n                            indentUnit: 4\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                        \tthis.handleChange(editor, value, data);\n                        }}\n                        editorDidMount={(editor) => {\n                        \tthis.handleEditorDidMount(editor)\n                        }}\n\t                \tonCursor={(editor, data) => {\n\t                \t\tthis.handleCursorActivity(editor, data)\n\t                \t}}\n                    />\n                </div>\n                <div class=\"ui labeled input\">\n\t                <div class=\"ui label\">\n\t                \tOutput Dataset\n\t                </div>\n                    <TextControl\n\t                    key={id}\n\t                    id={id}\n\t                    name={'Output Dataset'}\n\t                    placeholder={'Output Dataset (optional)'}\n\t                    isRequired={false}\n\t                    value={outputDataset}\n\t                    onChange={(dstext, value) => {\n\t\t                \tthis.handleOutputDatasetChange(value)\n\t                    }}\n\t                />\n\t            </div>\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default SQLCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/markdown/markdown';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n\n/**\n* A Python command cell contains a text field for the command content and a\n* submit button.\n*/\n\nconst TABLE = 'TABLE';\n\n\n\nexport class MarkdownCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === TABLE) {\n            lines.push('| header1 | header2 |');\n            lines.push('| ------- | ------- |');\n            lines.push('| | |');\n        } \n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={TABLE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Table</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nclass MarkdownCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        sequenceIndex: PropTypes.number.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, sequenceIndex, cursorPosition, newLines, onChange } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (sequenceIndex === window.activeCodeCell || sequenceIndex === -1);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines};\n        if(addLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line tin the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n        const { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n        \n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1){\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete'){\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  { editorValue, snippetSelectorVisible, editing, active, cursorPosition } = this.state;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        let editorPanel = null;\n        let editorContainerCss = active ? '' : ' collapsed'\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <MarkdownCodeSnippetsSelector onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel = \n            \t<div className='python-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n\t\t\t    \n\t\t    editorPanel = \n\t\t    \t<div className={'editor-container' + editorContainerCss }>\n\t\t            <CodeMirror\n\t\t                value={editorValue}\n\t\t                cursor={cursorPosition}\n\t\t                options={{\n\t\t                    lineNumbers: true,\n\t\t                    mode: 'markdown',\n\t\t                    indentUnit: 4\n\t\t                }}\n\t\t                onBeforeChange={(editor, data, value) => {\n\t\t                    this.handleChange(editor, value, data);\n\t\t                }}\n\t\t                editorDidMount={(editor) => {\n\t\t                \tthis.handleEditorDidMount(editor)\n\t\t                }}\n\t\t            \tonCursor={(editor, data) => {\n\t\t            \t\tthis.handleCursorActivity(editor, data)\n\t\t            \t}}\n\t\t            />\n\t\t        </div>\n        }\n        return (\n            <div>\n                {examplePanel}\n                {editorPanel}\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default MarkdownCell\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { HotKeys } from 'react-hotkeys';\nimport { Button, Form } from 'semantic-ui-react';\nimport CommandsListing from './CommandsListing';\nimport ContentSpinner from '../../ContentSpinner';\nimport CodeCell from './form/CodeCell'\nimport TextControl from './form/TextControl';\nimport { ErrorListMessage } from '../../Message';\nimport ModuleInputForm from './ModuleInputForm';\nimport { CodeSnippetsSelector as PythonSnippets } from './form/PythonCell';\nimport { ScalaCodeSnippetsSelector as ScalaSnippets } from './form/ScalaCell';\nimport { RCodeSnippetsSelector as RSnippets } from './form/RCell';\nimport { SQLCodeSnippetsSelector as SQLSnippets } from './form/SQLCell';\nimport { MarkdownCodeSnippetsSelector as MarkdownSnippets } from './form/MarkdownCell';\nimport { DT_DATASET_ID, formValuesToRequestData, toFormValues,\n    resetColumnIds } from '../../../resources/Engine';\nimport '../../../../css/App.css';\nimport '../../../../css/ModuleForm.css';\n\n/**\n * The moule input area is divided into three parts: (i) a header that contains\n * a dropdown menu to select one of the available module commands, (2) the\n * command input form, and (3) buttons to sumbit or dismiss the module changes.\n */\nclass CellCommandArea extends React.Component {\n    static propTypes = {\n        apiEngine: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        cell: PropTypes.object.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        onClick: PropTypes.func.isRequired,\n        onDismiss: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func,\n        userSettings: PropTypes.object.isRequired,\n        onResetRecommendations: PropTypes.func,\n        onUpdateProgress: PropTypes.func\n    }\n    constructor(props) {\n        super(props);\n        const { cell, datasets } = props;\n        // Keep track of the command specification that is currently being\n        // selected. For an existing cell the specification initially is the one\n        // that is contained in the workflow module handle. For new cells the\n        // command specification is undefined or null. If the user selects a\n        // new command from the command menu the local state will be updated\n        // accordingly.\n        // If the cell contains a code editor maintain information about the\n        // cursor position and a list of new lines that are being pasted from\n        // a code-snippet selector\n        let values = null;\n        if (!cell.isNewCell()) {\n            values = toFormValues(\n                cell.commandSpec.parameters,\n                datasets,\n                cell.module.command.arguments\n            );\n        }\n        this.state = {\n            codeEditorProps: {\n                cursorPosition: { line: 0, ch: 0 },\n                newLines: \"\"\n            },\n            errors: null,\n            formValues: values,\n            hasErrors: false,\n            selectedCommand: cell.commandSpec,\n            showCommandsListing: (cell.commandSpec == null),\n            snippetSelectorVisible: false,\n            upstreamFormValues: false,\n            submitted: false\n        }\n    }\n    /**\n     * Set this as the active cell (if it isn't yet). This method is intended\n     * when a rebdered code editor receives the focus.\n     */\n    handleActivateCell = () => {\n        const { cell, isActiveCell, onSelectCell } = this.props;\n        if (!isActiveCell) {\n            onSelectCell(cell);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line in the current\n     * editor value.\n     */\n    handleAppendCode = (lines) => {\n        const  { codeEditorProps, formValues, selectedCommand } = this.state;\n        const paraCode = selectedCommand.codeParameter;\n        const editorValue = formValues[paraCode.id] == null ? '' : formValues[paraCode.id];\n        const cursorPosition = codeEditorProps.cursorPosition;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.handleFormValueChange(paraCode.id, value);\n        // Hide the snippet selector\n        this.handleToggleSnippetSelector();\n    }\n    /**\n     * Handle change in one of the elements in a displayed module input form.\n     * If the cell displays a code editor the optional cursorPosition specifies\n     * the new position of the cursor in the editor.\n     */\n    handleFormValueChange = (id, value, cursorPosition) => {\n        if(id===\"bulk\"){\n            this.handleBulkFormValueChange(value)\n            return\n        }\n        const { codeEditorProps, formValues, selectedCommand } = this.state;\n        const modifiedValues = {...formValues};\n        modifiedValues[id] = value;\n        // If the modified control is a dataset selector we need to reset all\n        // column identifier controls.\n        const cntrlSpec = selectedCommand.parameters.find((p) => (p.id === id));\n        if (cntrlSpec.datatype === DT_DATASET_ID) {\n            resetColumnIds(modifiedValues, selectedCommand.parameters);\n        }\n        let modifiedEditorProps = null;\n        if (cursorPosition != null) {\n            modifiedEditorProps = { cursorPosition: cursorPosition };\n        } else {\n            modifiedEditorProps = codeEditorProps;\n        }\n        this.setState({\n            upstreamFormValues: true,\n            formValues: modifiedValues,\n            codeEditorProps: modifiedEditorProps\n        });\n    }\n\n    /**\n    * Bulk update the cell state - necessary when multiple values need to be updated quickly in succession\n    * (e.g. when changing tabs in the load dataset form, all properties will be updated). Individually updating\n    * each attribute in a loop does not guarantee a synchronous operation as calls maybe batched for for performance\n    * gains. Read More: https://reactjs.org/docs/react-component.html#setstate\n    */\n    handleBulkFormValueChange = (values) => {\n        const modifiedValues = {...values}\n        this.setState({\n            formValues: modifiedValues,\n            upstreamFormValues: true\n        })\n    }\n    /**\n     * Keep track of the cursor position of a displayed code cell.\n\n     */\n    handleCursorChange = (cursorPos) => {\n        this.setState({ codeEditorProps: { cursorPosition: cursorPos } });\n    }\n    /**\n     * Dismiss changes to the cell when the user presses the Dismiss button.\n     * If this is a new cell the dismissal will remove the cell from the\n     * notebook. Otherwise we need to adjust some of the internal state settings\n     * for a fresh start when the cell becomes the active cell again.\n     */\n    handleDismiss = () => {\n        const { cell, datasets, onDismiss } = this.props;\n        // Clean up for fresh start when cell becomes active again\n        if (!cell.isNewCell()) {\n            this.setState({\n                upstreamFormValues: false,\n                formValues: toFormValues(\n                    cell.commandSpec.parameters,\n                    datasets,\n                    cell.module.command.arguments\n                ),\n                selectedCommand: cell.commandSpec,\n                snippetSelectorVisible: false\n            });\n        }\n        onDismiss(cell);\n    }\n    /**\n     * Event handler for dismissing a shown command listing. The result depends\n     * on whether the cell currently has a selected command or not. In the\n     * latter case this is a new cell that is empty and we call the cell dismiss\n     * method.\n     */\n    handleDismissCommandsListing = () => {\n        const { selectedCommand } = this.state;\n        const { onResetRecommendations } = this.props;\n        if (selectedCommand != null) {\n            this.setState({showCommandsListing: false});\n        } else {\n            this.handleDismiss();\n        }\n        onResetRecommendations()\n    }\n    /**\n     * Clear the list of error messages.\n     */\n    handleDismissErrors = () => {\n        this.setState({errors: null});\n    }\n    /**\n     * Set the command in the user settings clipboard as the selected command.\n     */\n    handlePasteCommand = () => {\n        const { datasets, userSettings, onResetRecommendations} = this.props;\n        this.setState({\n            formValues: toFormValues(\n                userSettings.clipboard.commandSpec.parameters,\n                datasets,\n                userSettings.clipboard.arguments\n            ),\n            selectedCommand: userSettings.clipboard.commandSpec,\n            showCommandsListing: false\n        });\n        onResetRecommendations()\n    }\n    /**\n     * Update the selected command to the command that is identified by the\n     * given pair of package and command identifier.\n     */\n    handleSelectCommand = (packageId, commandId) => {\n        const { apiEngine, datasets, onResetRecommendations} = this.props;\n        const cmd = apiEngine.packages.getCommandSpec(packageId, commandId);\n        this.setState({\n            formValues: toFormValues(cmd.parameters, datasets),\n            selectedCommand: cmd,\n            showCommandsListing: false\n        });\n        onResetRecommendations()\n    }\n    /**\n     * Set the showCommandsListing to true to show a list of available commands.\n     */\n    handleShowCommandsListing = () => {\n        this.setState({showCommandsListing: true});\n    }\n    /**\n     * Submit the values in the module input form. This method first converts\n     * the forma values into the representation that is expected by the API.\n     * During this conversion the input values are validated against the\n     * constraints in the command specification. If any of the values are not\n     * valid the form is not submitted but a list of validation errors will be\n     * shown instead.\n     */\n    handleSubmitForm = () => {\n        const { cell, onSubmit, apiEngine, onUpdateProgress } = this.props;\n        // The onSubmit function may be none if submission is not permitted for\n        // an active notebook. Show an alert for the user.\n        if (onSubmit == null) {\n            alert('Cannot submit cell in an active notebook');\n            return;\n        }\n        const { formValues, selectedCommand } = this.state;\n        // Convert form values into format expected by the API. During the\n        // conversion validate the form values.\n        const req = formValuesToRequestData(formValues, selectedCommand.parameters, apiEngine.serviceProperties);\n        if (req.errors.length > 0) {\n            // Show list of error messages if validation of form values failed\n            this.setState({errors: req.errors, hasErrors: true});\n        } else {\n            // Clear the error state and submit the cell, command specification\n            // and form values to update the underlying workflow.\n            this.setState({errors: null, hasErrors: false, submitted:true});\n            onSubmit(cell, selectedCommand, req.data, onUpdateProgress);\n        }\n        this.setState({upstreamFormValues:false})\n    }\n    /**\n     * Toggle visibility of an optional code snippet selector.\n     */\n    handleToggleSnippetSelector = () => {\n        const { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n\n    /**\n     * Catches F5 (page refresh) and executes the cell\n     */\n    handleF5Press = (event) => {\n        event.preventDefault()\n        this.handleSubmitForm()\n    }\n\n    /**\n     * To let arguments be modified by cell execution\n     */\n    static getDerivedStateFromProps(props, state){\n        const moduleArguments = (typeof props.cell.module !== \"undefined\") ? props.cell.module.command.arguments : null;\n        if(typeof moduleArguments !== \"undefined\" && moduleArguments !== null && state.upstreamFormValues === false){\n            let formattedModuleArguments = toFormValues(props.cell.commandSpec.parameters, props.datasets, moduleArguments)\n            return {\n                ...state,\n                formValues : formattedModuleArguments\n            };\n        }\n        return null;\n    }\n\n    render() {\n        const {\n            apiEngine,\n            cell,\n            datasets,\n            artifacts,\n            isActiveCell,\n            onClick,\n            onSubmit,\n            userSettings,\n        } = this.props;\n        const {\n            errors,\n            formValues,\n            hasErrors,\n            selectedCommand,\n            showCommandsListing,\n            snippetSelectorVisible,\n            submitted\n        } = this.state;\n        // Show an list of error messages if the form did not validate\n        let errorMessage = null;\n        if (errors != null) {\n            errorMessage = (\n                <ErrorListMessage\n                    title='There are errors in the form'\n                    errors={errors}\n                    onDismiss={this.handleDismissErrors}\n                />\n            );\n        }\n        // The main content depends on whether a command specification is\n        // defined for the associated notebook cell or not.\n        let mainContent = null;\n        // For code cells with additional parameters\n        let additionalParams = null;\n        // For code cells an additional button is shown to toggle vizibility of\n        // a code snippet selector.\n        let codeSnippetButton = null;\n        if ((isActiveCell) && ((selectedCommand == null) || (showCommandsListing))) {\n            let onPaste = null;\n            if (userSettings.clipboard != null) {\n                onPaste = this.handlePasteCommand;\n            }\n            // If the command specification is undefined or the show command listing\n            // flag is true then a listing of all available commands is shown to allow\n            // the user to select a command.\n            mainContent = (\n                <CommandsListing\n                    apiEngine={apiEngine}\n                    onDismiss={this.handleDismissCommandsListing}\n                    onPaste={onPaste}\n                    onSelect={this.handleSelectCommand} />\n            );\n        } else {\n            // If there is a command specification defined for this component\n            // the output depends on whether (i) the command is a code cell\n            // command and (2) the cell is in edit state or not.\n            let paraCode = null;\n            if (isActiveCell) {\n                paraCode = selectedCommand.codeParameter;\n            } else if (!cell.isNewCell()) {\n                paraCode = cell.commandSpec.codeParameter;\n            }\n            if (paraCode != null) {\n            \tif (submitted) {\n                    // cell has been submitted but not put/post not done yet\n                    mainContent = (\n                        <div className={'module-form'}>\n                           <ContentSpinner text=\"Submitting Cell\" size='small' />\n                        </div>\n                    );\n                }\n            \telse{\n\t            \t// Show (optional) code snippet selector for different code cell\n\t                // types. The snippet selector is only visible if this is the\n\t                // active cell and the show snippet flag is true.\n\t                let codeSnippetPanel = null;\n\t                if ((isActiveCell) && (snippetSelectorVisible)) {\n\t                    if (paraCode.language === 'python') {\n\t                        codeSnippetPanel = (\n\t                            <PythonSnippets onSelect={this.handleAppendCode}/>\n\t                        );\n\t                    } else if (paraCode.language === 'scala') {\n\t                        codeSnippetPanel = (\n\t                            <ScalaSnippets onSelect={this.handleAppendCode}/>\n\t                        );\n\t                    } else if (paraCode.language === 'r') {\n\t                    \tcodeSnippetPanel = (\n\t                            <RSnippets onSelect={this.handleAppendCode}/>\n\t                        );\n\t                    } else if (paraCode.language === 'sql') {\n\t                        // let outputDataset = formValues['output_dataset'];\n\t                    \tcodeSnippetPanel = (\n\t                                <SQLSnippets datasets={datasets} onSelect={this.handleAppendCode}/>\n\t                            );\n\t                    }\n\t                    else if (paraCode.language === 'markdown') {\n\t                        codeSnippetPanel = (\n\t                                <MarkdownSnippets onSelect={this.handleAppendCode}/>\n\t                            );\n\t                    }\n\t\n\t                }\n\t                const { codeEditorProps } = this.state;\n\t                const lockedCell = cell && cell.module ? cell.module.locked : false;\n\t                if((isActiveCell) && (paraCode.language === 'sql')) {\n\t                \tlet outputDataset = formValues['output_dataset'];\n\t                \tadditionalParams = (\n\t                    \t\t<div className=\"ui labeled input\">\n\t\t\t\t\t                <div className=\"ui label\">\n\t\t\t\t\t                \tOutput Dataset\n\t\t\t\t\t                </div>\n\t\t\t\t                    <TextControl\n\t\t\t\t\t                    key={paraCode.id}\n\t\t\t\t\t                    id={paraCode.id}\n\t\t\t\t\t                    name={'Output Dataset'}\n\t\t\t\t\t                    placeholder={'Output Dataset (optional)'}\n\t\t\t\t\t                    isRequired={false}\n\t\t\t\t\t                    value={outputDataset}\n\t\t\t\t\t                    onChange={(dstext, value) => {\n\t\t\t\t\t                    \tthis.handleFormValueChange('output_dataset', value, codeEditorProps.cursorPosition)\n\t\t\t\t\t                    }}\n\t\t\t\t\t                />\n\t\t\t\t\t            </div>\n\t\t                    );\n\t                }\n\t                mainContent = (\n\t                    <div>\n\t                        <Form>\n\t                            <CodeCell\n\t                                cursorPosition={codeEditorProps.cursorPosition}\n\t                                editing={false}\n\t                                id={paraCode.id}\n\t                                isActiveCell={isActiveCell}\n\t                                key={paraCode.id}\n\t                                language={paraCode.language}\n\t                                onChange={this.handleFormValueChange}\n\t                                onCursor={this.handleCursorChange}\n\t                                onFocus={this.handleActivateCell}\n\t                                readOnly={onSubmit == null}\n\t                                value={formValues[paraCode.id]}\n\t                                locked={lockedCell}\n\t                            />\n\t                        </Form>\n\t                    { additionalParams }\n\t                    { codeSnippetPanel }\n\t                    </div>\n\t                );\n\t                // The snippet toggle button text depends on whether the snippet\n\t                // selector is vizible or not\n\t                const buttonTitle = (snippetSelectorVisible) ? 'Hide' : 'Show';\n\t                codeSnippetButton = (\n\t                    <Button\n\t                        content={ buttonTitle + '  Code Examples' }\n\t                        icon='info'\n\t                        labelPosition='left'\n\t                        primary\n\t                        onClick={this.handleToggleSnippetSelector}\n\t                    />\n\t                );\n                }\n            } else if (isActiveCell) {\n            \tconst errorCss = (hasErrors) ? ' error' : '';\n                if (submitted) {\n                    // cell has been submitted but not put/post not done yet\n                    mainContent = (\n                        <div className={'module-form' + errorCss}>\n                           <ContentSpinner text=\"Submitting Cell\" size='small' />\n                        </div>\n                    );\n                }\n            \telse{\n\t            \tmainContent = (\n\t                    <div className={'module-form' + errorCss}>\n\t                        <p className={'module-form-header' + errorCss}>\n\t                            {selectedCommand.name}\n\t                        </p>\n\t                        <ModuleInputForm\n                                datasets={datasets}\n                                artifacts={artifacts}\n\t                            onChange={this.handleFormValueChange}\n\t                            selectedCommand={selectedCommand}\n\t                            serviceProperties={apiEngine.serviceProperties}\n\t                            values={formValues}\n\t                        />\n\t                    </div>\n\t                );\n            \t}\n            } else if ((cell.isNewCell())  && (selectedCommand != null)) {\n                mainContent = (\n                    <pre className='cell-cmd-text' onClick={onClick}>\n                        {selectedCommand.name}\n                    </pre>\n                );\n            } else if (cell.module != null) {\n                // If the cell is not a code cell, it is not being edited, and\n                // it is not a new cell then the cell has to have an associated\n                // workflow module. In this case we show the command text.\n                mainContent = (\n                    <pre className='cell-cmd-text' onClick={onClick}>\n                        {cell.module.text}\n                    </pre>\n                );\n            } \n        }\n        // Wrap main content in hotkey handler if submission of the form is\n        // allowed\n        let wrappedContent = null;\n        if (onSubmit != null) {\n            // Set hotkey handler to submit and dismiss a shown command input\n            // form.\n            const handlers = {\n              'runCell': this.handleSubmitForm,\n              'dismiss': this.handleDismiss,\n              'catchF5': this.handleF5Press\n            };\n            const keyMap = { runCell: 'ctrl+enter', dismiss: 'esc', catchF5: 'f5' };\n            wrappedContent = (\n                <HotKeys keyMap={keyMap} handlers={handlers}>\n                    { mainContent }\n                </HotKeys>\n            );\n        } else {\n            wrappedContent = mainContent;\n        }\n        // Add a list of action buttons if the cell is the active cell.\n        let buttons = null;\n        if ((isActiveCell) && (!showCommandsListing) && (!submitted)) {\n            buttons = (\n                <div className='module-form-buttons'>\n                    { codeSnippetButton }\n                    <span className='padding-lg'>\n                        <Button\n                            content='Change Command'\n                            icon='wrench'\n                            labelPosition='left'\n                            onClick={this.handleShowCommandsListing}\n                        />\n                    </span>\n                    <Button\n                        content='Dismiss'\n                        icon='close'\n                        labelPosition='left'\n                        negative\n                        onClick={this.handleDismiss}\n                    />\n                    <Button\n                        content='Submit'\n                        disabled={onSubmit == null}\n                        icon='paper plane outline'\n                        labelPosition='left'\n                        positive\n                        onClick={this.handleSubmitForm}\n                    />\n                </div>\n            );\n        }\n        return (\n            <div className='cell-command-area'>\n                { errorMessage }\n                { wrappedContent }\n                { buttons }\n            </div>\n        );\n    }\n}\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n\n\nexport default CellCommandArea;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Icon } from 'semantic-ui-react';\nimport { INSERT_AFTER, INSERT_BEFORE } from '../../resources/Notebook';\nimport '../../../css/Notebook.css'\nimport { HATEOAS_MODULE_FREEZE, HATEOAS_MODULE_THAW } from '../../util/HATEOAS'\n\n/**\n * Dropdown menu for a notebook cell. Displays two icons with dropdown menus.\n * The first menu contains operations that are available for the cell. The\n * second menu allows to change the content that is being displayed in the cell\n * output area.\n */\nclass CellDropDownMenu extends React.Component {\n    static propTypes = {\n        cell: PropTypes.object.isRequired,\n        cellNumber: PropTypes.number.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        isNewNext: PropTypes.bool.isRequired,\n        isNewPrevious: PropTypes.bool.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onAddFilteredCommand: PropTypes.func.isRequired,\n        onCopyCell: PropTypes.func.isRequired,\n        onCreateBranch: PropTypes.func.isRequired,\n        onDeleteCell: PropTypes.func.isRequired,\n        onInsertCell: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        onFreezeCell: PropTypes.func.isRequired,\n        onFreezeOneCell: PropTypes.func.isRequired,\n        onThawCell: PropTypes.func.isRequired,\n        onThawOneCell: PropTypes.func.isRequired,\n    }\n    /**\n     * Insert new cell before the notebook cell that is associated with the\n     * menu.\n     */\n    handleInsertBefore = () => {\n        this.props.onInsertCell(INSERT_BEFORE);\n    }\n    /**\n     * Insert new cell after the notebook cell that is associated with the menu.\n     */\n    handleInsertAfter = () => {\n        this.props.onInsertCell(INSERT_AFTER);\n    }\n    render() {\n        const {\n            cell,\n            cellNumber,\n            isActiveCell,\n            isNewNext,\n            isNewPrevious,\n            notebook,\n            onAddFilteredCommand,\n            onCopyCell,\n            onCreateBranch,\n            onDeleteCell,\n            onSelectCell,\n            onFreezeCell,\n            onFreezeOneCell,\n            onThawCell,\n            onThawOneCell\n        } = this.props;\n        // If the cell is in pending or running state no menu is displayed. We\n        // only show an icon that depicts the cell status.\n        if (cell.isActive()) {\n            let icon = null;\n            if (cell.isPending()) {\n                icon = (<Icon name='hourglass half' title='Pending' />);\n            } else if (cell.isRunning()) {\n                icon = (<Icon name='circle notch' title='Running' />);\n            }\n            return (\n                <div className='cell-menu'>\n                { icon }\n                </div>\n            );\n        }\n        // Create list of dropdon menu items. The first section contains the\n        // cell actions edit, delete, insert cell (above/below) create new\n        // branch at this cell, and hide commands like this. If the notebook is\n        // read-only only the last teo items are shown\n        const dropdownItems = [];\n        //dropdownItems.push(<Dropdown.Header key='cell' content={'Cell (#' + cellNumber + ')'} />);\n        //dropdownItems.push(<Dropdown.Divider key='div1'/>);\n        if (!notebook.readOnly) {\n            dropdownItems.push(<Dropdown.Header key='header-cell' content=\"Cell\"/>);\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='edit'\n                    disabled={isActiveCell}\n                    icon='pencil'\n                    text='Edit'\n                    title={'Edit notebook cell #' + cellNumber}\n                    onClick={onSelectCell}\n                />\n            );\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='copy'\n                    disabled={isActiveCell}\n                    icon='copy'\n                    text='Copy'\n                    title={'Copy command from notebook cell #' + cellNumber}\n                    onClick={onCopyCell}\n                />\n            );\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='delete'\n                    disabled={notebook.hasActiveCells()}\n                    icon='trash'\n                    text='Delete'\n                    title={'Delete notebook cell #' + cellNumber}\n                    onClick={onDeleteCell}\n                />\n            );\n            dropdownItems.push(<Dropdown.Divider key='div-notebook'/>);\n            dropdownItems.push(<Dropdown.Header key='header-notebook' content=\"Notebook\"/>);\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='insert-above'\n                    disabled={isNewPrevious}\n                    icon='arrow circle up'\n                    text='Insert cell above'\n                    title={'Insert new notebook cell before cell #' + cellNumber}\n                    onClick={this.handleInsertBefore}\n                />\n            );\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='insert-below'\n                    disabled={isNewNext}\n                    icon='arrow circle down'\n                    text='Insert cell below'\n                    title={'Insert new notebook cell after cell #' + cellNumber}\n                    onClick={this.handleInsertAfter}\n                />\n            );\n            if(cell.module.links.has(HATEOAS_MODULE_FREEZE)){\n                dropdownItems.push(\n                    <Dropdown.Item\n                        key='freeze-this'\n                        disabled={false}\n                        icon='snowflake'\n                        text='Freeze this cell'\n                        title={'Freeze cell #' + cellNumber + ', temporarily removing it from the notebook'}\n                        onClick={onFreezeOneCell}\n                    />\n                );\n                dropdownItems.push(\n                    <Dropdown.Item\n                        key='freeze-below'\n                        disabled={false}\n                        icon='snowflake'\n                        text='Freeze cells from here'\n                        title={'Freeze cell #' + cellNumber + ' and subsequent cells, temporarily removing it from the notebook'}\n                        onClick={onFreezeCell}\n                    />\n                );\n            };\n            if(cell.module.links.has(HATEOAS_MODULE_THAW)){\n                dropdownItems.push(\n                    <Dropdown.Item\n                        key='thaw-this'\n                        disabled={false}\n                        icon='sun'\n                        text='Thaw this cell'\n                        title={'Thaw cell #' + cellNumber + ', returning it to the notebook and rerunning it'}\n                        onClick={onThawOneCell}\n                    />\n                );\n                dropdownItems.push(\n                    <Dropdown.Item\n                        key='thaw-above'\n                        disabled={false}\n                        icon='sun'\n                        text='Thaw cells up to here'\n                        title={'Thaw cell #' + cellNumber + ' and preceding cells, returning them to the notebook and rerunning it'}\n                        onClick={onThawCell}\n                    />\n                );\n            };\n            dropdownItems.push(<Dropdown.Divider key='div-branch'/>);\n        }\n        // Have a descriptive title that shows the user which cells will be\n        // included in the new branch\n        dropdownItems.push(<Dropdown.Header key='header-branch' content=\"Branch\"/>);\n        let branchRange = '1';\n        if (cellNumber > 1) {\n            branchRange += '-' + cellNumber;\n        }\n        dropdownItems.push(\n            <Dropdown.Item\n                key='branch'\n                disabled={notebook.hasActiveCells()}\n                icon='fork'\n                text='Create branch'\n                title={'Create new branch containing notebook cells [' + branchRange + ']'}\n                onClick={onCreateBranch}\n            />\n        );\n        dropdownItems.push(<Dropdown.Divider key='div-filter'/>);\n        dropdownItems.push(<Dropdown.Header key='header-filter' content=\"Filter\"/>);\n        dropdownItems.push(\n            <Dropdown.Item\n                key='hide-cmd'\n                icon='filter'\n                text={'Hide ' + cell.commandSpec.name}\n                title={'Hide all cells with command of type ' + cell.commandSpec.name + ' in the notebook'}\n                onClick={onAddFilteredCommand}\n            />\n        );\n        // If the cell is in an error state we show an additional icon that\n        // depicts the cell status\n        let cellStatusIcon = null;\n        if (cell.isErrorOrCanceled()) {\n            if (cell.isCanceled()) {\n                cellStatusIcon = (<Icon name='cancel' color='red' title='Canceled'/>);\n            } else if (cell.isError()) {\n                cellStatusIcon = (<Icon name='warning circle' color='red' title='Error' />);\n            }\n            cellStatusIcon = (\n                <div className='cell-status-icon'>{ cellStatusIcon }</div>\n            );\n        }\n        return (\n            <div>\n                <div className='cell-menu'>\n                    <Dropdown icon='bars' title='Cell actions'>\n                        <Dropdown.Menu>{dropdownItems}</Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                { cellStatusIcon }\n            </div>\n        );\n    }\n}\n\nexport default CellDropDownMenu;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent }  from 'react'\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types'\nimport {scaleOrdinal} from 'd3-scale';\n// ResponsiveContainer\nimport {BarChart, LineChart, AreaChart, ScatterChart, PieChart, RadarChart,\n    Line, Area, Bar, Scatter, Treemap, Pie, Cell, Radar, PolarGrid,\n    PolarAngleAxis, PolarRadiusAxis, RadialBarChart, RadialBar, XAxis, YAxis,\n    CartesianGrid, Tooltip, Legend, Brush} from 'recharts';\nimport { GridList, GridTile} from 'material-ui/GridList';\nimport { Checkbox, Dropdown } from 'semantic-ui-react';\nimport '../../../css/Chart.css'\n\nclass Plots extends React.Component {\n\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        identifier: PropTypes.string.isRequired,\n        onSelectCell: PropTypes.func\n    }\n\n    constructor(props){\n        super(props);\n        const dataset = props.dataset;\n        // Set grouped to true if only one data series is given (in this case\n        // the grouped checkbox is hidden) and grouped layout should be\n        // default.\n        this.state = {\n            chartType: dataset.chart.type,\n            grouped: (dataset.chart.grouped || (dataset.series.length === 1)),\n            width: 400\n        };\n        // Get list of series labels and set global color scale\n        this.labels = [];\n        for (let i = 0; i < dataset.series.length; i++) {\n            this.labels.push(dataset.series[i].label)\n        }\n        this.listColors = [\n            \"#1f77b4\", \"#ff7f0e\", \"#2ca02c\",\n            \"#d62728\", \"#c5b0d5\", \"#c49c94\",\n            \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\",\n            \"#9edae5\", \"#aec7e8\", \"#ffbb78\", \"#d62728\",\n            \"#9467bd\", \"#8c564b\", \"#e377c2\",\n            \"#7f7f7f\", \"#bcbd22\", \"#17becf\"\n        ];\n        this.colorScale = scaleOrdinal()\n            .domain(this.labels)\n            .range(this.listColors);\n    }\n    /**\n     * Add event handler to keep track of the container width.\n     */\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n    /**\n     * Keep track of the elements width to adjust charts on resize.\n     */\n    handleResize = (e) => {\n        // This seems to fail in some situations.\n        try {\n            let elem = ReactDOM.findDOMNode(this);\n            this.setState({\n                width: elem.offsetWidth\n            });\n        } catch (err) {\n        }\n    }\n    /**\n     * Handle selection of a chart type.\n     */\n    handleSelectChart = (event, { value }) => {\n        this.setState({'chartType': value});\n    }\n    /**\n     * Handle change of the grouped checkbox.\n     */\n    handleToggleGrouped = (e, { checked }) => {\n        this.setState({'grouped': checked});\n    }\n\n    /*\n     * Load data on the format:\n     *   data = [\n     *     { label: 'somethingA', values: [{x: 'SomethingA', y: 10}, {x: 'SomethingB', y: 4}, {x: 'SomethingC', y: 3}] },\n     *     { label: 'somethingB', values: [{x: 'SomethingA', y: 6}, {x: 'SomethingB', y: 8}, {x: 'SomethingC', y: 5}]  }\n     *  ];\n     *\n     * The format of the dataset object is expected to be:\n     * {\n     *     \"series\": [{\n     *         \"label\": \"string\",\n     *         \"data\": [0]\n     *     }],\n     *     \"xAxis\": {\n     *         \"data\": [0]\n     *    }\n     * }\n     */\n\n    fetchData(dataset) {\n        // Check if a data series for x-axis is given. If not we use 1-n as\n        // x-axis labels.\n        let xAxisName = 'x';\n        let xAxis = null;\n        if (dataset.xAxis !== undefined) {\n            xAxis = dataset.xAxis.data;\n        } else {\n            xAxis = [];\n            for (let i = 0; i < dataset.series[0].data.length; i++) {\n                xAxis.push(i + 1);\n            }\n        }\n        let values = [];\n        let global_data = {};\n        //let total_data = [];\n        let columnsNames = [];\n        columnsNames.push(xAxisName);\n        for (let j=0; j<dataset.series.length; j++) {\n          columnsNames.push(dataset.series[j].label.toString());\n        }\n        for (let i=0; i<xAxis.length; i++){\n            let data_i = {};\n            data_i[xAxisName] = xAxis[i];\n            for (let j=0; j<dataset.series.length; j++) {\n                const series = dataset.series[j];\n                let nameSerie = series.label.toString();\n                data_i[nameSerie] = series.data[i];\n                data_i[nameSerie+'_caveat'] = series.caveats ? series.caveats[i] : true;\n            }\n            values.push(data_i);\n            //\n        }\n        let sort_values = values.sort(function(a, b){return a.x - b.x});\n        //total_data = sort_values;\n        global_data['labels'] = columnsNames;\n        global_data['values'] = sort_values; //values;\n        return global_data;\n    }\n\n    /**\n     * Render a single chart or a GridList of charts (if grouped is true).\n     */\n    selectedReCharts = (nameChart, data_temp, grouped, width) => {\n        // Get function to plot chart of specified type. The result is undefined\n        // if the chartName is unknown.\n        const data = data_temp.values;\n        const labels = data_temp.labels; // array\n        const chart = this.selectedReChart(nameChart, labels, data);\n        if (chart === undefined) {\n            return null;\n        }\n        // grouped =false;\n        if (grouped) {\n            // If grouped we just plot one chart with the all the data series\n            return chart(data, width, grouped, '');\n        } else {\n            // Display a flex grids of individual charts for each data series.\n            const charts = [];\n            for (let i=1; i<data_temp.labels.length; i++) { //ignore xAxis\n                let yAxisName = data_temp.labels[i];\n                let data_ = data;\n                //data_.push(data[i]);\n                charts.push(<GridTile key={i}>{chart(data_, 400, grouped, yAxisName)}</GridTile>);\n            }\n            return <GridList\n                    cellHeight={this.props.gridList_cellHeight}\n                    cols={Math.floor(width / 400)}\n                    style={{width: {width}, height: this.props.gridList_height, overflowY: this.props.gridLis_overflowY,}}>\n                    {charts}\n                </GridList>;\n        }\n    }\n    \n    caveatDotTemplate = (props, normalPoint) => {\n    \t  const {\n    \t\t    cx, cy, payload, dataKey\n    \t\t  } = props;\n\n          console.log(props)\n          console.log(\"Caveat? \" + payload[dataKey + \"_caveat\"] + \" -> @ \" + cx + \", \" + cy)\n    \t\t  if (payload[dataKey + \"_caveat\"] !== false) {\n    \t\t    return (\n    \t\t      /*<svg x={cx - 2} y={cy - 2} width={4} height={4} fill=\"red\" viewBox=\"0 0 4 4\">\n    \t\t        <path d=\"M 2 2 m -2 0 a 2 2 0 1 0 4 0 a 2 2 0 1 0 -4 0\"/> \n    \t\t      </svg>*/\n\t\t    \t  <svg x={cx - 10} y={cy - 10} width={18} height={18} fill=\"red\" viewBox=\"0 0 18 18\">\n\t\t            <text x={0} y={0} dy={18} fontSize={16} >{\"*\"}</text>\n\t\t          </svg>\n    \t\t    );\n    \t\t  } else { \n            return normalPoint(props, cx, cy)\n          }\n    \t\t};\n\n    caveatDot = (props) => { return this.caveatDotTemplate(props, (props, cx, cy) => {\n      return (\n        <svg x={cx} y={cy} width={0} height={0} fill=\"green\" viewBox=\"0 0 0 0\">\n        </svg>\n      );\n    })}\n\n    \t\t\n    caveatLabels = (labels, idx) => { \n    \treturn (d) => !d[labels[idx] + '_caveat']\n    }\n    /**\n     * Return a function that takes a list of data series and width as parameter\n     * and renders a chart of the type that is specified in chartName.\n     */\n    selectedReChart = (nameChart, labels, data) => {\n        var list = [];\n        var i=0;\n        if (nameChart === 'Area Chart') { // area chart\n            for (i=1; i<labels.length; i++) {\n              list.push(<Area key={'id_'+i} name={labels[i]} type=\"monotone\" dataKey={labels[i]} stackId=\"1\" connectNulls={false} stroke={this.listColors[i-1]} fillOpacity={1} fill={this.listColors[i-1]} />);\n            }\n            return (data, width, grouped, yAxisName) => (\n              <AreaChart width={width} height={400} data={data} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n                <XAxis dataKey=\"x\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend verticalAlign=\"top\" height={36} />\n                {\n                  grouped ?\n                  list\n                  : <Area type=\"monotone\" dataKey={yAxisName} stroke={this.listColors[0]} fillOpacity={1} fill={this.listColors[0]} />\n                }\n                <Brush />\n              </AreaChart>\n            );\n        } else if (nameChart==='Bar Chart') { // bar chart\n          for (i=1; i<labels.length; i++) {\n            list.push(<Bar key={'id_'+i} name={labels[i]} dataKey={labels[i]} fill={this.listColors[i-1]} label={<CaveatLabel caveats={data.map(this.caveatLabels(labels,i))} /> } /> );\n          }\n          return (data, width, grouped, yAxisName) => (\n            <BarChart width={width} height={400} data={data} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"x\" />\n              <YAxis />\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n              {\n                grouped ?\n                list\n                : <Bar id='id_' dataKey={yAxisName} fill={this.listColors[0]} label={<CaveatLabel caveats={data.map(d => !d[yAxisName + '_caveat'])} />} />\n              }\n              <Brush />\n            </BarChart>\n          );\n        } else if (nameChart==='Line Chart with Points' || nameChart === 'Line Chart' || nameChart==='Line Chart without Points') { // line chart\n          var dot = (nameChart === 'Line Chart without Points') ?\n                      this.caveatDot :\n                      (props) => { return this.caveatDotTemplate(props, (props, cx, cy) => {\n                        // console.log(props)\n                        return (\n                          <svg x={cx-9} y={cy-9} width={18} height={18} viewBox=\"0 0 18 18\">\n                            <circle cx={9} cy={9} r={props.r} fill={props.fill} stroke-width={props.strokeWidth} stroke={props.stroke} />\n                          </svg>\n                        );\n                      })}\n                      // (props) => { return this.caveatDotTemplate(props, (props, cx, cy) => {\n                      //   console.log(\"Point: [\"+cx+\", \"+cy+\"]\");\n                      //   return (\n                      //   );\n                      // }) }\n          for (i=1; i<labels.length; i++) {\n            list.push(<Line key={'id_'+i} type=\"monotone\" name={labels[i]} dataKey={labels[i]} stroke={this.listColors[i-1]} dot={dot} />);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <LineChart width={width} height={400} data={data} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"x\" />\n              <YAxis />\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n              {\n                grouped ?\n                list\n                : <Line type=\"monotone\" name={yAxisName} dataKey={yAxisName} stroke={this.listColors[0]} dot={dot} />\n              }\n              <Brush />\n            </LineChart>\n          );\n        } else if (nameChart==='Scatter Plot') { // scatter plot\n          var dataScatterChart = []; // Creating array of object [{'x': , 'y':}, {'x': , 'y':}, ..., {'x': , 'y':}]\n          for (var index=1; index<labels.length; index++) {\n            var dataTemp = [];\n            for (i = 0; i < data.length; i++){\n                var instanceSP = { 'x':data[i][\"x\"], 'y':data[i][labels[index]] };\n                dataTemp.push(instanceSP);\n            }\n            dataScatterChart.push(dataTemp);\n          }\n          // Creating a scatter plot for each sub dataset\n          for (i=1; i<labels.length; i++) {\n            list.push(<Scatter key={'id_'+i} name={labels[i]} data={dataScatterChart[i-1]} fill={this.listColors[i-1]} /> );\n          }\n          return (data, width, grouped, yAxisName) => (\n            <ScatterChart width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis type=\"number\" dataKey={'x'} />\n      \t      <YAxis type=\"number\" dataKey={'y'} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Legend verticalAlign=\"top\" height={36} />\n              {\n                grouped ?\n                list\n                : <Scatter name={yAxisName} data={dataScatterChart[labels.indexOf(yAxisName)-1]} fill={this.listColors[0]} />\n              }\n            </ScatterChart>\n          );\n        } else if (nameChart==='Pie Chart') { // Pie Chart\n          for (i=1; i<labels.length; i++) {\n            list.push(<Pie key={'id_'+i} nameKey='x' data={data} dataKey={labels[i]} cx=\"50%\" cy=\"50%\" innerRadius={0} fill=\"#8884d8\" label >\n                      {\n                        data.map((entry, index) => (\n                          <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                        ))\n                      }\n                      </Pie>);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <PieChart width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              {\n                grouped ?\n                list\n                : <Pie nameKey='x' data={data} dataKey={yAxisName} cx=\"50%\" cy=\"50%\" innerRadius={0} fill=\"#8884d8\" label >\n                    {\n                      data.map((entry, index) => (\n                        <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                      ))\n                    }\n                  </Pie>\n              }\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n            </PieChart>\n          );\n        } else if (nameChart==='Donut Chart') { // Donut Chart\n          for (i=1; i<labels.length; i++) {\n            list.push(<Pie key={'id_'+i} nameKey='x' data={data} dataKey={labels[i]} cx=\"50%\" cy=\"50%\" innerRadius={\"20%\"} outerRadius={80}  fill=\"#8884d8\" label >\n                      {\n                        data.map((entry, index) => (\n                          <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                        ))\n                      }\n                      </Pie>);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <PieChart width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              {\n                grouped ?\n                list\n                : <Pie nameKey='x' data={data} dataKey={yAxisName} cx=\"50%\" cy=\"50%\" innerRadius={\"20%\"} outerRadius={80} fill=\"#8884d8\" label >\n                    {\n                      data.map((entry, index) => (\n                        <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                      ))\n                    }\n                  </Pie>\n              }\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n            </PieChart>\n          );\n        }else if (nameChart==='Radar Chart') { // Radar Chart\n          var dataRadarChart = []; // Adding unique id for each record\n            for (i = 0; i < data.length; i++){\n              var instanceRC = {};\n              instanceRC['id']='id'+i+'_'+data[i][\"x\"];\n              for (var indexRC=0; indexRC<labels.length; indexRC++) {\n                  instanceRC[labels[indexRC]]=data[i][labels[indexRC]];\n              }\n              dataRadarChart.push(instanceRC);\n            }\n          for (i=1; i<labels.length; i++) {\n            list.push(<Radar key={'id_'+i} name={labels[i]} dataKey={labels[i]} stroke={this.listColors[i-1]} fill={this.listColors[i-1]} fillOpacity={0.6} />);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <RadarChart outerRadius={90} width={400} height={400} data={dataRadarChart} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <PolarGrid />\n              <PolarAngleAxis dataKey=\"id\" />\n              <PolarRadiusAxis/>\n              {\n                grouped ?\n                list\n                :\n                <Radar name={yAxisName} dataKey={yAxisName} stroke={this.listColors[0]} fill={this.listColors[0]} fillOpacity={0.6} />\n              }\n              <Tooltip/>\n              <Legend onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} />\n            </RadarChart>\n          );\n        } else if (nameChart==='Radial Bar Chart') { // Radial Bar Chart\n          return (data, width, grouped, yAxisName) => (\n            // add a column 'name' in the data.\n            <RadialBarChart width={width} height={400} data={data} cx={150} cy={150} innerRadius={20} outerRadius={140} barSize={10}>\n              <RadialBar minAngle={15} label={{ position: 'insideStart', fill: '#fff' }} background clockWise={true} dataKey={yAxisName}/>\n              <Legend iconSize={10} width={120} height={140} layout='vertical' verticalAlign='middle' wrapperStyle={{top: 0, left: 350, lineHeight: '24px'}} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            </RadialBarChart>\n          );\n        } else if (nameChart==='Treemap') { // Treemap\n          return (data, width, grouped, yAxisName) => (\n            <Treemap width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}\n              data={data}\n              dataKey={yAxisName}\n              ratio={4 / 3}\n              stroke=\"#fff\"\n              fill=\"#8884d8\"\n            >\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            </Treemap>\n          );\n        }\n    }\n    render() {\n\n        const { dataset, identifier, onSelectCell } = this.props;\n        // Return null if the dataset is empty\n        if (dataset.series.length === 0) {\n            return null;\n        }\n        const { chartType, grouped, width } = this.state;\n\n        //var data = this.loadData(dataset);\n        var data = this.fetchData(dataset);\n        //var chart = this.selectedCharts(chartType, data, grouped, width);\n        var chart = this.selectedReCharts(chartType, data, grouped, width);\n\n        const options = [];\n        for (let i = 0; i < this.props.charts.length; i++) {\n          options.push({\n              key: i,\n              text: this.props.charts[i],\n              value: this.props.charts[i]\n          })\n        }\n        // Show a 'grouped' checkbox if the dataset has more than one data\n        // series.\n        let groupedCheckbox = null;\n        if (dataset.series.length > 1) {\n            groupedCheckbox = (\n                <td className='plot-form-check'>\n                    <Checkbox\n                        checked={grouped}\n                        label='Grouped'\n                        onChange={this.handleToggleGrouped}\n                    />\n                </td>\n            );\n        }\n        return (\n            <div>\n                <div className='plot-menu'>\n                    <table className='plot-form-table'><tbody><tr>\n                        <td className='plot-form-label' onClick={onSelectCell}>{\"Charts\"}</td>\n                        <td className='plot-form-dropdown'>\n                            <Dropdown\n                                text={chartType}\n                                selection\n                                fluid\n                                scrolling\n                                options={options}\n                                onChange={this.handleSelectChart}\n                            />\n                        </td>\n                        { groupedCheckbox }\n                    </tr></tbody></table>\n                </div>\n                  <div id={identifier} className='plot-view' onClick={onSelectCell}>\n                  <div>\n                      {chart}\n                  </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass CaveatLabel extends PureComponent {\n\t  render() {\n\t    const {\n\t      x, y, caveats, index,\n\t    } = this.props;\n        if(caveats[index] === false){\n\t\t    return (\n\t\t\t\t<svg x={x - 6} y={y - 6} width={14} height={14} fill=\"red\" viewBox=\"0 0 14 14\">\n\t\t          <text x={0} y={0} dy={14} fontSize={16} >{\"*\"}</text>\n\t\t        </svg>\n\t\t    );\n        }\n        else{\n        \treturn <text></text>;\n        }\n\t  }\n\t}\n\nPlots.defaultProps = {\n    x:0,\n    y:0,\n    gridList_cellHeight:400,\n    gridList_width:1000,\n    gridList_height:450,\n    gridLis_overflowY:'auto',\n    colorText:'black',\n    charts : [\n        \"Area Chart\",\n        \"Bar Chart\",\n        \"Line Chart with Points\",\n        \"Line Chart without Points\",\n        \"Scatter Plot\",\n        \"Pie Chart\",\n        \"Donut Chart\",\n        \"Radar Chart\",\n        \"Radial Bar Chart\",\n        \"Treemap\"\n    ],\n};\n/*<p>Got data for {this.props.rows.length} row(s) and {this.props.schema.series.length} data series</p>*/\n\n\nexport default Plots\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Plots from './Plots';\nimport '../../../css/Chart.css';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { Button, Icon } from 'semantic-ui-react';\nimport '../../../css/App.css';\nimport '../../../css/Chart.css';\nimport '../../../css/Notebook.css';\n\n\n/*\n * Plot a dataset chart for given data.\n */\n\nclass DatasetChart extends React.Component {\n    /*\n     * The format of the given dataset object is as follows:\n     *\n     * \"series\": {\n     *   \"label\": \"string\",\n     *   \"data\": [0]\n     *  },\n     * \"xAxis\": {\n     *   \"data\": [0]\n     * },\n     * \"chart\": {\n     *   \"type\": \"string\",\n     *   \"grouped\": true,\n     * }\n }\n     */\n\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        identifier: PropTypes.string.isRequired,\n        onSelectCell: PropTypes.func\n    }\n\n    /**\n     * Export chart as a PDF. Generating a PDF file from react component which contains the chart.\n     */\n    generatePDF = () => {\n        const { identifier } = this.props\n        const plotName = 'plot_' + identifier\n        const input = document.getElementById(plotName);\n        html2canvas(input)\n          .then((canvas) => {\n            const imgData = canvas.toDataURL('image/png');\n            const pdf = new jsPDF({\n              orientation: 'landscape',\n              unit: 'in'\n            });\n            pdf.addImage(imgData, 'JPEG', 0, 0);\n            pdf.save(plotName + \".pdf\");\n          })\n        ;\n    }\n    render() {\n        const { dataset, identifier, onSelectCell } = this.props\n        const plotName = 'plot_' + identifier\n        if (dataset !== undefined) {\n            return (\n                <div>\n                    <div className='output-header' onClick={onSelectCell}>\n                        <span className='header-name'>{identifier}</span>\n                    </div>\n                    <div className='plot'>\n                        <Plots\n                            key={identifier}\n                            identifier={plotName}\n                            dataset={dataset}\n                            onSelectCell={onSelectCell}\n                        />\n                    </div>\n                    <div className='chart-download-btn'>\n                        <Button size='small' color='green' onClick={this.generatePDF}>\n                            <Icon name='download' />\n                            Download Chart\n                        </Button>\n                    </div>\n                </div>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default DatasetChart\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { KEY, MOVE, valueOrDefault } from '../../../util/App';\nimport '../../../../css/Spreadsheet.css'\n\n\nconst CTRL_ID = 'spreadsheet_input_ctrl'\n\n\nclass GridInput extends React.Component {\n    static propTypes = {\n        cellValue: PropTypes.oneOfType([\n             PropTypes.string,\n             PropTypes.number\n         ]),\n         onMove: PropTypes.func.isRequired,\n         onUpdate: PropTypes.func.isRequired\n    };\n    constructor(props) {\n        super(props);\n        // Keep the current value in the local state.\n        const { cellValue } = props;\n        this.state = { value: valueOrDefault(cellValue, '') };\n    }\n    componentDidMount() {\n        const { value } = this.state;\n        this.setFocus(value);\n    }\n\n    onKeyDown = (event) => {\n        const { cellValue, onMove, onUpdate } = this.props;\n        const {ctrlKey, keyCode, shiftKey} = event;\n        if (keyCode === KEY.ENTER) {\n            event.preventDefault();\n            onMove(MOVE.DOWN);\n        } else if (keyCode === KEY.TAB) {\n            event.preventDefault();\n            if (shiftKey) {\n                onMove(MOVE.LEFT);\n            } else {\n                onMove(MOVE.RIGHT);\n            }\n        } else if (keyCode === KEY.UP) {\n            event.preventDefault();\n            onMove(MOVE.UP);\n        } else if (keyCode === KEY.DOWN) {\n            event.preventDefault();\n            onMove(MOVE.DOWN);\n        } else if (keyCode === KEY.ESC) {\n            event.preventDefault();\n            const defaultValue = valueOrDefault(cellValue, '');\n            this.setState(\n                { value: defaultValue },\n                () => (this.setFocus(defaultValue))\n            );\n            onUpdate(defaultValue);\n        } else if ((ctrlKey) && (keyCode === KEY.NULL)) {\n            event.preventDefault();\n            this.setState({ value: '', isNull: true });\n            onUpdate(null);\n        }\n    }\n    /**\n     * Update the local state when value in text control changes.\n     */\n    onChange = (event) => {\n        const { onUpdate } = this.props;\n        const value = event.target.value;\n        this.setState({ value });\n        onUpdate(value);\n    }\n    /**\n     * Set focus in text control and select he full value.\n     */\n    setFocus(value) {\n        const el = document.getElementById(CTRL_ID);\n        el.focus();\n        // At the moment we select the full value. Could set the cursor to the\n        // end alternatively.\n        el.setSelectionRange(0, value.toString().length);\n    }\n    /**\n     * Show a text control to edit the cell value.\n     */\n    render() {\n        const { value } = this.state;\n        return (\n            <input\n                className='spreadsheet-input'\n                id={CTRL_ID}\n                value={value}\n                onKeyDown={this.onKeyDown}\n                onChange={this.onChange}\n            />\n        );\n    }\n}\n\nexport default GridInput;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport GridInput from './GridInput';\nimport { Icon } from 'semantic-ui-react';\n\nclass GridCell extends React.Component {\n    static propTypes = {\n        column: PropTypes.object.isRequired,\n        columnIndex: PropTypes.number.isRequired,\n        hasAnnotations: PropTypes.bool.isRequired,\n        isActive: PropTypes.bool.isRequired,\n        isUpdating: PropTypes.bool.isRequired,\n        rowId: PropTypes.string.isRequired,\n        rowIndex: PropTypes.number,\n        value: PropTypes.oneOfType([\n             PropTypes.string,\n             PropTypes.number,\n             PropTypes.bool\n         ]),\n         onClick: PropTypes.func,\n         onMove: PropTypes.func,\n         onUpdate: PropTypes.func,\n         onFetchAnnotations: PropTypes.func\n    }\n    /**\n     * Submit changes to the cell value if a onUpdate handler is given.\n     */\n    handleChange = (value) => {\n        const { onUpdate } = this.props;\n        if (onUpdate != null) {\n            onUpdate(value);\n        }\n    }\n    /**\n     * Cell click handler. Check if a onClick handler was provided from the\n     * parent. Call it with the cell id and coordinates.\n     */\n    handleClick = () => {\n        const { column, columnIndex, rowId, rowIndex, onClick } = this.props;\n        if (onClick != null) {\n            onClick(column.id, rowId, columnIndex, rowIndex);\n        }\n    }\n    /**\n     * Active cell move handler. Call the provided handler (if given).\n     */\n    handleMove = (direction) => {\n        const { onMove } = this.props;\n        if (onMove != null) {\n            onMove(direction);\n        }\n    }\n    /**\n     * Cell info click handler. Check if a onFetchAnnotations handler was provided from the\n     * parent. Call it with the cell id and coordinates.\n     */\n    handleFetchAnnotations = () => {\n        const { columnIndex, rowId, onFetchAnnotations } = this.props;\n        if (onFetchAnnotations != null) {\n        \tonFetchAnnotations(columnIndex, rowId);\n        }\n    }\n    render() {\n        const { hasAnnotations, isActive, isUpdating, value, onUpdate } = this.props;\n        // The cell style depends on whether the column is active or not.\n        let cellCss = 'grid-cell';\n        let annoIcon = null;\n        if (isActive) {\n            cellCss += ' active';\n        } else if (isUpdating) {\n            cellCss += ' updating';\n        }\n        if (hasAnnotations) {\n            cellCss += ' highlight';\n            annoIcon = ( <Icon\n\t            className='icon-button annotations-icon'\n\t            title='Caveats'\n\t            name='question circle outline'\n\t            onClick={this.handleFetchAnnotations}\n\t        />);\n        }\n        // The cell value depends on whether the cell is active and updatable\n        let cellValue = null;\n        // Get a string representation of the cell value. The value could be a\n        // number, boolean, string or null.\n        let strValue = null;\n        if (value == null) {\n            strValue = '';\n        } else {\n            strValue = value.toString();\n        }\n        if ((isActive) && (onUpdate != null)) {\n            cellValue = (\n                <GridInput\n                    cellValue={strValue}\n                    onMove={this.handleMove}\n                    onUpdate={this.handleChange}\n                />\n            );\n        } else {\n            if (value == null) {\n                cellCss += '  is-null';\n            }\n            cellValue = (<div className='cell-value' onClick={this.handleClick}>{strValue}</div>);\n        }\n        return (\n            <td className={cellCss} >\n                {annoIcon}\n                {cellValue}\n            </td>\n        );\n    }\n}\n\nGridCell.defaultProps = {\n    isActive: false,\n    isUpdating: false\n}\n\nexport default GridCell;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\nimport { VIZUAL } from '../../../util/Vizual';\n\n/**\n * Dropdown menu for spreadsheet rows. Calls respective spreadsheet methods\n * when menu items are clicked.\n */\n\nclass RowDropDown extends React.Component {\n    static propTypes = {\n        disabled: PropTypes.bool.isRequired,\n        rowId: PropTypes.number.isRequired,\n        rowIndex: PropTypes.number.isRequired,\n        onAction: PropTypes.func.isRequired\n    }\n    /**\n     * Call spreadsheet delete row method.\n     */\n    deleteRow = () => {\n        const { rowId, onAction } = this.props\n        onAction(VIZUAL.DELETE_ROW, rowId);\n    }\n    /**\n     * Call spreadsheet insert row method.\n     */\n    insertRowAbove = () => {\n        const { rowIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_ROW, rowIndex);\n    }\n    /**\n     * Call spreadsheet insert row method.\n     */\n    insertRowBelow = () => {\n        const { rowIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_ROW, (rowIndex + 1));\n    }\n    /**\n     * Call spreadsheet move row method.\n     */\n    moveRow = () => {\n        const { rowId, onAction } = this.props\n        onAction(VIZUAL.MOVE_ROW, rowId);\n    }\n    render() {\n        // rowId = the unique, global identifier for the row\n        // rowIndex = the position of the row in the dataset\n        const { disabled } = this.props;\n        return (\n            <Dropdown disabled={disabled} floating>\n                <Dropdown.Menu>\n                    <Dropdown.Item\n                        icon='arrow up'\n                        content='Insert row above'\n                        onClick={this.insertRowAbove}\n                    />\n                    <Dropdown.Item\n                        icon='arrow down'\n                        content='Insert row below'\n                        onClick={this.insertRowBelow}\n                    />\n                    <Dropdown.Item\n                        icon='trash'\n                        content='Delete row'\n                        onClick={this.deleteRow}\n                    />\n                    <Dropdown.Item\n                        icon='move'\n                        content='Move row'\n                        onClick={this.moveRow}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default RowDropDown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport RowDropDown from '../menu/RowDropDown';\nimport '../../../../css/Spreadsheet.css';\nimport { Droppable } from 'react-drag-and-drop'\nimport { Icon } from 'semantic-ui-react';\nimport {\n    VIZUAL\n} from '../../../util/Vizual';\n\n/**\n * Left-hand column in the grid that contains the row index and context menu.\n */\nclass RowIndexCell extends React.Component {\n    static propTypes = {\n        disabled: PropTypes.bool.isRequired,\n        rowIndex: PropTypes.number.isRequired,\n        rowId: PropTypes.string.isRequired,\n        value: PropTypes.oneOfType([\n             PropTypes.string,\n             PropTypes.number\n         ]),\n         onAction: PropTypes.func,\n         onClick: PropTypes.func,\n         onMoveAction: PropTypes.func,\n         isSpreadsheet: PropTypes.bool\n    }\n    \n    handleMoveDropBefore = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_ROW,  parseInt(dropData['row-index-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    handleMoveDropAfter = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_ROW,  parseInt(dropData['row-index-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    /**\n     * Render grod column as Html table header cell.\n     */\n    render() {\n        const { disabled, rowIndex, rowId, value, onAction, onClick, isSpreadsheet } = this.props;\n        // Show a dropdown menu if onAction method is provided\n        let dropdown = null;\n        let dropTargetType = 'none';\n        let dropTargetBefore = null;\n        let dropTargetAfter = null;\n        \n        if (onAction != null) {\n            dropdown = (\n                <RowDropDown\n                    disabled={disabled}\n                    key={rowId}\n                    rowId={rowId}\n                    rowIndex={rowIndex}\n                    onAction={onAction}\n                />\n            );\n        }\n        if ((rowIndex !== -1) && (isSpreadsheet)){\n        \tdropTargetType = 'row-index-cell';\n        \tdropTargetBefore = (\n        \t\t<Droppable\n \t\t            types={[dropTargetType]}\n        \t\t    data={rowIndex}\n        \t\t    onDrop={this.handleMoveDropBefore}>\n \t\t            <div className=\"row-drop-before\" ><Icon\n \t\t\t            className='icon-button row-index-drop-target'\n \t\t\t            title='<- Move Row Drop'\n \t\t\t            name='bullseye'\n \t\t\t        /></div>\n                 </Droppable>\n        \t)\n        \tdropTargetAfter = (\n        \t\t<Droppable\n \t\t            types={[dropTargetType]}\n        \t\t    data={rowIndex}\n    \t\t        onDrop={this.handleMoveDropAfter}>\n \t\t            <div className=\"row-drop-after\" ><Icon\n \t\t\t            className='icon-button row-index-drop-target'\n \t\t\t            title='Move Row Drop ->'\n \t\t\t            name='bullseye'\n \t\t\t        /></div>\n                 </Droppable>\n        \t)\n        }\n        return (\n            <td className='grid-row-index' onClick={onClick}>\n              <div >\n                {dropTargetBefore}\n\t            <div className=\"row-index-content\" >\n\t\t            { value }\n\t            </div>\n                { dropdown }\n                {dropTargetAfter}\n              </div>\n            </td>\n        );\n    }\n}\n\nRowIndexCell.defaultProps = {\n    disabled: false,\n    rowIndex: -1\n}\n\n\nexport default RowIndexCell;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Header, Button, Popup, Grid, Dropdown, Icon, GridColumn } from 'semantic-ui-react'\nimport { HATEOAS_DATASET_DOWNLOAD } from '../../../util/HATEOAS'\n\n/**\n * Dropdown menu for spreadsheets in the content header. Includes items to\n * download the dataset and to copy the dataset URL to the clipboard.\n */\n\nclass SpreadsheetDropDown extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        moduleId: PropTypes.string.isRequired,\n        downloadLimit: PropTypes.number.isRequired,\n        onRecommendAction: PropTypes.func\n    }\n\n    /**\n     * Copy dataset download URL to the clipboard.\n     */\n    handleCopy = () => {\n        const { dataset } = this.props\n        const downloadUrl = dataset.links.get(HATEOAS_DATASET_DOWNLOAD)\n        const textField = document.createElement('textarea');\n        textField.innerText = downloadUrl;\n        document.body.appendChild(textField);\n        textField.select();\n        document.execCommand('copy');\n        textField.remove();\n    }\n    /**\n     * Open a new window with the dataset URL to download the data in CSV\n     * format if row count less than the allowed value. If not, recommend the UNLOAD DATASET cell\n     */\n    handleDownload = () => {\n        const { dataset, downloadLimit } = this.props;\n        if (dataset.rowCount <= downloadLimit){\n            const downloadUrl = dataset.links.get(HATEOAS_DATASET_DOWNLOAD)\n            window.open(downloadUrl);\n        }\n    };\n    /**\n     * Handles the edit spreadsheet selection\n     */\n    handleEditSpreadsheet = () => {\n        const { dataset, onEditSpreadsheet, moduleId } = this.props;\n        onEditSpreadsheet(dataset, moduleId)\n    }\n    render() {\n        const { dataset, downloadLimit, onRecommendAction } = this.props;\n        let downloadDropdown = <Popup trigger={<Dropdown.Item\n            key={'download'}\n            icon='download'\n            text='Download File'\n            title='Download dataset as CSV file'\n            onClick={this.handleDownload}\n        />}\n                                      on='click'\n                                      disabled = {dataset.rowCount <= downloadLimit}\n                                      hoverable\n                                      basic>\n            <Grid centered>\n                <GridColumn textAlign='center'>\n                    <Header as='h4' icon textAlign='center'>\n                        <Icon name='times circle' />\n                    </Header>\n                    <p>\n                        {'The dataset exceeds the allowed limit of ' + downloadLimit + ' rows. It is recommended to export large datasets using the Unload Cell.'}\n                    </p>\n                    <Button color='blue' content='Unload' onClick={() => onRecommendAction('data','unload')} />\n                </GridColumn>\n            </Grid>\n        </Popup>;\n\n        return <React.Fragment>\n            <Dropdown icon='download' title='Download dataset'>\n                <Dropdown.Menu>\n                    {downloadDropdown}\n                    <Dropdown.Item\n                        key={'copy-link'}\n                        icon='linkify'\n                        text='Copy URL to Clipboard'\n                        title='Copy shareable dataset URL to clipboard'\n                        onClick={this.handleCopy}\n                    />\n                    <Dropdown.Item\n                        key={'edit'}\n                        icon='edit'\n                        text='Edit as Spreadsheet'\n                        title='Open spreadsheet view to edit the dataset'\n                        onClick={this.handleEditSpreadsheet}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        </React.Fragment>\n    }\n}\n\nexport default SpreadsheetDropDown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon } from 'semantic-ui-react'\nimport '../../../css/Scrollbar.css'\n\n\n/**\n * Buttons on the scrollbar.\n */\nclass ScrollButton extends React.Component {\n    static propTypes = {\n        enabled: PropTypes.bool.isRequired,\n        icon: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired\n    }\n    render() {\n        const { enabled, icon, title } = this.props;\n        // The button style depends on whether the button is enabled or\n        // disabled\n        let css = 'scroll-icon';\n        let onClick = this.props.onClick;\n        if (!enabled) {\n            css += '-disabled';\n            onClick = null;\n        }\n        return (\n            <div className={css}>\n                <Icon\n                    disabled={!enabled}\n                    name={icon}\n                    onClick={onClick}\n                    size='small'\n                    title={title}\n                />\n            </div>\n        );\n    }\n}\n\n/**\n * Vertical scrollbar for spreadsheets. By now this is experimental. Allows to\n * navigate to (i) the beginning or the end of the spreadsheet, (ii) the next\n * or previous page, (iii) the next or previous row, or (iv) to a given row.\n *\n * At this point the scrollbar is rendered as a horizontal group of clickable\n * icons.\n */\nclass SpreadsheetScrollbar extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        onNavigate: PropTypes.func.isRequired,\n        cellLimit: PropTypes.number.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { dataset, cellLimit } = props;\n        this.state = {\n            limit: cellLimit,\n            maxValue: Math.max(0, dataset.rowCount - cellLimit)\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { dataset, cellLimit } = this.props;\n        const { limit, maxValue } = this.state;\n        const m = Math.max(0, dataset.rowCount - cellLimit);\n        if ((limit !== cellLimit || (maxValue !== m))){\n            this.setState({\n                limit: cellLimit,\n                maxValue: Math.max(0, dataset.rowCount - cellLimit)\n            })\n        }\n    }\n    /**\n     * Scroll to the beginning of the dataset.\n     */\n    handleNavigateFirstPage = () => {\n        const { dataset, onNavigate } = this.props;\n        onNavigate(dataset, 0, this.state.limit);\n    }\n    /**\n     * Scroll to the end of the dataset.\n     */\n    handleNavigateLastPage = () => {\n        const { dataset, onNavigate } = this.props;\n        const { maxValue, limit } = this.state;\n        onNavigate(dataset, maxValue, limit);\n    }\n    /**\n     * Scroll one page down.\n     */\n    handleNavigateNextPage = () => {\n        const { dataset, onNavigate } = this.props;\n        const { maxValue, limit } = this.state;\n        const offset = dataset.offset;\n        onNavigate(dataset, Math.min(maxValue, offset + limit), limit)\n    }\n    /**\n     * Scroll one row down.\n     */\n    handleNavigateNextRow = () => {\n        const { dataset, onNavigate } = this.props;\n        const { maxValue, limit } = this.state;\n        const offset = dataset.offset;\n        onNavigate(dataset, Math.min(maxValue, offset + 1), limit);\n    }\n    /**\n     * Scroll one page up.\n     */\n    handleNavigatePreviousPage = () => {\n        const { dataset, onNavigate } = this.props;\n        const offset = dataset.offset;\n        const limit = this.state.limit;\n        onNavigate(dataset, Math.max(0, offset - limit), limit);\n    }\n    /**\n     * Scroll one row up.\n     */\n    handleNavigatePreviousRow = () => {\n        const { dataset, onNavigate } = this.props;\n        const offset = dataset.offset;\n        onNavigate(dataset, Math.max(0, offset - 1), this.state.limit);\n    }\n    render() {\n        const { dataset } = this.props;\n        const value = dataset.offset;\n        const hasPrevious = (value !== 0);\n        const hasNext = (value < this.state.maxValue);\n        let scrollbar = null;\n        if (hasPrevious || hasNext) {\n            scrollbar = (\n                <div>\n                    <div className='vertical-scroll-top'>\n                        <ScrollButton\n                            enabled={hasPrevious}\n                            icon='arrow up'\n                            onClick={this.handleNavigateFirstPage}\n                            title='First page'\n                        />\n                        <ScrollButton\n                            enabled={hasPrevious}\n                            icon='angle double up'\n                            onClick={this.handleNavigatePreviousPage}\n                            title='Previous page'\n                        />\n                        <ScrollButton\n                            enabled={hasPrevious}\n                            icon='caret up'\n                            title='Previous row'\n                            onClick={this.handleNavigatePreviousRow}\n                        />\n                    </div>\n                    <div className='vertical-scroll-down'>\n                        <ScrollButton\n                            enabled={hasNext}\n                            icon='caret down'\n                            title='Next row'\n                            onClick={this.handleNavigateNextRow}\n                        />\n                        <ScrollButton\n                            enabled={hasNext}\n                            icon='angle double down'\n                            title='Next page'\n                            onClick={this.handleNavigateNextPage}\n                        />\n                        <ScrollButton\n                            enabled={hasNext}\n                            icon='arrow down'\n                            onClick={this.handleNavigateLastPage}\n                            title='Last page'\n                        />\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className='vertical-scroll'>\n            { scrollbar }\n            </div>\n        )\n    }\n}\n\nexport default SpreadsheetScrollbar\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport '../../../../css/App.css'\nimport '../../../../css/Notebook.css'\nimport '../../../../css/Spreadsheet.css'\n\nimport styled from 'styled-components';\nimport { Loader } from 'semantic-ui-react'\nimport {\n    CartesianGrid,\n    Tooltip,\n    XAxis,\n    YAxis,\n    BarChart,\n    Bar,\n    Legend,\n  } from 'recharts';\nconst Centered = styled.div`\n  text-align: center;\n`;\n\n/**\n *Plots are created using Recharts which is a redefined chart library built with React and D3.\n */\n\nclass D3BasedPlot extends React.Component {\n\n    render() {\n        const { column, profiledData, isLoadingPlot } = this.props;\n        // Grid header\n        let dataPlot = undefined; // [{}];\n        for (let property of profiledData.columns){\n            if (property.column.id === column.id){\n                dataPlot= property;\n                break;\n            }\n        }\n        return (\n            <div>\n            {\n                dataPlot\n                ?\n                <Centered>\n                    <BarChart\n                        width={250}\n                        height={180}\n                        data={dataPlot.values}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"count\" fill=\"steelblue\" />\n                    </BarChart>\n                </Centered>\n                :\n                isLoadingPlot\n                ?\n                <Loader active inline='centered'  content='Loading'  />\n                :\n                <p/>\n            }\n            </div>\n        );\n    }\n}\n\nexport default D3BasedPlot;\n\n// TODO: Support other type of data like text. Currently, just bar plots are generated for numerical data types.\n/* <ColumnDistributionPlot\n    data={columnDataInfo}\n    showXLabel={false}\n    showYLabel={false}\n    showInfo={false}\n/> */","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { VegaLite } from 'react-vega';\nimport '../../../../css/App.css'\nimport '../../../../css/Notebook.css'\nimport '../../../../css/Spreadsheet.css'\n\nimport styled from 'styled-components';\nimport { Loader } from 'semantic-ui-react'\n\nconst Centered = styled.div`\n  text-align: center;\n`;\n\n/**\n *Plots are created using Recharts which is a redefined chart library built with React and D3.\n */\n\nfunction getEncoding(typePlot) {\n    const yContent = {\n      field: 'count',\n      type: 'quantitative',\n      title: null,\n    };\n    if (typePlot === 'histogram_numerical') {\n      return {\n        y: yContent,\n        x: {\n          title: null,\n          bin: { binned: true },\n          field: 'bin_start',\n          type: 'quantitative',\n        },\n        x2: {\n          field: 'bin_end',\n        },\n        tooltip: [\n          { field: 'bin_start', title: 'start', type: 'quantitative' },\n          { field: 'bin_end', title: 'end', type: 'quantitative' },\n        ],\n      };\n    } else if (typePlot === 'histogram_temporal') {\n      return {\n        y: yContent,\n        x: {\n          title: null,\n          bin: { binned: true },\n          field: 'date_start',\n          type: 'temporal',\n          utc: true,\n        },\n        x2: {\n          field: 'date_end',\n        },\n        tooltip: [\n          { field: 'date_start', title: 'start', type: 'temporal' },\n          { field: 'date_end', title: 'end', type: 'temporal' },\n        ],\n      };\n    } else if (typePlot === 'histogram_categorical') {\n      return {\n        y: yContent,\n        x: {\n          title: null,\n          field: 'bin',\n          type: 'ordinal',\n          sort: { order: 'descending', field: 'count' },\n        },\n        tooltip: { field: 'bin', type: 'ordinal' },\n      };\n    } else if (typePlot === 'histogram_text') {\n      return {\n        y: {\n          field: 'bin',\n          type: 'ordinal',\n          title: null,\n        },\n        x: {\n          title: null,\n          field: 'count',\n          type: 'quantitative',\n          sort: { order: 'descending', field: 'count' },\n        },\n        tooltip: [\n          { field: 'bin', type: 'ordinal' },\n          { field: 'count', type: 'quantitative' },\n        ],\n      };\n    } else {\n      console.log('Unknown plot type ', typePlot);\n      return;\n    }\n}\n\nfunction getSpecification(typePlot) {\n    const specification = {\n        width: '120',\n        height: '120',\n        data: { name: 'values' },\n        config: {\n            background: null,\n            axis: {\n                domainColor: 'darkslategray'\n              },\n            axisX: {\n                labels: false,\n                ticks: false\n              }\n          },\n        description: 'A simple bar chart with embedded data.',\n        encoding: getEncoding(typePlot),\n        mark: 'bar',\n    };\n    return specification;\n}\n\nclass VegaLiteBasedPlot extends React.Component {\n\n    render() {\n        const { column, profiledData, isLoadingPlot } = this.props;\n        // Grid header\n        let dataPlot = undefined; // [{}];\n        let isTherePlotData = false;\n        for (let property of profiledData.columns){\n            if (property.name === column.name){\n                dataPlot= property.plot;\n                isTherePlotData = true;\n                break;\n            }\n        }\n        const message = <p className=\"small text-muted\"\n            style={{textAlign:\"center\", verticalAlign: \"middle\", display: \"table-cell\"}}>\n                Nothing to show.\n            </p>;\n\n        return (\n            <div>\n            {\n                dataPlot\n                ?\n                <VegaLite\n                    spec={getSpecification(dataPlot.type)}\n                    data={{ values: dataPlot.data }}\n                />\n                :\n                isLoadingPlot && !isTherePlotData\n                ?\n                <Loader active inline='centered'  content='Loading'  />\n                :\n                <div style={{width:100, height:145, display: \"table\"}} >\n                {message}\n                </div>\n            }\n            </div>\n        );\n    }\n}\n\nexport default VegaLiteBasedPlot;\n\n// TODO: Support other type of data like text. Currently, just bar plots are generated for numerical data types.\n/* <ColumnDistributionPlot\n    data={columnDataInfo}\n    showXLabel={false}\n    showYLabel={false}\n    showInfo={false}\n/> */","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport '../../../../css/App.css'\nimport '../../../../css/Notebook.css'\nimport '../../../../css/Spreadsheet.css'\nimport D3BasedPlot from './D3BasedPlot';\nimport VegaLiteBasedPlot from './VegaLiteBasedPlot';\n/**\n * The plot header is generated based on the type of profiler.\n */\nclass PlotHeader extends React.Component {\n    render() {\n        const { column, profiledData, isLoadingPlot } = this.props;\n        const profilerType = profiledData.is_profiled[0];\n        if (profilerType === 'mimir'){\n            return (\n                <D3BasedPlot\n                    column={column}\n                    profiledData={profiledData}\n                    isLoadingPlot={isLoadingPlot}\n                />\n            );\n        }\n        if (profilerType === 'datamart_profiler') {\n            return (\n                <VegaLiteBasedPlot\n                    column={column}\n                    profiledData={profiledData}\n                    isLoadingPlot={isLoadingPlot}\n                />\n            );\n        }\n    }\n}\n\nexport default PlotHeader;","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport RowIndexCell from './grid/RowIndexCell';\nimport '../../../css/App.css'\nimport '../../../css/Notebook.css'\nimport '../../../css/Spreadsheet.css'\nimport { Table} from 'react-bootstrap';\nimport PlotHeader from './grid/PlotHeader';\n\n/**\n * Display a dataset in spreadsheet format with minimal functionality for the\n * user to interact with the data. This is a static view on a historic\n * dataset that was generated as output of a workflow module.\n */\nColumnView.propTypes = {\n    dataset: PropTypes.object.isRequired\n}\n\nexport default function ColumnView(props){\n    const { dataset } = props;\n    const profiledData = dataset.properties;\n    const columns = dataset.columns;\n    const profilerType = profiledData.is_profiled[0];\n    // Grid header\n    let header = [<RowIndexCell key={-1} value=' ' />];\n    for (let cidx = 0; cidx < columns.length; cidx++) {\n        const column = columns[cidx];\n        let dataPlot_ = [{}];\n\n        for (let property of profiledData.columns){\n            if (profilerType === 'mimir' && property.column.id === column.id){\n                dataPlot_= property;\n                break;\n            }\n            if (profilerType === 'datamart_profiler' && property.name === column.name){\n                dataPlot_= property;\n                break;\n            }\n        }\n        header.push(\n            <tr key={'rowse_' + column.id}>\n                <td key={'rows_' + column.name} style={{width: '20%'}}>\n                    <h4> { column.name } </h4>\n                </td>\n                <td key={'rows_cf' + column.name} style={{width: '15%'}}>\n                    <button\n                        className=\"btn btn-secondary float-right\"\n                        disabled={true}\n                        style={{ backgroundColor: '#e3e3e3', borderColor: '#cfcfcf', borderRadius: '4px'}}\n                    >\n                        { column.type }\n                    </button>\n                </td>\n                <td key={column.name} style={{width: '30%'}}>\n                    <div className=\"card mb-4\" style={{overflow: 'auto'}}>\n                    {\n                        dataset && dataset.isProfiled() &&\n                        <PlotHeader\n                            column={column}\n                            profiledData={profiledData}\n                            isLoadingPlot={true}\n                        />\n                    }\n                    </div>\n                </td>\n                <td key={'rows_' + column.name} style={{width: '35%'}}>\n                    {\n                        column.type === 'string' || column.type === 'varchar' || column.type === 'categorical' || column.type === 'boolean'\n                            ?\n                            <div className=\"row\">\n                                <ul style={{ listStyle: 'none', columnCount: 2, columnGap: 10 }}>\n                                    {dataPlot_.distinctValueCount != null  && <li>Unique Values</li>}\n                                    {dataPlot_.num_distinct_values != null  && <li>Unique Values</li>}\n                                    {dataPlot_.count != null  && <li>Total Values</li>}\n                                    {dataPlot_.nullCount != null  && <li>Null Values</li>}\n                                    {dataPlot_.distinctValueCount != null  && (<li>{dataPlot_.distinctValueCount}</li>)}\n                                    {dataPlot_.num_distinct_values != null  && (<li>{dataPlot_.num_distinct_values}</li>)}\n                                    {dataPlot_.count != null  && (<li>{dataPlot_.count}</li>)}\n                                    {dataPlot_.nullCount != null  && (<li>{dataPlot_.nullCount}</li>)}\n                                </ul>\n                            </div>\n                            :\n                            dataPlot_ ?\n                                <div className=\"row\">\n                                    <ul style={{ listStyle: 'none', columnCount: 2, columnGap: 10 }}>\n                                        {dataPlot_.max != null && <li>Maximum</li>}\n                                        {dataPlot_.min != null &&<li>Minimum</li>}\n                                        {dataPlot_.mean != null  && <li>Mean</li>}\n                                        {dataPlot_.stdDev != null  && <li>Std Deviation</li>}\n                                        {dataPlot_.sum != null  && <li>Sum</li>}\n                                        {dataPlot_.distinctValueCount != null  && <li>Unique Values</li>}\n                                        {dataPlot_.num_distinct_values != null  && <li>Unique Values</li>}\n                                        {dataPlot_.count != null  && <li>Total Values</li>}\n                                        {dataPlot_.nullCount != null  && <li>Null Values</li>}\n                                        {dataPlot_.max != null  && (<li>{dataPlot_.max}</li>)}\n                                        {dataPlot_.min != null  && (<li>{dataPlot_.min}</li>)}\n                                        {dataPlot_.mean != null  && (<li>{dataPlot_.mean.toFixed(2)}</li>)}\n                                        {dataPlot_.stdDev != null  && (<li>{dataPlot_.stdDev.toFixed(2)}</li>)}\n                                        {dataPlot_.sum != null  && (<li>{dataPlot_.sum.toFixed(2)}</li>)}\n                                        {dataPlot_.distinctValueCount != null  && (<li>{dataPlot_.distinctValueCount}</li>)}\n                                        {dataPlot_.num_distinct_values != null  && (<li>{dataPlot_.num_distinct_values}</li>)}\n                                        {dataPlot_.count != null  && (<li>{dataPlot_.count}</li>)}\n                                        {dataPlot_.nullCount != null  && (<li>{dataPlot_.nullCount}</li>)}\n                                    </ul>\n                                </div>\n                                :\n                                <div/>\n                    }\n                </td>\n            </tr>\n        );\n    }\n    header = (<tbody>{header}</tbody>);\n    return (\n        <div style={{maxHeight: 400, minHeight: 400, overflow: 'auto' }}>\n            <Table>\n                {header}\n            </Table>\n        </div>\n    );\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\nimport { SORT, VIZUAL } from '../../../util/Vizual';\n\n/**\n * Dropdown menu for spreadsheet columns. Calls respective spreadsheet methods\n * when menu items are clicked.\n */\n\nclass ColumnDropDown extends React.Component {\n    static propTypes = {\n        disabled: PropTypes.bool.isRequired,\n        columnId: PropTypes.number.isRequired,\n        columnIndex: PropTypes.number.isRequired,\n        onAction: PropTypes.func.isRequired\n    }\n    /**\n     * Call spreadsheet delete column method.\n     */\n    deleteColumn = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.DELETE_COLUMN, columnId);\n    }\n    /**\n     * Call spreadsheet insert column method.\n     */\n    insertColumnLeft = () => {\n        const { columnIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_COLUMN, columnIndex);\n    }\n    /**\n     * Call spreadsheet insert column method.\n     */\n    insertColumnRight = () => {\n        const { columnIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_COLUMN,  (columnIndex + 1));\n    }\n    /**\n     * Call spreadsheet move column method.\n     */\n    moveColumn = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.MOVE_COLUMN, columnId);\n    }\n    render() {\n        const { disabled } = this.props;\n        return (\n            <Dropdown disabled={disabled} floating>\n                <Dropdown.Menu>\n                    <Dropdown.Item\n                        icon='arrow left'\n                        content='Insert column to left'\n                        onClick={this.insertColumnLeft}\n                    />\n                    <Dropdown.Item\n                        icon='arrow right'\n                        content='Insert column to right'\n                        onClick={this.insertColumnRight}\n                    />\n                    <Dropdown.Item\n                        icon='trash'\n                        content='Delete column'\n                        onClick={this.deleteColumn}\n                    />\n                    <Dropdown.Item\n                        icon='move'\n                        content='Move column'\n                        onClick={this.moveColumn}\n                    />\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                        icon='sort alphabet down'\n                        content='Sort A-Z'\n                        onClick={this.sortAZ}\n                    />\n                    <Dropdown.Item\n                        icon='sort alphabet up'\n                        content='Sort Z-A'\n                        onClick={this.sortZA}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n    /**\n     * Sort spreadsheet based on column values in ascending order\n     */\n    sortAZ = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.SORT, columnId, SORT.ASC);\n    }\n    /**\n     * Sort spreadsheet based on column values in descending order\n     */\n    sortZA = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.SORT, columnId, SORT.DESC);\n    }\n}\n\nexport default ColumnDropDown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport GridInput from './GridInput';\nimport ColumnDropDown from '../menu/ColumnDropDown';\nimport { MOVE } from '../../../util/App';\nimport { Label } from 'semantic-ui-react'\nimport { Draggable, Droppable } from 'react-drag-and-drop'\nimport { Icon } from 'semantic-ui-react';\nimport {\n    VIZUAL\n} from '../../../util/Vizual';\nimport PlotHeader from './PlotHeader';\n\n/**\n * Column header in a spreadsheet grid.\n */\nclass HeaderCell extends React.Component {\n    static propTypes = {\n        column: PropTypes.object.isRequired,\n        columnIndex: PropTypes.number.isRequired,\n        disabled: PropTypes.bool.isRequired,\n        isActive: PropTypes.bool.isRequired,\n        isUpdating: PropTypes.bool.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]),\n        onAction: PropTypes.func,\n        onClick: PropTypes.func,\n        onMove: PropTypes.func,\n        onUpdate: PropTypes.func,\n        isEditing: PropTypes.bool,\n        onMoveAction: PropTypes.func,\n        isSpreadsheet: PropTypes.bool\n    }\n    /**\n     * Submit changes to the cell value if a onUpdate handler is given.\n     */\n    handleChange = (value) => {\n        const { onUpdate } = this.props;\n        if (onUpdate != null) {\n            onUpdate(value);\n        }\n    }\n    /**\n     * Cell click handler. Check if a onClick handler was provided from the\n     * parent. Call it with the column id and and index position.\n     */\n    handleClick = () => {\n        const { column, columnIndex, onClick } = this.props;\n        if (onClick != null) {\n            onClick(column.id, -1, columnIndex, -1);\n        }\n    }\n    /**\n     * Active cell move handler. Call the provided handler (if given). Header\n     * cells only support left or right moves. Move up is converted to move left\n     * and move down is converted to move right.\n     */\n    handleMove = (direction) => {\n        const { onMove } = this.props;\n        if (onMove != null) {\n            if ((direction === MOVE.LEFT) || (direction === MOVE.UP)) {\n                onMove(MOVE.LEFT);\n            } else if ((direction === MOVE.RIGHT) || (direction === MOVE.DOWN)) {\n                onMove(MOVE.RIGHT);\n            }\n        }\n    }\n    handleMoveDropBefore = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_COLUMN,  parseInt(dropData['header-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    handleMoveDropAfter = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_COLUMN,  parseInt(dropData['header-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    /**\n     * Render grid column cell as Html table header cell.\n     */\n    render() {\n        const {\n            disabled,\n            isActive,\n            isUpdating,\n            column,\n            columnIndex,\n            value,\n            onAction,\n            isEditing,\n            isSpreadsheet\n        } = this.props;\n        // The value is optional (providing a value other than the column name\n        // is used to override the column name while updating).\n        let columnName = null;\n\n        if (value != null) {\n            columnName = value;\n        } else {\n            columnName = column.name;\n        }\n        // The cell style and content depends on whether the column is active\n        // or not.\n        let cellCss = 'grid-header';\n        let cellValue = null;\n        let dropTargetType = 'none';\n        let dropTargetBefore = null;\n        let dropTargetAfter = null;\n        // Show optional dropdown menu if onAction handler is provided\n        let dropdown = null;\n        if (isActive) {\n            // Show a text input control when active\n            cellCss += ' active';\n            cellValue = (\n                <GridInput\n                    cellValue={column.name}\n                    onMove={this.handleMove}\n                    onUpdate={this.handleChange}\n                />\n            );\n        } else {\n            if (onAction) {\n                dropdown = (\n                    <ColumnDropDown\n                        columnId={column.id}\n                        columnIndex={columnIndex}\n                        disabled={disabled}\n                        onAction={onAction}\n                    />\n                );\n            }\n            // Change style for header cells that are currently being updated.\n            if (isUpdating) {\n                cellCss += ' updating';\n            }\n            if((isEditing) && (isSpreadsheet)){\n            \tdropTargetType = 'header-cell';\n            \tdropTargetBefore = (\n            \t\t<Droppable\n     \t\t            types={[dropTargetType]}\n            \t\t    data={columnIndex}\n        \t\t        onDrop={this.handleMoveDropBefore}>\n     \t\t            <div className=\"drop-before\" ><Icon\n     \t\t\t            className='icon-button header-drop-target'\n     \t\t\t            title='<- Move Colum Drop'\n     \t\t\t            name='bullseye'\n     \t\t\t        /></div>\n                     </Droppable>\n            \t)\n            \tdropTargetAfter = (\n            \t\t<Droppable\n     \t\t            types={[dropTargetType]}\n            \t\t    data={columnIndex}\n \t\t                onDrop={this.handleMoveDropAfter}>\n            \t\t    <div className=\"drop-after\" ><Icon\n     \t\t\t            className='icon-button header-drop-target'\n     \t\t\t            title='Move Column Drop ->'\n     \t\t\t            name='bullseye'\n     \t\t\t        /></div>\n                     </Droppable>\n            \t)\n            }\n            cellValue = (\n            \t<div >\n            \t\t<span className='header-value'>\n\t                    {columnName}\n\t                </span>\n\t                <Label size='mini'>\n\t                    {`(${column[\"type\"]})`}\n\t                </Label>\n\t\t            <div >\n                    {\n                        this.props.isLoadingPlot &&\n                        this.props.dataset && this.props.dataset.isProfiled() &&\n                        <PlotHeader\n                            column={column}\n                            profiledData={this.props.profiledData}\n                            isLoadingPlot={this.props.isLoadingPlot}\n                        />\n                    }\n                    </div>\n\t            </div>\n            );\n        }\n        return (\n    \t\t<Draggable \n    \t\t    type=\"header-cell\" \n    \t\t\tdata={columnIndex} \n    \t\t    wrapperComponent={<th></th>} \n            \tclassName={cellCss} \n    \t\t    onClick={this.handleClick}>\n\t\t            {dropTargetBefore}\n\t\t            {dropTargetAfter}\n\t                {cellValue}\n\t                {dropdown}\n            </Draggable>\n        );\n    }\n}\n\nHeaderCell.defaultProps = {\n    disabled: false,\n    isActive: false,\n    isUpdating: false\n}\n\nexport default HeaderCell;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport HeaderCell from './grid/HeaderCell';\nimport RowIndexCell from './grid/RowIndexCell';\nimport '../../../css/App.css'\nimport '../../../css/Notebook.css'\nimport '../../../css/Spreadsheet.css'\n\n/**\n * Display a dataset in spreadsheet format with minimal functionality for the\n * user to interact with the data. This is a static view on a historic\n * dataset that was generated as output of a workflow module.\n */\nclass Headers extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n    }\n\n    render() {\n        const { dataset } = this.props;\n        const profiledData =  dataset.properties;\n        const columns = dataset.columns;\n        // Grid header\n        let header = [<RowIndexCell key={-1} rowIndex={-1} value={' '} />];\n        for (let cidx = 0; cidx < columns.length; cidx++) {\n            const column = columns[cidx];\n            header.push(\n                <HeaderCell\n                    dataset={dataset}\n                    key={column.id}\n                    column={column}\n                    columnIndex={cidx}\n                    profiledData={profiledData}\n                    isLoadingPlot={this.props.isLoadingPlot}\n                />\n            );\n        }\n        header = (<tr>{header}</tr>);\n        return (\n           <thead>{header}</thead>\n        );\n    }\n}\n\nexport default Headers;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport GridCell from './grid/GridCell';\nimport RowIndexCell from './grid/RowIndexCell';\nimport SpreadsheetDropDown from './menu/SpreadsheetDropDown';\nimport SpreadsheetScrollbar from './SpreadsheetScrollbar';\nimport ColumnView from './ColumnView';\nimport HeaderCell from './grid/HeaderCell'; \n\nimport '../../../css/App.css'\nimport '../../../css/Notebook.css'\nimport '../../../css/Spreadsheet.css'\nimport 'toastr/build/toastr.min.css'\n\nimport {Button, Icon, Popup, Label, Loader} from 'semantic-ui-react'\nimport Headers from \"./Headers\";\nimport toastr from 'toastr'\n\n/**\n * Display a dataset in spreadsheet format with minimal functionality for the\n * user to interact with the data. This is a static view on a historic\n * dataset that was generated as output of a workflow module.\n */\nclass DatasetView extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onNavigate: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        downloadLimit: PropTypes.number.isRequired,\n        onRecommendAction: PropTypes.func\n    }\n    constructor(props) {\n        super(props);\n        this.state = {column: -1, row: -1,  typeView: 1};\n    }\n\n    componentDidMount() {\n        this.setState({\n            column: -1,\n            row:-1,\n            typeView: 1\n        })\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        if(!props.dataset.isProfiled()){\n            return null;\n        } else {\n            return null;\n        }\n    }\n    /**\n     * If the dataset changes we need to reset the active cell coordinates in\n     * the component state.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Only try to update the state if there currently are valid active\n        // cell coordinates in the component state.\n        const { dataset } = this.props;\n        if (prevProps.dataset.id !== dataset.id) {\n            this.setState({column: -1, row: -1, typeView:1});\n        }else if (dataset.isProfiled() && !prevProps.dataset.isProfiled()){\n            toastr.options = {\n                positionClass : 'toast-top-full-width',\n                hideDuration: 300,\n                timeOut: 5000\n            }\n            setTimeout(() => toastr.success(`Detailed and Column views are now available for the ${dataset.name} dataset.`), 300)\n        }else if(!dataset.isProfiled() && prevProps.dataset.isProfiled()){\n            this.setState({typeView:1})\n        }\n    }\n    /**\n     * Update the reference to the active cell in the component state.\n     */\n    handleSelectCell = (columnId, rowId) => {\n        this.setState({column: columnId, row: rowId});\n    }\n    /**\n     * Update the reference to the active cell in the component state.\n     */\n    updateTypeView = (value) => {\n        if(value!==1){\n            if(!this.props.dataset.isProfiled()){\n                this.handleRequestProfiler(true)\n            }\n        }\n        this.setState({typeView: value});\n    };\n    /**\n     * request profiled properties from the server\n     */\n    handleRequestProfiler = (profile) => {\n        if(profile){\n            const {dataset, onNavigate, userSettings} = this.props;\n            onNavigate(dataset, dataset.offset, userSettings.cellRowLimit(), profile)\n        }\n    }\n    render() {\n        const { dataset, onFetchAnnotations, onNavigate, onSelectCell, userSettings, onEditSpreadsheet, moduleId, downloadLimit, onRecommendAction } = this.props;\n        const activeCell = this.state;\n        // Content header\n        const contentHeader = (\n            <div className='output-header' onClick={onSelectCell}>\n                <span className='header-name'>{dataset.name}</span>\n                <span> (</span>\n                <span className='number-highlight'>{dataset.rowCount}</span>\n                <span className='right-padding-md'> rows)</span>\n                <SpreadsheetDropDown \n                \tdataset={dataset}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    moduleId={moduleId}\n                    downloadLimit={downloadLimit}\n                    onRecommendAction={onRecommendAction}\n                />\n            </div>\n        );\n\n        const columns = dataset.columns;\n        // Grid header\n        let header = [<RowIndexCell key={-1} rowId={\"-1\"} rowIndex={-1} value={' '} />];\n        for (let cidx = 0; cidx < columns.length; cidx++) {\n            const column = columns[cidx];\n            header.push(\n                <HeaderCell\n                    key={column.id}\n                    column={column}\n                    columnIndex={cidx}\n                    summaryPlot={this.state.typeView === 2}\n                />\n            );\n        }\n        header = (<tr>{header}</tr>);\n        // Grid rows\n        const offset = dataset.offset;\n        const rows = [];\n        for (let ridx = 0; ridx < dataset.rows.length; ridx++) {\n            const row = dataset.rows[ridx];\n            const cells = [<RowIndexCell key={row.id} rowId={row.id} rowIndex={ridx + offset} value={ridx + offset} />];\n            for (let cidx = 0; cidx < columns.length; cidx++) {\n                const column = columns[cidx];\n                const isActive = (activeCell.column === column.id) && (activeCell.row === row.id);\n                cells.push(\n                    <GridCell\n                        key={'C' + column.id + 'R' + row.id}\n                        column={column}\n                        columnIndex={cidx}\n                        hasAnnotations={dataset.hasAnnotations(column.id, row.id)}\n                        isActive={isActive}\n                        rowId={row.id}\n                        rowIndex={ridx}\n                        value={row.values[cidx]}\n                        onClick={() => (this.handleSelectCell(column.id, row.id))}\n                        onFetchAnnotations={onFetchAnnotations}\n                    />\n                );\n            }\n            rows.push(<tr key={row.id}>{cells}</tr>);\n        }\n\n        const returnContent = this.state.typeView !== 3\n        ?\n        <div className='spreadsheet-container'>\n            <div className='spreadsheet-table-container'>\n                <table className='spreadsheet'>\n                {\n                    // Grid header\n                    this.state.typeView === 1\n                        ?\n                        <Headers dataset={dataset} isLoadingPlot={false} />\n                        :\n                        <Headers dataset={dataset} isLoadingPlot={true} />\n                }\n                <tbody>{rows}</tbody>\n                </table>\n            </div>\n            <SpreadsheetScrollbar\n                dataset={dataset}\n                onNavigate={onNavigate}\n                cellLimit={userSettings.cellRowLimit()}\n            />\n        </div>\n        : dataset.isProfiled() ? <ColumnView dataset={dataset}/> : <Loader active inline='centered'  content='Loading'  />\n        return (\n            <div>\n                { contentHeader }\n                <Button.Group floated='right' size='mini' style={{marginTop:'-20px'}}>\n                    <Label basic  pointing='right' size='mini'>\n                        Views\n                    </Label>\n                    <Popup content='Compact view' trigger={\n                    <Button icon onClick={() => (this.updateTypeView(1))}>\n                        <Icon name='compress' />\n                    </Button>} />\n                    <Popup content='Detail view' trigger={\n                    <Button icon onClick={() => (this.updateTypeView(2))}>\n                        <Icon name='chart bar outline' />\n                    </Button>} />\n                    <Popup content='Column view' trigger={\n                    <Button icon onClick={() => (this.updateTypeView(3))}>\n                        <Icon name='columns' />\n                    </Button>} />\n                </Button.Group>\n                <br/>\n                {returnContent}\n            </div>\n        );\n    }\n}\n\nexport default DatasetView;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport '../../../../css/App.css';\n\n\n/**\n * Simple helper component to format a module timestamp for output.\n */\nclass TimestampOutput extends React.Component {\n    static propTypes = {\n        label: PropTypes.string.isRequired,\n        time: PropTypes.string,\n    }\n    /**\n     * Show simple concatenation of label and time value. If the time is null\n     * the component also return null.\n     */\n    render() {\n        const { label, time } = this.props;\n        if (time != null) {\n            return (\n                <pre className='plain-text'>\n                    <span className='info-bold'>{label + ' '}</span>\n                    {time}\n                </pre>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default TimestampOutput;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport { PropTypes } from 'prop-types';\nimport {Loader, Menu, Dropdown, Segment} from 'semantic-ui-react';\nimport ReactMarkdown from 'react-markdown'\nimport { ApiPolling } from '../../Api';\nimport DatasetChart from '../../plot/DatasetChart';\nimport DatasetView from '../../spreadsheet/DatasetView';\nimport { ErrorMessage } from '../../Message';\nimport TimestampOutput from './TimestampOutput';\nimport {\n    CONTENT_CHART,\n    CONTENT_DATASET,\n    CONTENT_TEXT,\n    CONTENT_HIDE,\n    CONTENT_JAVASCRIPT,\n    OutputText,\n    CONTENT_TIMESTAMPS, CONTENT_MULTIPLE, CONTENT_MARKDOWN, CONTENT_HTML\n} from '../../../resources/Outputs';\nimport '../../../../css/App.css';\nimport '../../../../css/Notebook.css';\nimport {TextButton} from \"../../Button\";\nimport Divider from \"semantic-ui-react/dist/commonjs/elements/Divider\";\nimport { isCellOutputRequest } from '../../../actions/project/Notebook';\nimport 'toastr/build/toastr.min.css'\nimport toastr from 'toastr'\nimport gfm from 'remark-gfm'\nimport JavascriptCellOutput from \"./JavascriptCellOutput\"\n\n\n/**\n * Output area for notebook cells that have a workflow module associated with\n * them.\n */\nclass CellOutputArea extends React.Component {\n    static propTypes = {\n        cell: PropTypes.object.isRequired,\n        datasets: PropTypes.object.isRequired,\n        onCancelExec: PropTypes.func,\n        onCheckStatus: PropTypes.func,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onNavigateDataset: PropTypes.func.isRequired,\n        onOutputSelect: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        onRecommendAction: PropTypes.func.isRequired,\n        apiEngine: PropTypes.object.isRequired\n    };\n    state = {\n        activeTab: null,\n        resourceName: null,\n        isFetching: false,\n        hide: false\n    };\n    /**\n     * Toggle cell fetching state or update the default output\n     */\n    static getDerivedStateFromProps(nextProps, prevState){\n        const newOutput = nextProps.cell.output;\n        const datasets = nextProps.datasets;\n        if(prevState.isFetching && prevState.activeTab === newOutput.type){\n            if(prevState.activeTab === CONTENT_CHART || prevState.activeTab === CONTENT_DATASET){\n                if (prevState.resourceName === newOutput.dataset.name || prevState.resourceName === newOutput.name\n                 || (prevState.activeTab === CONTENT_DATASET && prevState.resourceName.toLowerCase() === datasets[newOutput.dataset.id].name.toLowerCase())){ // forward compatibility\n                    return {\n                        isFetching: false\n                    }\n                }\n            } else if(prevState.activeTab === CONTENT_TEXT ||\n                prevState.activeTab === CONTENT_MULTIPLE ||\n                prevState.activeTab === CONTENT_HIDE ||\n                prevState.activeTab === CONTENT_TIMESTAMPS){\n                return {\n                    isFetching: false\n                }\n            }\n        }\n        return {}\n    }\n    /**\n     * Update the cell output state from cell type\n     */\n    componentDidMount() {\n        this.setState({\n            activeTab: CONTENT_TEXT,\n            resourceName: 'All',\n        });\n    }\n    /**\n     * Discard a displayed annotation (by clearing the selected cell\n     * annotations).\n     */\n    handleDiscardAnnotation = () => {\n        this.handleSelectCell(-1, -1);\n    }\n    /**\n     * Show console output when user dismisses an error message.\n     */\n    handleOutputDismiss = () => {\n        const { cell, onOutputSelect } = this.props;\n        onOutputSelect(cell.module, this.state.activeTab, this.state.resourceName);\n    }\n    /**\n     * Show spreadsteeh cell annotations when the user clicks on a table cell.\n     */\n    handleFetchAnnotations = (columnId, rowId) => {\n        const { cell, onFetchAnnotations } = this.props;\n        const { output, module } = cell;\n        const dataset = output.dataset;\n        onFetchAnnotations(module, dataset, columnId, rowId);\n    }\n    /**\n     * Download the output in the console as a text file\n     */\n    handleConsoleDownload = () => {\n        const {cell} = this.props;\n        const {resourceName} = this.state;\n        const element = document.createElement(\"a\");\n        const {outputs} = this.getConsoleOutputs(cell.module.outputs.stdout);\n        const file = new Blob([JSON.stringify(outputs[resourceName],null,2)], {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        element.download = cell.id;\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    };\n    /**\n     * Fetches outputs from the API\n     */\n    fetchData = () => {\n        const { cell, onOutputSelect } = this.props;\n        const { activeTab, resourceName } = this.state;\n        onOutputSelect(cell.module, activeTab, resourceName)\n    };\n    /**\n     * Tracks tab menu selection\n     */\n    handleItemClick = (e, activeTab, resourceName = null, isFetching = false) => {\n        this.setState({\n            isFetching: isFetching,\n            resourceName: resourceName,\n            activeTab: activeTab,\n            hide: activeTab === CONTENT_HIDE\n        },() => this.fetchData());\n    };\n    /**\n     * Copy embed code to clipboard\n     */\n    handleCopyEmbedClick = (e) => {\n    \tconst { cell } = this.props;\n    \tconst code = '<iframe width=\"400\" height=\"400\" frameBorder=\"0\" scrolling=\"no\" src=\"'+window.location+'/?cell-output='+cell.id+'\"></iframe>';\n    \tvar input = document.createElement('textarea');\n        input.innerHTML = code;\n        document.body.appendChild(input);\n        input.select();\n        var result = document.execCommand('copy');\n        document.body.removeChild(input);\n        toastr.options = {\n            positionClass : 'toast-top-full-width',\n            hideDuration: 300,\n            timeOut: 5000\n        }\n        if(result){\n    \t\tconsole.log('copied embed code of output for cell ' +cell.id+' to clipboard')\n    \t\tsetTimeout(() => toastr.success(`Embed code copied!`), 300)\n    \t}\n        else {\n    \t    console.log('error copying embed code of output for cell ' +cell.id+' to clipboard')\n    \t    setTimeout(() => toastr.error(`Embed code copy failed!`), 300)\n    \t}\n    };\n    /**\n     * Copy embed code to clipboard\n     */\n    handleCopyURLClick = (e) => {\n    \tconst { cell } = this.props;\n    \tconst code = window.location+'/?cell-output='+cell.id;\n    \tvar input = document.createElement('textarea');\n        input.innerHTML = code;\n        document.body.appendChild(input);\n        input.select();\n        var result = document.execCommand('copy');\n        document.body.removeChild(input);\n        toastr.options = {\n            positionClass : 'toast-top-full-width',\n            hideDuration: 300,\n            timeOut: 5000\n        }\n        if(result){\n    \t    console.log('copied url of output for cell ' +cell.id+' to clipboard')\n    \t    setTimeout(() => toastr.success(`Output URL copied!`), 300)\n    \t}\n        else{\n    \t\tconsole.log('error copying url of output for cell ' +cell.id+' to clipboard')\n    \t\tsetTimeout(() => toastr.success(`Output URL copy failed!`), 300)\n    \t}\n    };\n    /**\n     * use cell module output to create console outputs\n     */\n    getConsoleOutputs = (stdout) => {\n        let outputs = {};\n        let renders = {};\n        const {cell, onSelectCell} = this.props;\n        if(stdout.hasOwnProperty('isMultiple') && !stdout.isMultiple()){\n            switch (stdout.type) {\n                case CONTENT_TEXT: outputs['text/plain']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_HTML: outputs['text/html']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_MARKDOWN: outputs['text/markdown']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_MARKDOWN: outputs['text/markdown']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_JAVASCRIPT: outputs['text/javascript'] = stdout.lines[0]; break;\n                default: outputs['text/plain']  = stdout.lines.join(\"\\n\"); break;\n            }\n        }else{\n            outputs = cell.output.outputs;\n        }\n        for (let out in outputs){\n            if (out === \"text/html\"){\n                const Response = createReactClass({\n                    render: function () {\n                        return (\n                            <div\n                                className='output-content-html'\n                                dangerouslySetInnerHTML={{__html: outputs[out]}}\n                            />\n                        )\n                    }\n                });\n                renders[out] = (\n                    <div className='output-content'>\n                        <Response/>\n                    </div>\n                );\n            } else if (out === \"text/markdown\"){\n                renders[out] = (\n                    <div className='output-content'>\n                        <ReactMarkdown\n                            plugins={[gfm]} \n    \t                    source={outputs[out]}/>\n                    </div>\n                );\n            } else if (out === \"text/plain\"){\n                renders[out] = (\n                    <pre className='plain-text' onClick={onSelectCell}>\n                            {outputs[out]}\n                        </pre>\n                )\n            } else if (out === \"dataset/view\"){\n                renders[out] = this.getDatasetView(cell.id, outputs[out])\n            } else if (out === \"chart/view\"){\n                renders[out] = this.getChartView(outputs[out].data.name, outputs[out].result)\n            } else if (out === \"text/javascript\"){\n                renders[out] = \n                    <JavascriptCellOutput html={outputs[out].value.html}\n                                          code={outputs[out].value.code}\n                                          deps={outputs[out].value.js_deps}/>\n                \n            }  else {\n                renders[out] = (\n                    <pre className='plain-text' onClick={onSelectCell}>\n                            {JSON.stringify(outputs[out],null,2)}\n                        </pre>\n                )\n            }\n        }\n        return {outputs, renders}\n    };\n    /**\n     * Returns a dataset view\n     */\n    getDatasetView = (id, dataset) => {\n        const {onSelectCell, datasets, onNavigateDataset, userSettings, onEditSpreadsheet, onRecommendAction, apiEngine} = this.props;\n        try {\n            dataset.name = datasets[dataset.id].name;\n        }catch (TypeError) {\n            // prevent breakage\n        }\n        return (\n            <div className='output-content'>\n                <DatasetView\n                    dataset={dataset}\n                    onNavigate={onNavigateDataset}\n                    onFetchAnnotations={this.handleFetchAnnotations}\n                    onSelectCell={onSelectCell}\n                    userSettings={userSettings}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    moduleId={id}\n                    downloadLimit={apiEngine.serviceProperties.maxDownloadRowLimit}\n                    onRecommendAction={onRecommendAction}\n                />\n            </div>\n        )\n    };\n    /**\n     * Returns a chart view\n     */\n    getChartView = (name, dataset) => {\n        const {onSelectCell} = this.props;\n        return <div className='output-content'>\n            <DatasetChart\n                identifier={name}\n                dataset={dataset}\n                onSelectCell={onSelectCell}\n            />\n        </div>\n    };\n    /**\n     * Return Output content depending on Cell menu selection\n     */\n    getOutputContent = () => {\n        const { cell, onSelectCell } = this.props;\n        const { resourceName } = this.state;\n        let output = cell.output;\n        // For cells that are in success or an error state the output depends\n        // on the type of the output resource handle.\n        // messages\n        if (output.isHidden() && !cell.isCanceled()){\n            return (\n                <pre className='plain-text' onClick={onSelectCell}/>\n            );\n        }\n        if (output.isTimestamps()){\n            // Depending on whether the module completed successfully or not\n            // the label for the finished at timestamp changes.\n            let finishedType = '';\n            if (cell.isErrorOrCanceled()) {\n                finishedType = 'Canceled at';\n            } else {\n                finishedType = 'Finished at';\n            }\n            return (\n                <div className='module-timings' onClick={onSelectCell}>\n                    <p className='output-info-headline'>\n                        <span className='output-info-headline'>\n                            Module timings\n                        </span>\n                    </p>\n                    <TimestampOutput label='Created at' time={output.createdAt} />\n                    <TimestampOutput label='Started at' time={output.startedAt} />\n                    <TimestampOutput label={finishedType} time={output.finishedAt} />\n                </div>\n            );\n        }\n        if (output.isDataset()) {\n            return this.getDatasetView(cell.id, output.dataset);\n        }\n        if (output.isChart()) {\n            return this.getChartView(output.name, output.dataset);\n        }\n        if (output.isError()) {\n            const fetchError = output.error;\n            return <ErrorMessage\n                title={fetchError.title}\n                message={fetchError.message}\n                onDismiss={this.handleOutputDismiss}\n            />;\n        }\n        // If the cell is in error state and it has output written to standard\n        // error then we show those lines in an error box. We only show the\n        // error messages if the displayed output is console (i.e., either\n        // text or html)\n        if ((cell.isError())) {\n            const {stderr} = cell.module.outputs;\n            if (stderr.length > 0) {\n                const errorOut = new OutputText(stderr);\n                return(\n                    <div>\n                        <div className='output-error'>\n                            <pre className='error-text' onClick={onSelectCell}>\n                                {errorOut.lines.join('\\n')}\n                            </pre>\n                        </div>\n                    </div>\n                );\n            }\n        }\n        const {renders} = this.getConsoleOutputs(output);\n        let outputContent = null;\n        for( let out in renders ) {\n            if((resourceName===out || resourceName==='All') && !cell.isCanceled()){\n                outputContent = <div>\n                    { outputContent }\n                    { outputContent !== null && <Divider horizontal /> }\n                    { renders[out] }\n                </div>\n            }\n        }\n        // add download link\n        return (\n            <div className=\"cell-command-area\">\n                {outputContent}\n                {resourceName !== 'All' && <div className='horizontal-divider'>\n                    <TextButton\n                        text={'download'}\n                        title='Download console output'\n                        onClick={this.handleConsoleDownload}\n                    />\n                </div>}\n            </div>);\n    };\n\n    render() {\n        const {\n            cell,\n            onCancelExec,\n            onCheckStatus,\n            isActive\n        } = this.props;\n        const { output } = cell;\n        // The output content depends on the status of the cell. For running and\n        // pending cells only timestamps (and a cancel button) is displayed.\n        // If there has been an error we do not show the cancel button in order\n        // to avoid continuous polling.\n        let cancelButton = null;\n        if (onCancelExec != null) {\n            if (!output.isError()) {\n                cancelButton = (\n                    <ApiPolling\n                        interval={2000}\n                        onCancel={onCancelExec}\n                        onFetch={onCheckStatus}\n                        resource={cell}\n                        text={cell.isRunning() ? 'Running ...' : 'Pending ...'}\n                    />\n                );\n            } else {\n                const fetchError = output.error;\n                cancelButton =(\n                    <div className='output-error'>\n                        <ErrorMessage\n                            title={fetchError.title}\n                            message={fetchError.message}\n                        />\n                    </div>\n                );\n            }\n        }\n        if (cell.isRunning()) {\n            return (\n                <div>\n                    <div className='module-timings'>\n                        <TimestampOutput label='Created at' time={cell.module.timestamps.createdAt} />\n                        <TimestampOutput label='Started at' time={cell.module.timestamps.startedAt} />\n                    </div>\n                    { cancelButton }\n                </div>\n            );\n        } else if (cell.isPending() || isActive) {\n            return (\n                <div>\n                    <div className='module-timings'>\n                        <TimestampOutput label='Created at' time={cell.module.timestamps.createdAt} />\n                    </div>\n                    { cancelButton }\n                </div>\n            );\n        }\n        let datasetList = [];\n        if (cell.module.datasets.length > 0) {\n            for (let i = 0; i < cell.module.datasets.length; i++) {\n                const ds = cell.module.datasets[i];\n                datasetList.push(\n                    <Dropdown.Item\n                        key={'ds-' + ds.name}\n                        icon='table'\n                        text={ds.name}\n                        title={ds.name}\n                        disabled={this.state.resourceName===ds.name && cell.output.isDataset()}\n                        onClick={() => this.handleItemClick({}, CONTENT_DATASET, ds.name, true)}\n                    />\n                );\n            }\n        }\n        let chartList = [];\n        if (cell.module.charts.length > 0) {\n            for (let i = 0; i < cell.module.charts.length; i++) {\n                const chart = cell.module.charts[i];\n                chartList.push(\n                    <Dropdown.Item\n                        key={'vw-' + chart.name}\n                        icon='bar chart'\n                        text={chart.name}\n                        title={chart.name}\n                        disabled={this.state.resourceName===chart.name && cell.output.isChart()}\n                        onClick={() => this.handleItemClick({}, CONTENT_CHART, chart.name, true)}\n                    />\n                );\n            }\n        }\n        let consoleItems = cell.module.outputs.stdout.map(x => x.type).filter((v, i, a) => a.indexOf(v) === i);\n        let consoleList = [];\n        consoleItems.unshift('All')\n        for (let type = 0; type < consoleItems.length; type++){\n            consoleList.push(\n                <Dropdown.Item\n                    key={'cl-' + consoleItems[type]}\n                    icon='circle'\n                    text={consoleItems[type]}\n                    title={consoleItems[type]}\n                    disabled={this.state.resourceName === consoleItems[type] && this.state.activeTab === CONTENT_TEXT}\n                    onClick={() => this.handleItemClick({}, CONTENT_TEXT, consoleItems[type], false)}\n                />\n            )\n        }\n\n        const { activeTab, isFetching } = this.state;\n        const cellOutput = isCellOutputRequest();\n        let menu = null;\n        if(cellOutput){\n        \tmenu = null;\n        }\n        else{\n        \tmenu = (\n\t        \t<Menu>\n\t\t            <Menu.Item\n\t\t                icon='hide'\n\t\t                title='Hide output for this cell'\n\t\t                disabled={this.state.hide}\n\t\t                onClick={(e) => this.handleItemClick(e, CONTENT_HIDE, null, true)} />\n\t\t            <Dropdown disabled={consoleList.length===0} pointing text = 'Console' className = 'link item'>\n\t\t                <Dropdown.Menu>{ consoleList }</Dropdown.Menu>\n\t\t            </Dropdown>\n\t\t            <Menu.Item\n\t\t                name={CONTENT_TIMESTAMPS}\n\t\t                active={activeTab === CONTENT_TIMESTAMPS}\n\t\t                content='Timing'\n\t\t                disabled={this.state.activeTab===CONTENT_TIMESTAMPS}\n\t\t                onClick={(e) => this.handleItemClick(e, CONTENT_TIMESTAMPS, null, true)}\n\t\t            />\n\t\t            <Dropdown disabled={ datasetList.length===0 } pointing text = 'Datasets' className = 'link item'>\n\t\t                <Dropdown.Menu>{ datasetList }</Dropdown.Menu>\n\t\t            </Dropdown>\n\t\t            <Dropdown disabled={chartList.length===0} pointing text = 'Charts' className = 'link item'>\n\t\t                <Dropdown.Menu>{ chartList }</Dropdown.Menu>\n\t\t            </Dropdown>\n\t\t            <div className='cell-output-links'>\n\t\t                <Menu.Item\n\t\t\t                icon='copy'\n\t\t\t                title='Copy Embed Code'\n\t\t\t                disabled={false}\n\t\t\t                onClick={(e) => this.handleCopyEmbedClick(e)} />\n\t\t\t            <Menu.Item \n\t\t\t                icon='linkify'\n\t\t\t                title='Copy Output URL'\n\t\t\t                disabled={false}\n\t\t\t                onClick={(e) => this.handleCopyURLClick(e)} />\n\t\t\t        </div>\n\t\t        </Menu>\n\t        );\n        }\n        // Show spinner while fetching the output\n        return  (\n            <div className='output-area'>\n                { menu }\n                <div className='output-loading'>\n                    <Loader active={ isFetching } inline indeterminate/>\n                </div>\n                {!this.state.hide && <Segment style={{overflow: 'auto', maxHeight: 2000 }}>\n                    { !isFetching && this.getOutputContent() }\n                </Segment>}\n            </div>\n        );\n    }\n}\n\nexport default CellOutputArea;","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Icon } from 'semantic-ui-react';\nimport CellCommandArea from './input/CellCommandArea';\nimport CellDropDownMenu from './CellDropDownMenu';\nimport CellOutputArea from './output/CellOutputArea';\nimport { TextButton } from '../Button';\nimport { INSERT_AFTER, INSERT_BEFORE } from '../../resources/Notebook';\nimport '../../../css/App.css';\nimport '../../../css/Notebook.css';\nimport ProgressContext from  '../ProgressContext'\n\n\n/**\n * Cell in a notebook. The cell may either represent an existing module in a\n * workflow or a new notebook cell. For cells that contain a workflow module\n * the redered components include the cell index, an optional cell menu,\n * the cell command area and the cell output area.\n *\n * Depending on whether the associated notebook cell is in edit mode or not\n * the command area will display the command text or a command input form.\n *\n * For new cells a cell index '*' is shown together with the module input\n * form. There is no output area for new cells.\n *\n * The notebook cell does not receive a onSubmitCell callback if the notebook is\n * active and the cell is not a cell that is appended after the active cell.\n * In this case modification of the underlying workflow is not possible and\n * submissions should be blocked.\n */\nclass NotebookCell extends React.Component {\n    static propTypes = {\n        apiEngine: PropTypes.object.isRequired,\n        cell: PropTypes.object.isRequired,\n        cellNumber: PropTypes.number.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        isNewNext: PropTypes.bool.isRequired,\n        isNewPrevious: PropTypes.bool.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onAddFilteredCommand: PropTypes.func.isRequired,\n        onCancelExec: PropTypes.func,\n        onCheckStatus: PropTypes.func,\n        onCopyCell: PropTypes.func.isRequired,\n        onCreateBranch: PropTypes.func.isRequired,\n        onDatasetNavigate: PropTypes.func.isRequired,\n        onDeleteCell: PropTypes.func.isRequired,\n        onDismissCell: PropTypes.func.isRequired,\n        onInsertCell: PropTypes.func.isRequired,\n        onOutputSelect: PropTypes.func.isRequired,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onRemoveFilteredCommand: PropTypes.func.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        onSubmitCell: PropTypes.func,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        onRecommendAction: PropTypes.func.isRequired,\n        onResetRecommendations: PropTypes.func.isRequired,\n        onFreezeCell: PropTypes.func.isRequired,\n        onFreezeOneCell: PropTypes.func.isRequired,\n        onThawCell: PropTypes.func.isRequired,\n        onThawOneCell: PropTypes.func.isRequired,\n    }\n    handleUpdateProgress = p => {\n        this.setState({moduleProgress: p})\n    };\n\n    state = {\n        moduleProgress: 0,\n        onUpdateProgress: this.onUpdateProgress\n    };\n    /**\n     * Add the command that is associated with this notebook cell module\n     * to the list of hidden commands.\n     */\n    handleAddFilteredCommand = () => {\n        const { cell, onAddFilteredCommand } = this.props;\n        onAddFilteredCommand(cell.commandSpec);\n    }\n    /**\n     * Copy the associated cell to the clipboard in the user settings.\n     */\n    handleCopyCell = () => {\n        const { cell, onCopyCell } = this.props;\n        onCopyCell(cell);\n    }\n    /**\n     * Event handler when the user clicks the menu item to create a new branch\n     * up until the module in this cell.\n     */\n    handleCreateBranch = () => {\n        const { cell, onCreateBranch } = this.props;\n        onCreateBranch(cell.module);\n    }\n    /**\n     * Scroll to the given positions in the given dataset that is being\n     * displayed in the output area of the cell.\n     */\n    handleDatasetNavigate = (dataset, offset, limit, profile=false) => {\n        const { cell, onDatasetNavigate } = this.props;\n        onDatasetNavigate(cell.module, dataset, offset, limit, profile);\n    }\n    /**\n     * Delete the associated cell from the notebook.\n     */\n    handleDeleteCell = () => {\n        const { cell, onDeleteCell } = this.props;\n        onDeleteCell(cell);\n    }\n    /**\n     * Submit action to insert a new notebook cell relative to this cell.\n     *\n     * We need to adjust the given position based on the current setting for\n     * notebook cell order.\n     */\n    handleInsertCell = (direction) => {\n        const { cell, onInsertCell, userSettings } = this.props;\n        if (userSettings.showNotebookReversed()) {\n            if (direction === INSERT_AFTER) {\n                onInsertCell(cell, INSERT_BEFORE);\n            } else {\n                onInsertCell(cell, INSERT_AFTER);\n            }\n        } else {\n            onInsertCell(cell, direction);\n        }\n    }\n    /**\n     * Remove the command that is associated with this notebook cell module\n     * from the list of hidden commands.\n     */\n    handleRemoveFilteredCommand = () => {\n        const { cell, onRemoveFilteredCommand } = this.props;\n        onRemoveFilteredCommand(cell.commandSpec);\n    }\n    /**\n     * Set this cell as the active notebook cell. Only if the cell is inactive\n     * at the moment.\n     */\n    handleSelectCell = () => {\n        const { cell, isActiveCell, onSelect } = this.props;\n        if ((!isActiveCell) && (!cell.isActive())) {\n            onSelect(cell);\n        }\n    }\n    /**\n     * Freeze this and all subsequent cells\n     */\n    handleFreezeCell = () => {\n        const { cell, onFreezeCell } = this.props;\n        onFreezeCell(cell)\n    }\n    /**\n     * Freeze only this cell\n     */\n    handleFreezeOneCell = () => {\n        const { cell, onFreezeOneCell } = this.props;\n        onFreezeOneCell(cell)\n    }\n    /**\n     * Thaw this and all prior cells\n     */\n    handleThawCell = () => {\n        const { cell, onThawCell } = this.props;\n        onThawCell(cell)\n    }\n    /**\n     * Thaw only this cell\n     */\n    handleThawOneCell = () => {\n        const { cell, onThawOneCell } = this.props;\n        onThawOneCell(cell)\n    }\n\n\n    /**\n     * Handle new cell recommendations\n     */\n    handleRecommendAction = (packageId, commandId) => {\n        const { cell, onRecommendAction } = this.props;\n        onRecommendAction(packageId, commandId, cell);\n    }\n    render() {\n        const {\n            apiEngine,\n            cell,\n            cellNumber,\n            datasets,\n            artifacts,\n            isActiveCell,\n            isNewNext,\n            isNewPrevious,\n            notebook,\n            onCancelExec,\n            onCheckStatus,\n            onDismissCell,\n            onFetchAnnotations,\n            onOutputSelect,\n            onSubmitCell,\n            userSettings,\n            onEditSpreadsheet,\n            onResetRecommendations\n        } = this.props;\n        // The main components of a notebook cell are the cell index, the cell\n        // dropdown menu, the cell command text or input form and the cell\n        // output area.\n        let cellIndex = null;\n        let cellMenu = null;\n        let outputArea = null;\n        // For a cell that contains a new workflow module only the module input\n        // for is being displayed.\n        if (cell.isNewCell()) {\n            cellIndex = '*';\n        } else {\n            // Check if the command that is associated with the cell is filtered\n            // by the user settings. If the command is filtered we either return\n            // a collapsed cell or null depending on the hide filtered cells\n            // property. If a cell is active it is shown always for the user to\n            // know which (and how many) cells are still executing.\n            const cmdSpec = cell.commandSpec;\n            if ((!cell.isActive()) && (userSettings.isFiltered(cmdSpec))) {\n                let errorcss = '';\n                let errorIcon = null;\n                if (cell.isErrorOrCanceled()) {\n                    errorcss = ' collapsed-error-cell';\n                    if (cell.isCanceled()) {\n                        errorIcon = (<Icon name='cancel' color='red' title='Canceled'/>);\n                    } else if (cell.isError()) {\n                        errorIcon = (<Icon name='warning circle' color='red' title='Error' />);\n                    }\n\n                }\n                if (!userSettings.hideFilteredCommands()) {\n                    return (\n                        <div className={'horizontal-divider' + errorcss} >\n                            { errorIcon }\n                            <TextButton\n                                css='code-text'\n                                text={cmdSpec.name}\n                                title='Show cells of this type'\n                                onClick={this.handleRemoveFilteredCommand}\n                            />\n                        </div>\n                    );\n                } else {\n                    return null;\n                }\n            }\n            cellIndex = cellNumber;\n            // The isNewNext and isNewPrevious flags need to be swapped if the\n            // notebook is currently being shown in reverse order\n            let isNewNextFlag = isNewNext;\n            let isNewPreviousFlag = isNewPrevious;\n            if (userSettings.showNotebookReversed()) {\n                isNewNextFlag = isNewPrevious;\n                isNewPreviousFlag = isNewNext\n            }\n            cellMenu = (\n                <CellDropDownMenu\n                    cell={cell}\n                    cellNumber={cellNumber}\n                    isActiveCell={isActiveCell}\n                    isNewNext={isNewNextFlag}\n                    isNewPrevious={isNewPreviousFlag}\n                    notebook={notebook}\n                    onAddFilteredCommand={this.handleAddFilteredCommand}\n                    onCopyCell={this.handleCopyCell}\n                    onCreateBranch={this.handleCreateBranch}\n                    onDeleteCell={this.handleDeleteCell}\n                    onInsertCell={this.handleInsertCell}\n                    onSelectCell={this.handleSelectCell}\n                    onFreezeCell={this.handleFreezeCell}\n                    onFreezeOneCell={this.handleFreezeOneCell}\n                    onThawCell={this.handleThawCell}\n                    onThawOneCell={this.handleThawOneCell}\n                />\n            );\n            outputArea = (\n                <CellOutputArea\n                    cell={cell}\n                    datasets={notebook.datasets}\n                    onCancelExec={onCancelExec}\n                    onCheckStatus={onCheckStatus}\n                    onFetchAnnotations={onFetchAnnotations}\n                    onNavigateDataset={this.handleDatasetNavigate}\n                    onOutputSelect={onOutputSelect}\n                    onSelectCell={this.handleSelectCell}\n                    userSettings={userSettings}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    onRecommendAction={this.handleRecommendAction}\n                    apiEngine={apiEngine}\n                />\n            );\n        }\n        const commandText = (\n            <CellCommandArea\n                apiEngine={apiEngine}\n                datasets={datasets}\n                artifacts={artifacts}\n                cell={cell}\n                isActiveCell={(isActiveCell) && (!notebook.readOnly)}\n                onClick={this.handleSelectCell}\n                onDismiss={onDismissCell}\n                onSelectCell={this.handleSelectCell}\n                onSubmit={onSubmitCell}\n                userSettings={userSettings}\n                onResetRecommendations={onResetRecommendations}\n                onUpdateProgress={this.handleUpdateProgress}\n            />\n        );\n        // The CSS class depends on whether the cell is active or not and\n        // on the cell status\n        const css = (isActiveCell) ? 'cell active-cell' : 'cell inactive-cell';\n        // Add style for cells that are not in success state\n        let cssState = '';\n        if (cell.isErrorOrCanceled()) {\n            cssState = ' error-cell';\n        } else if (cell.isRunning()) {\n            cssState = ' running-cell';\n        } else if (cell.isPending()) {\n            cssState = ' pending-cell';\n        } else if (cell.isFrozen()) {\n            cssState = ' frozen-cell';\n        }\n        return (\n            <ProgressContext.Provider value={this.state}>\n                <table className={css + cssState}><tbody>\n                <tr>\n                    <td className={'cell-index' + cssState} onClick={this.handleSelectCell}>\n                        <a id={\"cell-\"+cellIndex} >\n                            <p className={'cell-index' + cssState}>[{cellIndex}]</p>\n                        </a>\n                        { cellMenu }\n                    </td>\n                    <td className={'cell-area' + cssState}>\n                        { commandText }\n                        { outputArea }\n                    </td>\n                </tr>\n                </tbody></table>\n            </ProgressContext.Provider>\n        );\n    }\n}\n\nexport default NotebookCell;\n","/**\n * Copyright (C) 2020 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../css/TableOfContents.css';\n\n/**\n * Dropdown menu for a notebook cell. Displays two icons with dropdown menus.\n * The first menu contains operations that are available for the cell. The\n * second menu allows to change the content that is being displayed in the cell\n * output area.\n */\nclass TableOfContents extends React.Component {\n  static propTypes = {\n    contents: PropTypes.array.isRequired,\n  }\n  state = {\n    active: false\n  }\n\n  toggleState = () => { \n    this.setState({active: !this.state.active});\n  }\n\n  render() {\n    const {\n      contents\n    } = this.props;\n    const {\n      active\n    } = this.state\n\n    const tocElements = []\n    for(let element of contents){\n      tocElements.push(\n        <a class=\"element\" href={\"#cell-\"+(element.linkToIdx+1)}>{ element.title }</a>\n      )\n    }\n\n    var activityClass = \"inactive\";\n    if(active){ activityClass = \"active\"; };\n\n    return (\n      <div className={ \"toc \" + activityClass }>\n        <a className=\"toctoggle\" onClick={this.toggleState}>≡</a>\n        <div className=\"tocbody\">\n          {tocElements}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TableOfContents;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Icon } from 'semantic-ui-react';\nimport { LargeMessageButton } from '../Button'\nimport NotebookCell from './NotebookCell';\nimport TableOfContents from './TableOfContents';\nimport {INSERT_AFTER, INSERT_BEFORE} from '../../resources/Notebook'\n\n/**\n * List of cells in a read-only notebook.\n */\nclass Notebook extends React.Component {\n    static propTypes = {\n        activeNotebookCell: PropTypes.string,\n        apiEngine: PropTypes.object.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onAddFilteredCommand: PropTypes.func.isRequired,\n        onCancelExec: PropTypes.func.isRequired,\n        onCheckStatus: PropTypes.func.isRequired,\n        onCopyCell: PropTypes.func.isRequired,\n        onCreateBranch: PropTypes.func.isRequired,\n        onDatasetNavigate: PropTypes.func.isRequired,\n        onDeleteCell: PropTypes.func.isRequired,\n        onDismissCell: PropTypes.func.isRequired,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onInsertCell: PropTypes.func.isRequired,\n        onOutputSelect: PropTypes.func.isRequired,\n        onRemoveFilteredCommand: PropTypes.func.isRequired,\n        onSubmitCell: PropTypes.func.isRequired,\n        onSelectNotebookCell: PropTypes.func.isRequired,\n        onFreezeCell: PropTypes.func.isRequired,\n        onFreezeOneCell: PropTypes.func.isRequired,\n        onThawCell: PropTypes.func.isRequired,\n        onThawOneCell: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired\n    }\n    /**\n     * Append a new cell to the current notebook.\n     */\n    handleAppendCell = () => {\n        const { notebook, onInsertCell } = this.props;\n        // If the notebook is empty both parameters are null.\n        if (notebook.isEmpty()) {\n            this.handleRecommendAction('data','load',null);\n        } else {\n            onInsertCell(notebook.lastCell().module, INSERT_AFTER);\n        }\n    }\n    /**\n     * Allow recommendations\n     */\n    handleRecommendAction = (packageId, commandId, cell) => {\n        const { apiEngine, userSettings, onInsertCell } = this.props;\n        try{\n            let packages = apiEngine.packages.toList();\n            for (let pckg of packages){\n                if(packageId === pckg.id){\n                    let cmd = pckg.toList();\n                    for (let command of cmd){\n                        if (commandId === command.id){\n                            command.suggest = true\n                        }\n                    }\n                }\n            }\n        } catch (err){\n            // recommendation system shouldn't break the workflow\n        }\n        if (cell === null){\n            onInsertCell()\n        }else{\n            if (userSettings.showNotebookReversed()) {\n                onInsertCell(cell, INSERT_BEFORE);\n            } else {\n                onInsertCell(cell, INSERT_AFTER);\n            }\n        }\n    }\n\n    /**\n     * Reset all recommendations\n     */\n    handleResetRecommendations = () => {\n        const { apiEngine } = this.props;\n        let packages = apiEngine.packages.toList();\n        for (let pckg of packages){\n            let cmd = pckg.toList();\n            for (let command of cmd){\n                command.suggest = false\n            }\n        }\n    }\n\n    render() {\n        const {\n            activeNotebookCell,\n            apiEngine,\n            notebook,\n            onAddFilteredCommand,\n            onCancelExec,\n            onCheckStatus,\n            onCopyCell,\n            onCreateBranch,\n            onDatasetNavigate,\n            onDeleteCell,\n            onDismissCell,\n            onFetchAnnotations,\n            onInsertCell,\n            onOutputSelect,\n            onRemoveFilteredCommand,\n            onSelectNotebookCell,\n            onSubmitCell,\n            userSettings,\n            onEditSpreadsheet,\n            onFreezeCell,\n            onFreezeOneCell,\n            onThawCell,\n            onThawOneCell,\n        } = this.props;\n        // For empty notebooks a message is shown that contains a button to\n        // add the first notebook cell.\n        if (notebook.cells.length === 0) {\n            return (\n                <LargeMessageButton\n                    message='Your notebook is empty.'\n                    icon='plus'\n                    css='notebook-footer'\n                    caption='Start by adding a Load Dataset Cell'\n                    captionIcon='arrow up'\n                    onClick={this.handleAppendCell}\n                />\n            );\n        }\n        // Create a notebook cell for each workflow module\n        const notebookCells = [];\n        // Counter for notebook cells that contain a workflow module\n        let moduleCount = 1;\n        let isNewPrevious = false;\n        let hasActiveCell = false;\n        let datasets = [];\n        let artifacts = [];\n        for (let i = 0; i < notebook.cells.length; i++) {\n            const cell = notebook.cells[i];\n            let isNewNext = false;\n            if (i < notebook.cells.length - 1) {\n                isNewNext = notebook.cells[i + 1].isNewCell();\n            }\n            // The first active cell will receive the onCancel callback to\n            // trigger the rendering of a cancel button.\n            let onCancelCallback = null;\n            if (cell.isActive()) {\n                if (!hasActiveCell) {\n                    onCancelCallback = onCancelExec;\n                }\n                hasActiveCell = true;\n            }\n            // In an active notebook only the last cell will have a submit\n            // handler if it is a new cell.\n            let submitHandler = null;\n            if (notebook.hasActiveCells()) {\n                if ((cell.isNewCell()) && (i === notebook.cells.length - 1)) {\n                    submitHandler = onSubmitCell;\n                }\n            } else {\n                submitHandler = onSubmitCell;\n            }\n            // The cell number depends on whether the cell is a new cell or\n            // a cell for a workflow module.\n            notebookCells.push(\n                <NotebookCell\n                    key={cell.id}\n                    apiEngine={apiEngine}\n                    cell={cell}\n                    cellNumber={moduleCount}\n                    datasets={datasets}\n                    artifacts={artifacts}\n                    isActiveCell={cell.id === activeNotebookCell}\n                    isNewNext={isNewNext}\n                    isNewPrevious={isNewPrevious}\n                    notebook={notebook}\n                    onAddFilteredCommand={onAddFilteredCommand}\n                    onCancelExec={onCancelCallback}\n                    onCheckStatus={onCheckStatus}\n                    onCopyCell={onCopyCell}\n                    onCreateBranch={onCreateBranch}\n                    onDatasetNavigate={onDatasetNavigate}\n                    onDeleteCell={onDeleteCell}\n                    onDismissCell={onDismissCell}\n                    onInsertCell={onInsertCell}\n                    onOutputSelect={onOutputSelect}\n                    onFetchAnnotations={onFetchAnnotations}\n                    onRemoveFilteredCommand={onRemoveFilteredCommand}\n                    onSelect={onSelectNotebookCell}\n                    onSubmitCell={submitHandler}\n                    userSettings={userSettings}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    onRecommendAction={this.handleRecommendAction}\n                    onResetRecommendations={this.handleResetRecommendations}\n                    onFreezeCell={onFreezeCell}\n                    onFreezeOneCell={onFreezeOneCell}\n                    onThawCell={onThawCell}\n                    onThawOneCell={onThawOneCell}\n                />\n            );\n            if (!cell.isNewCell()) {\n                moduleCount++;\n                datasets = cell.module.datasets;\n                artifacts = cell.module.artifacts;\n            }\n            isNewPrevious = cell.isNewCell();\n        }\n\n        let tableOfContents = null;\n        if(\"tableOfContents\" in notebook.workflow && Array.isArray(notebook.workflow['tableOfContents']) && (notebook.workflow['tableOfContents'].length > 0)) {\n            tableOfContents = (\n                <TableOfContents\n                    contents={notebook.workflow.tableOfContents} />\n            );\n        }\n\n        // Show a message button to append a new cell (only if the last cell\n        // is not already a new cell and the workflow is not in error state\n        // or read only).\n        let appendCellButton = null;\n        const lastCell = notebook.lastCell();\n        if ((!lastCell.isNewCell()) && (!lastCell.isErrorOrCanceled()) && (!notebook.readOnly)) {\n            appendCellButton = (\n                <table className='cell'><tbody>\n                    <tr>\n                        <td className='cell-index'></td>\n                        <td className='cell-button'>\n                        <Icon\n                            size='big'\n                            link\n                            name='plus'\n                            onClick={this.handleAppendCell}\n                            title='Append new cell'\n                         />\n                        </td>\n                    </tr>\n                </tbody></table>\n            );\n        }\n        // Reverse the notebook cells if flag is true\n        let content = null;\n        if (userSettings.showNotebookReversed()) {\n            notebookCells.reverse();\n            content = (\n                <div>\n                    { tableOfContents }\n                    { appendCellButton }\n                    { notebookCells }\n                </div>\n            );\n        } else {\n            content = (\n                <div>\n                    { tableOfContents }\n                    { notebookCells }\n                    { appendCellButton }\n                </div>\n            );\n        }\n        return content;\n    }\n}\n\nexport default Notebook;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { addFilteredCommand, copyCell, removeFilteredCommand } from '../../actions/main/App';\nimport { createBranch, deleteBranch } from '../../actions/project/Branch';\nimport { cancelWorkflowExecution, checkModuleStatus, createtNotebookCell,\n    deleteNotebookCell, dismissCellChanges, fetchWorkflow,\n    hideCellOutput, insertNotebookCell, replaceNotebookCell, showCellChart,\n    selectNotebookCell, showCellDataset, showCellStdout, updateCellDatasetProperties,\n    showCellTimestamps, updateNotebookCellWithUpload, isCellOutputRequest,\n    freezeOrThawNotebookCell } from '../../actions/project/Notebook';\nimport { showModuleSpreadsheet, fetchAnnotations, clearAnnotations } from '../../actions/project/Spreadsheet';\nimport { fetchProject, setBranch } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\nimport { LargeMessageButton } from '../../components/Button';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\nimport AnnotationObject from '../../components/annotation/AnnotationObject';\nimport EditResourceNameModal from '../../components/modals/EditResourceNameModal';\nimport NotebookStatusHeader from '../../components/notebook/NotebookStatusHeader';\nimport Notebook from '../../components/notebook/Notebook';\nimport ResourcePage from '../../components/ResourcePage';\nimport { CONTENT_CHART, CONTENT_DATASET, CONTENT_HIDE, CONTENT_TEXT,\n    CONTENT_TIMESTAMPS, CONTENT_MULTIPLE } from '../../resources/Outputs';\nimport { branchPageUrl, isNotEmptyString, notebookPageUrl,\n    NotebookResource, spreadsheetPageUrl } from '../../util/App';\nimport { HATEOAS_MODULE_APPEND, HATEOAS_MODULE_INSERT,\n    HATEOAS_MODULE_REPLACE, HATEOAS_PROJECT_FILE_UPLOAD,\n    HATEOAS_MODULE_FREEZE, HATEOAS_MODULE_THAW,\n    HATEOAS_MODULE_FREEZE_ONE, HATEOAS_MODULE_THAW_ONE\n} from '../../util/HATEOAS';\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/Chart.css';\nimport CellOutputArea from '../../components/notebook/output/CellOutputArea';\n\n/**\n * The notebook page displays workflows as notebooks and resources that are\n * associated with a workflow (e.g., datasets and charts).\n */\nclass NotebookPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        activeCell: PropTypes.string,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        notebook: PropTypes.object,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        reversed: PropTypes.bool.isRequired,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        annotations: PropTypes.object\n    };\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        // Set the branch modal state\n        const copySupport = document.queryCommandSupported('copy');\n        this.state = {modalOpen: false, modalTitle: 'New branch', moduleId: null, copySupport:copySupport};\n        // Fetch any resources that are currently null or out of sync with the\n        // browser URL. It is assumed that the branch is set if the project is\n        // set (i.e., either both are null or neither of them).\n        const { branch, dispatch, notebook, project, projectList } = this.props;\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        const workflowId = this.props.match.params.workflow_id;\n        if ((project == null) || (project.id !== projectId)) {\n            dispatch(\n                fetchProject(\n                    projectId,\n                    branchId,\n                    (project, branch) => (fetchWorkflow(\n                        project,\n                        branch,\n                        workflowId\n            ))));\n        } else if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchWorkflow(project, project.findBranch(branchId), workflowId));\n        } else if (notebook == null) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        } else if (notebook.id !== workflowId) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        }\n        // Get project listing if not set yet\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. If there is a change in the\n     * pathname we need to ensure that the resources that are referenced in\n     * the path match those that are in the current state.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Check if the location path has changed. The change may either be\n        // the result from an update operation (create branch, delete branch),\n        // a switch between notebook versions or the result of the user using\n        // the back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch, notebook } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            const workflowId = this.props.match.params.workflow_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(\n                    fetchProject(\n                        projectId,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(\n                            project,\n                            branch,\n                            workflowId\n                ))));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(\n                    setBranch(\n                        project,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(project, branch, workflowId))\n                ));\n            } else if ((notebook == null) || (notebook.id !== workflowId)) {\n                dispatch(fetchWorkflow(project, branch, workflowId));\n            }\n        }\n    }\n    /**\n     * Dispatch a command specification object for a command that the user\n     * wants to add to the list of hidden commands.\n     */\n    handleAddFilteredCommand = (command) => {\n        this.props.dispatch(addFilteredCommand(command));\n    }\n    /**\n     * Callback handler to cancel the execution of a currently active workflow.\n     */\n    handleCancelWorkflowExec = () => {\n        const { dispatch, notebook } = this.props;\n        dispatch(cancelWorkflowExecution(notebook));\n    }\n    /**\n     * Call method to fetch workflow module handle and update notebook on state\n     * change.\n     */\n    handleCheckWorkflowStatus = (cell) => {\n        const { dispatch, notebook } = this.props;\n        dispatch(checkModuleStatus(notebook, cell));\n    }\n    /**\n     * Dispatch action to copy the given cell to the clipboard that is contained\n     * in the user settings.\n     */\n    handleCopyCell = (cell) => {\n        const { dispatch } = this.props;\n        dispatch(copyCell(cell));\n    }\n    /**\n     * Create a new branch and switch to that branch on success.\n     */\n    handleCreateBranch = (name) => {\n        const { branch, dispatch, history, notebook, project } = this.props;\n        const { moduleId } = this.state;\n        // The create branch method creates a new branch on the server, updates\n        // the project and push the URL for the new branch onto the history\n        // stack. This should trigger the component to render the head of\n        // the new branch.\n        dispatch(\n            createBranch(project, branch, notebook.id, moduleId, name, history)\n        );\n        this.hideCreateBranchModal();\n    }\n    /**\n     * Delete the given branch. Switch to the project default branch on success.\n     */\n    handleDeleteBranch = (branch) => {\n        const { dispatch, history, project } = this.props;\n        // The delete branch method will delete the branch on the server, update\n        // the project and push the URL of the default branch onto the history\n        // stack. This should trigger the component to render that branch.\n        dispatch(deleteBranch(project, branch, notebookPageUrl, history));\n    }\n    /**\n     * Delete the given notebook cell and update the notebook state on success.\n     */\n    handleDeleteCell = (cell) => {\n        const { dispatch, notebook } = this.props;\n        dispatch(deleteNotebookCell(notebook, cell));\n    }\n    /**\n     * Scroll to the given positions in the given dataset that is being\n     * displayed in the output area of the cell or navigate to the profiled views\n     */\n    handleDatasetNavigate = (module, dataset, offset, limit, profile) => {\n        const { dispatch, notebook } = this.props;\n        if(!profile){\n            dispatch(showCellDataset(notebook, module, dataset, offset, limit));\n        }else{\n            dispatch(updateCellDatasetProperties(()=>(this.props.notebook), module, dataset, offset, limit, profile));\n        }\n    }\n    /**\n     * Handle dismissal of all changes that were made to a notebook cell.\n     */\n    handleDismissCell = (cell) => {\n        const { dispatch, notebook } = this.props;\n        dispatch(dismissCellChanges(notebook, cell));\n    }\n    handleFetchDatasetCellAnnotations = (module, dataset, columnId, rowId) => {\n        const { dispatch } = this.props;\n        dispatch(fetchAnnotations(dataset, columnId, rowId));\n    }\n    /**\n     * Dismiss an open cell annotations modal.\n     */\n    dismissAnnotationModal = () => {\n        const { dispatch } = this.props;\n        dispatch(clearAnnotations());\n    }\n    /**\n     * Event handler when the user wants to insert a new cell. The new cell is\n     * inserted into the notebook at a position that is relative to the given\n     * cell (either before or after).  The cell and position may be null or\n     * undefined if the notebook is empty.\n     */\n    handleInsertCell = (cell, position) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        dispatch(createtNotebookCell(notebook, cell, position));\n    }\n    /**\n     * Event handler when the user wants to freeze a cell and its successors.\n     */\n    handleFreezeCell = (cell) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        const url = cell.module.links.get(HATEOAS_MODULE_FREEZE)\n        dispatch(freezeOrThawNotebookCell(notebook, url, cell.id))\n    }\n    /**\n     * Event handler when the user wants to freeze a cell.\n     */\n    handleFreezeOneCell = (cell) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        const url = cell.module.links.get(HATEOAS_MODULE_FREEZE_ONE)\n        dispatch(freezeOrThawNotebookCell(notebook, url, cell.id))\n    }\n    /**\n     * Event handler when the user wants to thaw a cell and its successors.\n     */\n    handleThawCell = (cell) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        const url = cell.module.links.get(HATEOAS_MODULE_THAW)\n        dispatch(freezeOrThawNotebookCell(notebook, url, cell.id))\n    }\n    /**\n     * Event handler when the user wants to thaw the cell.\n     */\n    handleThawOneCell = (cell) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        const url = cell.module.links.get(HATEOAS_MODULE_THAW_ONE)\n        dispatch(freezeOrThawNotebookCell(notebook, url, cell.id))\n    }\n    /**\n     * Dispatch a command specification object for a command that the user\n     * wants to remove from the list of hidden commands.\n     */\n    handleRemoveFilteredCommand = (command) => {\n        this.props.dispatch(removeFilteredCommand(command));\n    }\n    /**\n     * Dispatch an action to load the resource that is being shown as output\n     * for the notebook cell that displays the given workflow module.\n     */\n    handleSelectOutput = (module, resourceType, resourceName) => {\n        const { dispatch, notebook, userSettings } = this.props;\n        if (resourceType === CONTENT_CHART) {\n            dispatch(showCellChart(notebook, module, resourceName));\n        } else if (resourceType === CONTENT_DATASET) {\n            dispatch(showCellDataset(\n                notebook,\n                module,\n                notebook.getDatasetForModule(module, resourceName),\n                0,\n                userSettings.cellRowLimit()\n            ));\n        } else if (resourceType === CONTENT_HIDE) {\n            dispatch(hideCellOutput(notebook, module));\n        } else if (resourceType === CONTENT_TEXT) {\n            dispatch(showCellStdout(notebook, module));\n        } else if (resourceType === CONTENT_TIMESTAMPS) {\n            dispatch(showCellTimestamps(notebook, module));\n        } else if (resourceType === CONTENT_MULTIPLE){\n            dispatch(showCellStdout(notebook, module));\n        }\n    }\n    /**\n     * Dispatch action to set the given cell as the new active cell of the\n     * notebook. This will only be done if the given cell is a cell that is\n     * associated with a workflow module.\n     */\n    handleSelectActiveCell = (cell) => {\n        this.props.dispatch(selectNotebookCell(cell));\n    }\n    /**\n     * Show branch history page.\n     */\n    handleShowBranch = () => {\n        const { branch, history, project } = this.props;\n        history.push(branchPageUrl(project.id, branch.id));\n    }\n    /**\n     * Dispatch action to load the workflow at the head of the current branch.\n     */\n    handleShowBranchHead = () => {\n        const { branch, history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n    handleSubmitCell = (cell, commandSpec, data, onUpdateProgress) => {\n        const { dispatch, notebook, project } = this.props;\n        // Create the request object containing the package and command\n        // identifier together with the form data\n        const req = {\n            packageId: commandSpec.packageId,\n            commandId: commandSpec.id,\n            arguments: data\n        };\n        // The fileArg value will determine whether we need to upload a file\n        // first or not.\n        let fileArg = null;\n        if (commandSpec.fileParameter != null) {\n            fileArg = data.find((arg) => (\n                arg.id === commandSpec.fileParameter.id)\n            );\n        }\n        if (cell.isNewCell()) {\n            // Insert a new cell. The URL depends on whether the cell is the\n            // last cell in the notebook or not.\n            let url = null;\n            if (notebook.lastCell().id === cell.id) {\n                url = notebook.workflow.links.get(HATEOAS_MODULE_APPEND);\n            } else {\n                for (let i = 0; i < notebook.cells.length; i++) {\n                    if (notebook.cells[i].id === cell.id) {\n                        for (let j = i + 1; j < notebook.cells.length; j++) {\n                            const c = notebook.cells[j];\n                            if (!c.isNewCell()) {\n                                url = c.module.links.get(HATEOAS_MODULE_INSERT);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // If the file argument is not null we need to upload the file first\n            if ((fileArg != null) && (fileArg.value.file != null)) {\n                // Need to upload file first\n                dispatch(updateNotebookCellWithUpload(\n                    notebook,\n                    url,\n                    req,\n                    insertNotebookCell,\n                    cell.id,\n                    project.links.get(HATEOAS_PROJECT_FILE_UPLOAD),\n                    fileArg,\n                    onUpdateProgress\n                ));\n            } else {\n                dispatch(insertNotebookCell(notebook, url, req, cell.id));\n            }\n        } else {\n            // Replace an existing cell\n            const url = cell.module.links.get(HATEOAS_MODULE_REPLACE);\n            // If the file argument is not null we need to upload the file first\n            if ((fileArg != null) && (fileArg.value.fileid == null) && (fileArg.value.file != null)) {\n                // Need to yupload file first\n                dispatch(updateNotebookCellWithUpload(\n                    notebook,\n                    url,\n                    req,\n                    replaceNotebookCell,\n                    cell.id,\n                    project.links.get(HATEOAS_PROJECT_FILE_UPLOAD),\n                    fileArg,\n                    onUpdateProgress\n                ));\n            } else {\n                dispatch(replaceNotebookCell(notebook, url, req, cell.id));\n            }\n        }\n    }\n    /**\n     * Dispatch action to switch to a given branch and retrieve the workflow at\n     * the head of the branch.\n     */\n    handleSwitchBranch = (branch) => {\n        const { history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n    /**\n     * Hide the create new branch modal.\n     */\n    hideCreateBranchModal = () => {\n        this.setState({modalOpen: false, moduleId: null});\n    }\n    /**\n     * Switch to spreadsheet view and load the selected dataset for module.\n     */\n    handleEditSpreadsheet = (dataset, moduleId) => {\n        const { dispatch, history, branch, project } = this.props;\n        const projectId = project.id;\n        const datasetId = dataset.id;\n        dispatch(showModuleSpreadsheet(dataset, 0, 25, moduleId));  \n        history.push(spreadsheetPageUrl(projectId, branch.id, datasetId));\n    }\n    /**\n     * The content of the notebook page depends on the type of resource that\n     * is being shown.\n     */\n    render() {\n        const {\n            actionError,\n            activeCell,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            notebook,\n            project,\n            projectList,\n            reversed,\n            serviceApi,\n            userSettings,\n            annotations\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (notebook == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading Notebook ...' />;\n        } else if (notebook != null) {\n            const { modalOpen, modalTitle, copySupport } = this.state;\n            // List of notebook cells\n            let notebookCells =  (\n                <Notebook\n                    activeNotebookCell={activeCell}\n                    apiEngine={serviceApi.engine}\n                    notebook={notebook}\n                    project={project}\n                    reversed={reversed}\n                    onAddFilteredCommand={this.handleAddFilteredCommand}\n                    onCancelExec={this.handleCancelWorkflowExec}\n                    onChangeGrouping={this.handleChangeGrouping}\n                    onCheckStatus={this.handleCheckWorkflowStatus}\n                    onCopyCell={this.handleCopyCell}\n                    onCreateBranch={this.showCreateBranchModal}\n                    onDatasetNavigate={this.handleDatasetNavigate}\n                    onDeleteCell={this.handleDeleteCell}\n                    onDismissCell={this.handleDismissCell}\n                    onFetchAnnotations={this.handleFetchDatasetCellAnnotations}\n                    onInsertCell={this.handleInsertCell}\n                    onOutputSelect={this.handleSelectOutput}\n                    onRemoveFilteredCommand={this.handleRemoveFilteredCommand}\n                    onSelectNotebookCell={this.handleSelectActiveCell}\n                    onSubmitCell={this.handleSubmitCell}\n                    userSettings={userSettings}\n                \tonEditSpreadsheet={this.handleEditSpreadsheet}\n                    onFreezeCell={this.handleFreezeCell}\n                    onFreezeOneCell={this.handleFreezeOneCell}\n                    onThawCell={this.handleThawCell}\n                    onThawOneCell={this.handleThawOneCell}\n                />\n            );\n            // Add modal form for user to enter branch name when creating a new\n            // branch.\n            let notebookFooter = (\n                <EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={modalOpen}\n                    prompt='Enter a name for the new branch'\n                    title={modalTitle}\n                    onCancel={this.hideCreateBranchModal}\n                    onSubmit={this.handleCreateBranch}\n                />\n            );\n            if (notebook.readOnly) {\n                notebookFooter = (\n                    <div className='notebook-footer'>\n                        <LargeMessageButton\n                            message='This is a read-only notebook. Create a new branch to start editing.'\n                            icon='code-fork'\n                            title='Create a new branch for this notebook'\n                            onClick={() => (this.showCreateBranchModal())}\n                        />\n                        { notebookFooter }\n                    </div>\n                );\n            }\n            const annotationsObject = (\n            \t\t<AnnotationObject\n\t\t\t            annotation={annotations}\n            \t\t    onDiscard={this.dismissAnnotationModal}\n\t\t\t        />\n\t        );\n            // Layout has reverse button at top followed by list of notebook cells\n            let pageContent = null;\n            const cellOutput = isCellOutputRequest();\n            if(cellOutput){\n            \t pageContent = ( \n\t    \t\t\t <CellOutputArea\n\t\t                cell={notebook.cells.find(ccell => ccell.id === cellOutput)}\n                        isActive={isActive}\n                        datasets={notebook.datasets}\n\t\t                onCancelExec={this.handleCancelWorkflowExec}\n\t\t                onCheckStatus={this.handleCheckWorkflowStatus}\n\t\t                onFetchAnnotations={this.handleFetchDatasetCellAnnotations}\n\t\t                onNavigateDataset={this.handleDatasetNavigate}\n\t\t                onOutputSelect={this.handleSelectOutput}\n\t\t                onSelectCell={this.handleSelectActiveCell}\n\t\t                userSettings={userSettings}\n\t\t                onEditSpreadsheet={this.handleEditSpreadsheet}\n\t\t            />\n\t           );\n            }\n            else{\n\t            pageContent = (\n\t                <div className=\"notebook\">\n\t                    <NotebookStatusHeader\n\t                        branch={branch}\n\t                        notebook={notebook}\n\t                        onShowHistory={this.handleShowBranch}\n\t                        onSwitchBranch={this.handleSwitchBranch}\n\t                        project={project}\n\t                        copySupport={copySupport}\n\t                    />\n\t                    { notebookCells }\n\t                    { notebookFooter }\n\t                    { annotationsObject }\n\t                </div>\n\t            );\n            }\n            console.log(\"CancelExec at NotebookPage: \" + this.handleCancelWorkflowExec)\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    notebook={notebook}\n                    onCreateBranch={this.showCreateBranchModal}\n                    onDeleteBranch={this.handleDeleteBranch}\n                    onShowNotebook={this.handleShowBranchHead}\n                    onSwitchBranch={this.handleSwitchBranch}\n                    onCancelExec={this.handleCancelWorkflowExec}\n                    project={project}\n                    projectList={projectList}\n                    resource={NotebookResource()}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                />\n            );\n        }\n        return content;\n    }\n    /**\n     * Show the create new branch modal. Set the modal title to indicate the\n     * cell index at which the new branch is created.\n     */\n    showCreateBranchModal = (module) => {\n        const { notebook } = this.props;\n        let moduleId = null;\n        let modalTitle = 'Create branch';\n        if (module == null) {\n            if (notebook.cells.length > 0) {\n                // Find the last cell that has a module\n                for (let i = notebook.cells.length - 1; i >= 0; i--) {\n                    const cell = notebook.cells[i];\n                    if (!cell.isNewCell()) {\n                        moduleId = cell.module.id;\n                        break;\n                    }\n                }\n            }\n        } else {\n            let count = 0;\n            for (let i = 0; i < notebook.cells.length; i++) {\n                const cell = notebook.cells[i];\n                if (!cell.isNewCell()) {\n                    count++;\n                    if (module.id === cell.id) {\n                        if (count === 1) {\n                            modalTitle = 'New branch for cell [1]';\n                        } else {\n                            modalTitle = 'New branch for cells [1-' + (count) + ']';\n                        }\n                        break;\n                    }\n                }\n            }\n            moduleId = module.id;\n        }\n        this.setState({modalOpen: true, modalTitle, moduleId: moduleId});\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        activeCell: state.notebookPage.activeCell,\n        branch: state.projectPage.branch,\n        fetchError: state.notebookPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.notebookPage.isFetching,\n        notebook: state.notebookPage.notebook,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        reversed: state.notebookPage.reversed,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        annotations: state.spreadsheet.annotations\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(NotebookPage));\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { Dimmer, Icon, Loader, Dropdown, Menu} from 'semantic-ui-react';\nimport { insertNotebookCell, updateNotebookCellWithUpload, checkModuleStatus } from '../../actions/project/Notebook';\nimport {\n    clearAnnotations, deleteAnnotations, fetchAnnotations, showSpreadsheet,\n    submitUpdate\n} from '../../actions/project/Spreadsheet';\nimport { CloseButton } from '../../components/Button'\nimport AnnotationObject from '../../components/annotation/AnnotationObject';\nimport EditResourceNameModal from '../../components/modals/EditResourceNameModal';\nimport GridCell from '../../components/spreadsheet/grid/GridCell';\nimport HeaderCell from '../../components/spreadsheet/grid/HeaderCell';\nimport RowIndexCell from '../../components/spreadsheet/grid/RowIndexCell';\nimport SpreadsheetScrollbar from '../../components/spreadsheet/SpreadsheetScrollbar';\nimport { MOVE, isNotEmptyString, isNonNegativeInt } from '../../util/App';\nimport {\n    VIZUAL, VIZUAL_OP, deleteColumn, deleteRow, insertColumn, insertRow, moveColumn,\n    moveRow,  renameColumn, sortDataset, updateCell, updateAnnotation\n} from '../../util/Vizual';\nimport '../../../css/App.css';\nimport '../../../css/Notebook.css';\nimport '../../../css/Spreadsheet.css';\nimport { HATEOAS_MODULE_APPEND } from '../../util/HATEOAS';\nimport { Draggable } from 'react-drag-and-drop'\nimport ColumnSelector from '../../components/notebook/input/form/ColumnSelector';\nimport { ApiPolling } from '../../components/Api';\n\n/**\n * Component to display a dataset in spreadsheet format. Spreadsheets are\n * currently displayed as Html tables.\n */\nclass Spreadsheet extends React.Component {\n    static propTypes = {\n        annotations: PropTypes.object,\n        dataset: PropTypes.object,\n        isUpdating: PropTypes.bool.isRequired,\n        project: PropTypes.object.isRequired,\n        serviceApi: PropTypes.object.isRequired,\n        notebook: PropTypes.object.isRequired,\n        serviceProperties: PropTypes.object.isRequired\n    }\n    constructor(props) {\n        super(props);\n        // Keep the id and coordinates of the active cell in the local state.\n        this.state = {\n            activeColumnId: -1,\n            activeRowId: -1,\n            activeColumnIndex: -1,\n            activeRowIndex: -1,\n            modal: null,\n            modalValue: null,\n            originalCellValue: null,\n            showNotebookCell: false,\n            updatedCellValue: null,\n            updatingColumnId: -1,\n            updatingRowId: -1,\n            updatingValue: null,\n            cellLimit:25,\n            activeDataset:null,\n            modalResult: '',\n            notebookRunning: false\n        }\n    }\n    static getDerivedStateFromProps(props, state){\n        let newState = {};\n        if (props.dataset.name !== state.activeDataset){\n            newState = {\n                cellLimit: 25,\n                activeDataset: props.dataset.name\n            }\n        }\n        if(state.cellLimit > props.dataset.rowCount){\n            newState = {\n                ...newState,\n                cellLimit: props.dataset.rowCount\n            }\n        }\n        return newState;\n    }\n\n    componentWillReceiveProps(newProps) {\n        // Clear the active cell if a different dataset is being shown\n        let clearCell = false;\n        const currentDataset = this.props.dataset;\n        const newDataset = newProps.dataset;\n        if (currentDataset != null) {\n            if (newDataset != null) {\n                clearCell = (currentDataset.name !== newDataset.name);\n            } else {\n                clearCell = true;\n            }\n        } else {\n            clearCell = true;\n        }\n        if (clearCell === true) {\n            this.clearActiveCell();\n        }\n    }\n    /**\n     * Append a module to the current workflow.\n     */\n    appendModule = (command, data) => {\n        const { dispatch, dataset, serviceApi, notebook } = this.props;\n        // Create data object for request.\n        const reqData = {type: command.type, id: command.id, arguments: data};\n        //notebook.workflow\n        // Hide notebook cell\n        this.toggleNotebookCell();\n        // Dispatch update request. If the current dataset is being renamed or\n        // deleted we need to switch to notebook view\n        if (\n            (command.type === VIZUAL_OP) &&\n            ((command.id === VIZUAL.DROP_DATASET) || (command.id === VIZUAL.RENAME_DATASET))\n        ) {\n            dispatch(insertNotebookCell(notebook.workflow.links.get(HATEOAS_MODULE_APPEND), reqData));\n        } else if ((command.type === VIZUAL_OP) && (command.id === VIZUAL.LOAD)) {\n            const name = data.name;\n            dispatch(\n                updateNotebookCellWithUpload(\n                    notebook.workflow.links.get(HATEOAS_MODULE_APPEND),\n                    reqData,\n                    (url, data) => (submitUpdate(notebook.workflow, {name: name, offset:0}, data)),\n                    serviceApi.links.upload\n                )\n            );\n        } else {\n            dispatch(submitUpdate(notebook.workflow, dataset, reqData))\n        }\n    }\n    /**\n     * Set the current active cell to undefined state.\n     */\n    clearActiveCell = () => {\n        // Submit any changes to the current active cell\n        this.submitPendingUpdate();\n        this.setState({\n            activeColumnId: -1,\n            activeRowId: -1,\n            activeColumnIndex: -1,\n            activeRowIndex: -1,\n            originalCellValue: null,\n            updatedCellValue: null\n        });\n    }\n    deleteUserAnnotation = (annotation, annoId) => {\n        const { dispatch, dataset } = this.props;\n        const { column, row } = annotation;\n        dispatch(deleteAnnotations(dataset, column, row, annoId));\n    }\n    /**\n     * Dismiss an open cell annotations modal.\n     */\n    dismissAnnotationModal = () => {\n        const { dispatch } = this.props;\n        dispatch(clearAnnotations());\n    }\n    /**\n     * Dismiss any open modals.\n     */\n    dismissModal = () => (this.setState({modal: null, modalValue: null, modalResult:''}))\n    /**\n     * Keep track of the value of the active cell.\n     */\n    handleCellUpdate = (value) => {\n        this.setState({updatedCellValue: value})\n    }\n    /**\n     * Move the active grid cell.\n     */\n    handleMoveCell = (direction) => {\n        const {\n            activeColumnId, activeRowId, activeColumnIndex, activeRowIndex\n        } = this.state;\n        // Do nothing if the active cell is not a grid cell.\n        if ((activeColumnId === -1) || (activeRowId === -1)) {\n            return;\n        }\n        const { dataset } = this.props;\n        // Get the index of the first and last row in the dataset\n        const minRowIndex = dataset.rows[0].index;\n        const maxRowIndex = dataset.rows[dataset.rows.length - 1].index;\n        const columns = dataset.columns;\n        let colIdx = activeColumnIndex;\n        let rowIdx = activeRowIndex;\n        if (direction === MOVE.UP) {\n            rowIdx -= 1;\n            if (rowIdx < minRowIndex) {\n                rowIdx = maxRowIndex;\n            }\n        } else if (direction === MOVE.DOWN) {\n            rowIdx += 1;\n            if (rowIdx > maxRowIndex) {\n                rowIdx = minRowIndex;\n            }\n        } else if (direction === MOVE.RIGHT) {\n            colIdx += 1;\n            if (colIdx >= columns.length) {\n                colIdx = 0;\n                rowIdx += 1;\n                if (rowIdx > maxRowIndex) {\n                    rowIdx = minRowIndex;\n                }\n            }\n        } else if (direction === MOVE.LEFT) {\n            colIdx -= 1;\n            if (colIdx < 0) {\n                colIdx = columns.length - 1;\n                rowIdx -= 1;\n                if (rowIdx < minRowIndex) {\n                    rowIdx = maxRowIndex;\n                }\n            }\n        }\n        // Update the active cell information\n        this.handleSelectCell(columns[colIdx].id, dataset.rowAtIndex(Math.abs(dataset.offset-rowIdx)).id, colIdx, rowIdx);\n    }\n    /**\n     * Move the active header cell. Only supports moving left or right.\n     */\n    handleMoveHeader = (direction) => {\n        const { activeColumnId, activeRowId, activeColumnIndex } = this.state;\n        // Do nothing if the active cell is not a header cell.\n        if ((activeColumnId === -1) || (activeRowId !== -1)) {\n            return;\n        }\n        const { dataset } = this.props;\n        const columns = dataset.columns;\n        let colIdx = activeColumnIndex;\n        if (direction === MOVE.RIGHT) {\n            colIdx += 1;\n            if (colIdx >= columns.length) {\n                colIdx = 0;\n            }\n        } else if (direction === MOVE.LEFT) {\n            colIdx -= 1;\n            if (colIdx < 0) {\n                colIdx = columns.length - 1;\n            }\n        }\n        // Update the active cell information\n        this.handleSelectCell(columns[colIdx].id, -1, colIdx, -1);\n    }\n    /**\n     * Navigate to a different block of the underlying dataset.\n     */\n    handleNavigate = (dataseti, offset, limit) => {\n        // Clear active cell. Will submit any changes that were made to the\n        // value of the current active cell.\n    \tthis.clearActiveCell();\n        // Dispatch navitation request\n        const { dispatch, dataset } = this.props;\n        let url = dataset.links.getDatasetUrl(offset, limit);\n        dispatch(showSpreadsheet(dataset, url));\n    }\n    /**\n     * Set the coordinates of the selected cell.\n     */\n    handleSelectCell = (columnId, rowId, columnIndex, rowIndex) => {\n        // Ignore event while updating\n        const { isUpdating, notebook } = this.props;\n        if ((isUpdating)  || (notebook.workflow.readOnly)) {\n            return;\n        }\n        // Submit any changes to the current active cell\n        this.submitPendingUpdate();\n        // Get the current value of the selected sell\n        let value = null;\n        if (columnIndex !== -1) {\n            const { dataset } = this.props;\n            if (rowIndex !== -1) {\n                value = dataset.rowAtIndex(Math.abs(dataset.offset-rowIndex)).values[columnIndex];\n            } else {\n                value = dataset.columns[columnIndex].name;\n            }\n        }\n        this.setState({\n            activeColumnId: columnId,\n            activeRowId: rowId,\n            activeColumnIndex: columnIndex,\n            activeRowIndex: rowIndex,\n            originalCellValue: value,\n            updatedCellValue: value\n        });\n    }\n    handleSubmitModal = (value) => {\n        const { dataset } = this.props;\n        const { modal, modalValue } = this.state;\n        this.dismissModal();\n        if (modal === VIZUAL.INSERT_COLUMN) {\n            return this.submitVizualCommand(\n                insertColumn(dataset.name, value, modalValue)\n            );\n        } else if (modal === VIZUAL.MOVE_COLUMN) {\n            return this.submitVizualCommand(\n                moveColumn(dataset.name, modalValue, value)\n            );\n        } else if (modal === VIZUAL.MOVE_ROW) {\n            return this.submitVizualCommand(\n                moveRow(dataset.name, modalValue, value)\n            );\n        }\n    }\n    /**\n     * Handle a VizUAL action triggered by one of the header or index cells.\n     * argument (para) is optional (e.g., used to specify the sort order).\n     */\n    handleMoveAction = (cmdId, srcValue, targetValue) => {\n    \tconst { dataset } = this.props;\n    \tif (cmdId === VIZUAL.MOVE_COLUMN) {\n            return this.submitVizualCommand(\n                moveColumn(dataset.name, srcValue, targetValue)\n            );\n        } else if (cmdId === VIZUAL.MOVE_ROW) {\n            return this.submitVizualCommand(\n                moveRow(dataset.name, srcValue, targetValue)\n            );\n        }\n    }\n   /**\n     * Handle a VizUAL action triggered by one of the context menues. The third\n     * \n     */\n    handleVizualAction = (cmdId, identifier, para) => {\n        const { dataset } = this.props;\n        switch (cmdId) {\n            case VIZUAL.INSERT_COLUMN:\n            case VIZUAL.MOVE_COLUMN:\n            case VIZUAL.MOVE_ROW:\n                this.setState({modal: cmdId, modalValue: identifier});\n                return;\n            case VIZUAL.DELETE_COLUMN:\n                return this.submitVizualCommand(\n                    deleteColumn(dataset.name, identifier)\n                );\n            case VIZUAL.DELETE_ROW:\n                return this.submitVizualCommand(\n                    deleteRow(dataset.name, identifier)\n                );\n            case VIZUAL.INSERT_ROW:\n                return this.submitVizualCommand(\n                    insertRow(dataset.name, identifier)\n                );\n            case VIZUAL.SORT:\n            return this.submitVizualCommand(\n                sortDataset(dataset.name, identifier, para)\n            );\n            default:\n                return;\n        }\n    }\n    toggleNotebookCell = () => {\n        const { showNotebookCell } = this.state;\n        this.setState({showNotebookCell: !showNotebookCell});\n    }\n    handleFetchAnnotations = (columnId, rowId) => {\n        const { dispatch, dataset } = this.props;\n        dispatch(fetchAnnotations(dataset, columnId, rowId));\n    }\n    /**\n     * handles dropdown menu requests\n     */\n    handleDisplayRows = (e, data) => {\n        const {dataset} = this.props;\n        const {cellLimit} = this.state;\n        if(data.value!==cellLimit){\n            if (data.value ==='all' && cellLimit !==dataset.rowCount){\n                this.setState({cellLimit:dataset.rowCount});\n                this.handleNavigate(dataset, 0, dataset.rowCount)\n            }else if(data.value !=='all'){\n                this.setState({cellLimit: data.value});\n                this.handleNavigate(dataset, dataset.offset, data.value);\n            }\n        }\n    };\n    /**\n     * Render the spreadsheet as a Html table.\n     */\n    render() {\n        const {\n            annotations,\n            dataset,\n            isUpdating,\n            notebook,\n            serviceProperties,\n            dispatch\n        } = this.props;\n        const {\n            activeColumnId,\n            activeRowId,\n            showNotebookCell,\n            updatingColumnId,\n            updatingRowId,\n            updatingValue,\n            notebookRunning,\n            cellLimit\n        } = this.state;\n        const columns = dataset.columns;\n        //\n        // Grid header\n        //\n        let header = [\n            <RowIndexCell\n                key={-1}\n                rowIndex={-1}\n                value={' '}\n                onClick={this.clearActiveCell}\n                isSpreadsheet={true}\n            />\n        ];\n        for (let cidx = 0; cidx < columns.length; cidx++) {\n            const column = columns[cidx];\n            const isActive = (activeColumnId === column.id) && (activeRowId === -1);\n            const isBlocked = ((isUpdating) && (updatingColumnId === column.id) && (updatingRowId === -1));\n            let columnName = null;\n            if (isBlocked) {\n                columnName = updatingValue;\n            } else {\n                columnName = column.name;\n            }\n            header.push(\n                <HeaderCell\n                    key={column.id}\n                    column={column}\n                    columnIndex={cidx}\n                    disabled={isUpdating || notebook.workflow.readOnly}\n                    isActive={(!isUpdating) && (isActive)}\n                    isUpdating={isBlocked}\n                    value={columnName}\n                    onAction={this.handleVizualAction}\n                    onClick={this.handleSelectCell}\n                    onMove={this.handleMoveHeader}\n                    onUpdate={this.handleCellUpdate}\n                \tisEditing={true}\n                    onMoveAction={this.handleMoveAction}\n                    isSpreadsheet={true}\n                />\n            );\n        }\n        header = (<tr>{header}</tr>);\n        //\n        // Grid rows\n        //\n        const rows = [];\n        const offset = dataset.offset\n        for (let ridx = 0; ridx < dataset.rows.length; ridx++) {\n            const row = dataset.rows[ridx];\n            const cells = [\n                <RowIndexCell\n                    key={row.id}\n                    rowId={row.id}\n                    disabled={isUpdating || notebook.workflow.readOnly}\n                    rowIndex={ridx + offset}\n                    value={ridx + offset}\n                    onAction={this.handleVizualAction}\n                    onClick={this.clearActiveCell}\n                    onMoveAction={this.handleMoveAction}\n                />\n            ];\n            for (let cidx = 0; cidx < columns.length; cidx++) {\n                const column = columns[cidx];\n                const isActive = (activeColumnId === column.id) && (activeRowId === row.id);\n                const isBlocked = ((isUpdating) && (updatingColumnId === column.id) && (updatingRowId === row.id));\n                let value = null;\n                if (isBlocked) {\n                    value = updatingValue;\n                } else {\n                    value = row.values[cidx];\n                }\n                cells.push(\n                    <GridCell\n                        key={'C' + column.id + 'R' + row.id}\n                        column={column}\n                        columnIndex={cidx}\n                        hasAnnotations={dataset.hasAnnotations(column.id, row.id)}\n                        isActive={(!isUpdating) && (isActive)}\n                        isUpdating={isBlocked}\n                        rowId={row.id}\n                        rowIndex={ridx + offset}\n                        value={value}\n                        onClick={this.handleSelectCell}\n                        onMove={this.handleMoveCell}\n                        onUpdate={this.handleCellUpdate}\n                        onFetchAnnotations={this.handleFetchAnnotations}\n                    />\n                );\n            }\n            rows.push(<Draggable key={row.id} \n                          wrapperComponent={<tr></tr>} \n                          type=\"row-index-cell\" \n        \t\t\t      data={row.id} \n\t\t\t              onDragStart={this.handleDragStart}  >\n\t\t\t\t              {cells}\n\t\t\t\t          </Draggable>);\n        }\n        let showAnnoHandler = null;\n        if ((activeColumnId >= 0) && (activeRowId !== -1)) {\n            showAnnoHandler = this.showAnnotationModal;\n        }\n        // Show a notebook cell to append at the end of the current workflow.\n        let notebookCell = null;\n        if (showNotebookCell) {\n            notebookCell = (\n                <div className='notebook-cell-xp-new'>\n                    <table className='cell-area'><tbody>\n                        <tr>\n                            <td className='cell-index'>\n                                <CloseButton\n                                    name='minus-square-o'\n                                    onClick={this.toggleNotebookCell}\n                                />\n                            </td>\n                            <td className='cell-cmd'>\n                                <div className='cell-form'>\n                                    \n                                </div>\n                            </td>\n                        </tr>\n                    </tbody></table>\n                </div>\n            );\n        }\n\n        let annoButtonCss = null;\n        if (showAnnoHandler != null) {\n            annoButtonCss = 'icon-button';\n        }\n        let notebookCellButton = null;\n        if (!notebook.workflow.readOnly) {\n            let cellIcon = 'plus square outline';\n            if (showNotebookCell) {\n                cellIcon = 'minus square outline';\n            }\n            notebookCellButton = (\n                <span className='left-padding-md'>\n                    <Icon\n                        className='icon-button'\n                        title='Add notebook cell'\n                        name={cellIcon}\n                        onClick={this.toggleNotebookCell}\n                    />\n                </span>\n            );\n        }\n        let dropdownItems = [];\n        for(let v of [25, 50, 100, 150]){\n            if(v < dataset.rowCount){\n                dropdownItems.push(\n                    <Dropdown.Item text={`${v} rows`} value={v} onClick={this.handleDisplayRows}/>\n                )\n            }\n        }\n        dropdownItems.push(\n            <Dropdown.Item text={`All rows(${dataset.rowCount})`} label={dataset.rowCount>serviceProperties.maxDownloadRowLimit&&`row limit (${serviceProperties.maxDownloadRowLimit}) exceeded`}\n                           disabled={dataset.rowCount>serviceProperties.maxDownloadRowLimit} value=\"all\" onClick={this.handleDisplayRows}/>\n        )\n        let apiPolling = null;\n        if(notebook.cells[notebook.cells.length - 1].isRunning()){\n        \tapiPolling = <ApiPolling\n\t\t            interval={1000}\n\t\t            //onCancel={onCancelExec}\n\t\t            onFetch={this.handleCheckStatus}\n\t\t            resource={notebook.cells[notebook.cells.length - 1]}\n\t\t            text={notebook.cells[notebook.cells.length - 1].isRunning() ? 'Running ...' : 'Pending ...'}\n\t\t        />\n        }\n        else if(!notebook.cells[notebook.cells.length - 1].isRunning() && notebookRunning){\n        \tapiPolling = <ApiPolling\n\t            interval={1000}\n\t            //onCancel={onCancelExec}\n\t            onFetch={this.handleCheckStatus}\n\t            resource={notebook.cells[notebook.cells.length - 1]}\n\t            text={notebook.cells[notebook.cells.length - 1].isRunning() ? 'Running ...' : 'Pending ...'}\n\t        />\n        \tlet newDataset = notebook.cells[notebook.cells.length - 1].module.datasets.find(ds => ds.name === dataset.name)\n        \tlet url = newDataset.links.getDatasetUrl(dataset.offset, cellLimit);\n            dispatch(showSpreadsheet(dataset, url));\n        }\n        return (\n            <div className='spreadsheet-container'>\n                <h1 className='dataset-name'>\n                    {dataset.name}\n                    <span className='left-padding-lg'>\n                        <Icon\n                            className={annoButtonCss}\n                            name='comment alternate outline'\n                            title='Show annotations'\n                            disabled={showAnnoHandler === null}\n                            onClick={showAnnoHandler}\n                        />\n                    </span>\n                    { notebookCellButton }\n                    <Menu compact style={{float:'right'}}>\n                        <Dropdown\n                            selection\n                            text={`Showing ${this.state.cellLimit} rows`}\n                            options={dropdownItems}\n                        />\n                    </Menu>\n                </h1>\n                <AnnotationObject\n                    annotation={annotations}\n                    onDelete={this.deleteUserAnnotation}\n                    onDiscard={this.dismissAnnotationModal}\n                    onSubmit={this.submitUserAnnotation}\n                />\n                <Dimmer.Dimmable dimmed={isUpdating}>\n                    <Loader active={isUpdating}/>\n                    { notebookCell }\n                    <div className='spreadsheet-container'>\n\t                    <div className='spreadsheet-table-container'>\n\t                    <table className='spreadsheet'>\n\t                        <thead>{header}</thead>\n\t                        <tbody>{rows}</tbody>\n\t                    </table>\n\t                    </div>\n\t                    <SpreadsheetScrollbar\n                            cellLimit={this.state.cellLimit}\n\t\t                    dataset={dataset}\n\t\t                    onNavigate={this.handleNavigate}\n\t\t                />\n\t                </div>\n                </Dimmer.Dimmable>\n                {this.showModal()}\n                {apiPolling}\n            </div>\n        );\n    }\n    handleCheckStatus = () => {\n    \tconst { dispatch, notebook } = this.props;\n    \tdispatch(checkModuleStatus(notebook, notebook.cells[notebook.cells.length - 1]));\n    \tthis.setState({notebookRunning: notebook.cells[notebook.cells.length - 1].isRunning()})\n    \t\n    } \n    /**\n     * Show the annotations modal for the current active cell.\n     */\n    showAnnotationModal = () => {\n        const { dispatch, dataset } = this.props;\n        const { activeColumnId, activeRowId } = this.state;\n        dispatch(fetchAnnotations(dataset, activeColumnId, activeRowId));\n    }\n    handleMoveColumnModalInputChange = (id, value) => {\n    \tthis.setState({modalResult: value});\n    }\n    handleMoveRowModalInputChange = (event, value) => {\n    \tthis.setState({modalResult: value.value});\n    }\n    /**\n     * Show modal if the internal state .modal value is set.\n     */\n    showModal = () => {\n        const { modal, modalValue, modalResult } = this.state;\n        let content = null;\n        let inputComponent = null;\n        let value = '';\n        if (modal != null) {\n            let valueValidFunc = null;\n            let modalTitle = null;\n            let modalPrompt = null;\n            if (modal === VIZUAL.INSERT_COLUMN) {\n                valueValidFunc = isNotEmptyString;\n                modalTitle = 'Insert Column';\n                modalPrompt = 'Name of new column';\n            } else if (modal === VIZUAL.MOVE_COLUMN) {\n                const { dataset } = this.props;\n                const columns = dataset.columns;\n                let column = null;\n                for (let i = 0; i < columns.length; i++) {\n                    if (columns[i].id === modalValue) {\n                        column = columns[i];\n                        break;\n                    }\n                }\n                value = modalResult;\n                inputComponent = <ColumnSelector\n\t                id={dataset.id}\n\t                isRequired={true}\n\t                name={dataset.name}\n\t                dataset={dataset}\n\t                value={value}\n                    onChange={this.handleMoveColumnModalInputChange}\n\t            />\n                valueValidFunc = isNonNegativeInt;\n                modalTitle = 'Move Column';\n                modalPrompt = 'Target position for column ' + column.name;\n            } else if (modal === VIZUAL.MOVE_ROW) {\n            \tconst { dataset } = this.props;\n            \tvalue = modalResult;\n                let options = [...Array(dataset.rowCount).keys()].map(x => { return { key: x, text: x, value: x } });\n            \tinputComponent = <Dropdown\n\t                value={value}\n\t                selection\n\t                fluid\n\t                scrolling\n\t                options={options}\n\t                onChange={this.handleMoveRowModalInputChange}\n\t            />\n                valueValidFunc = isNonNegativeInt;\n                modalTitle = 'Move Row';\n                modalPrompt = 'Target position for row ' + modalValue;\n            }\n            return (\n                <EditResourceNameModal\n                    open={true}\n                    isValid={valueValidFunc}\n                    title={modalTitle}\n                    prompt={modalPrompt}\n                    value={value}\n                    onCancel={this.dismissModal}\n                    onSubmit={this.handleSubmitModal}\n                    inputComponent={inputComponent}\n                />\n            );\n        }\n        return content;\n    }\n    getInsertModuleIndex = () => {\n    \tconst { dataset, notebook } = this.props;\n    \tlet moduleIndex = null;\n        if(dataset.moduleId){\n        \tif(dataset.moduleIndex){\n        \t\t//there is a pending vizual insert so we want to insert after that (+1)\n            \tmoduleIndex = dataset.moduleIndex+1;\n            }\n            else {\n            \tconst findModuleById = (imodule) => imodule.id === dataset.moduleId;\n            \tmoduleIndex = notebook.workflow.modules.findIndex( findModuleById)+1;\n            }\n        \tconst lastModule = ( moduleIndex === notebook.workflow.modules.length );\n        \tif(lastModule){\n        \t\t//we are on the last module so we can just append\n        \t\tmoduleIndex = null;\n        \t}\n        }\n        return moduleIndex;\n    }\n    submitPendingUpdate = () => {\n        const {\n            activeColumnId,\n            activeRowId,\n            originalCellValue,\n            updatedCellValue,\n        } = this.state;\n        if (activeColumnId !== -1) {\n            const { dispatch, dataset, notebook } = this.props;\n            const moduleIndex = this.getInsertModuleIndex();\n            if (originalCellValue !== updatedCellValue) {\n                this.setState({\n                    updatingColumnId: activeColumnId,\n                    updatingRowId: activeRowId,\n                    updatingValue: updatedCellValue\n                })\n                let cmd = null;\n                if (activeRowId !== -1) {\n                    cmd = updateCell(\n                        dataset.name,\n                        activeColumnId,\n                        activeRowId,\n                        updatedCellValue\n                    );\n                } else {\n                    cmd = renameColumn(\n                        dataset.name,\n                        activeColumnId,\n                        updatedCellValue\n                    );\n                }\n                dispatch(submitUpdate(notebook, dataset, cmd, moduleIndex));\n            }\n        }\n    }\n\n    submitUserAnnotation = (annotation, key, value) => {\n        const { dispatch, dataset, notebook } = this.props;\n        const { column, row } = annotation;\n        //dispatch(updateAnnotations(dataset, column, row, key, value));\n        const moduleIndex = this.getInsertModuleIndex();\n        dispatch(submitUpdate(notebook, dataset, updateAnnotation(dataset, column, value, row), moduleIndex))\n    }\n    submitVizualCommand = (cmd) => {\n        const { dispatch, dataset, notebook } = this.props;\n        const moduleIndex = this.getInsertModuleIndex();\n        // Clear any active cells without submitting potential changes\n        this.setState({\n            activeColumnId: -1,\n            activeRowId: -1,\n            activeColumnIndex: -1,\n            activeRowIndex: -1,\n            originalCellValue: null,\n            updatedCellValue: null,\n            updatingColumnId: -1,\n            updatingRowId: -1,\n            updatingValue: null\n        });\n        dispatch(submitUpdate(notebook, dataset, cmd, moduleIndex));\n    }\n}\n\n\nconst mapStateToProps = state => {\n    let dataset = state.spreadsheet.dataset;\n    try{\n        // assign dataset.name the name associated with dataset.id\n        dataset.name = state.notebookPage.notebook.datasets[dataset.id].name;\n    }catch (TypeError) {\n        // to prevent spreadsheet from breaking between REQUEST_WORKFLOW AND RECEIVE_WORKFLOW when dataset is undefined\n    }\n    return {\n        annotations: state.spreadsheet.annotations,\n        dataset: dataset,\n        isUpdating: state.spreadsheet.isUpdating,\n        opError: state.spreadsheet.opError,\n        project: state.projectPage.project,\n        serviceApi: state.serviceApi,\n        notebook: state.notebookPage.notebook,\n        serviceProperties: state.serviceApi.properties\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Spreadsheet))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n// import { addFilteredCommand, copyCell, removeFilteredCommand } from '../../actions/main/App';\n// import { createBranch, deleteBranch } from '../../actions/project/Branch';\nimport { fetchWorkflow } from '../../actions/project/Notebook';\n// import { cancelWorkflowExecution, checkModuleStatus, createtNotebookCell,\n//     deleteNotebookCell, dismissCellChanges, fetchAnnotations, fetchWorkflow,\n//     hideCellOutput, insertNotebookCell, replaceNotebookCell, showCellChart,\n//     selectNotebookCell, showCellDataset, showCellStdout,\n//     showCellTimestamps, updateNotebookCellWithUpload } from '../../actions/project/Notebook';\nimport { fetchProject, setBranch } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\n// import { LargeMessageButton } from '../../components/Button';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\n// import EditResourceNameModal from '../../components/modals/EditResourceNameModal';\n// import NotebookStatusHeader from '../../components/notebook/NotebookStatusHeader';\n// import Notebook from '../../components/notebook/Notebook';\nimport ResourcePage from '../../components/ResourcePage';\n// import { CONTENT_CHART, CONTENT_DATASET, CONTENT_HIDE, CONTENT_TEXT,\n//     CONTENT_TIMESTAMPS } from '../../resources/Outputs';\nimport { notebookPageUrl, SpreadsheetResource } from '../../util/App';\n// import { branchPageUrl, isNotEmptyString, notebookPageUrl,\n//     SpreadsheetResource } from '../../util/App';\n// import { HATEOAS_MODULE_APPEND, HATEOAS_MODULE_INSERT,\n//     HATEOAS_MODULE_REPLACE, HATEOAS_PROJECT_FILE_UPLOAD } from '../../util/HATEOAS';\nimport Spreadsheet from '../spreadsheet/Spreadsheet';\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/Chart.css';\n\n/**\n * The notebook page displays workflows as notebooks and resources that are\n * associated with a workflow (e.g., datasets and charts).\n */\nclass SpreadsheetPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        activeCell: PropTypes.string,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        notebook: PropTypes.object,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        reversed: PropTypes.bool.isRequired,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        dataset: PropTypes.object\n    }\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        // Set the branch modal state\n        this.state = {modalOpen: false, modalTitle: 'New branch', moduleId: null};\n        // Fetch any resources that are currently null or out of sync with the\n        // browser URL. It is assumed that the branch is set if the project is\n        // set (i.e., either both are null or neither of them).\n        const { branch, dispatch, notebook, project, projectList } = this.props;\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        const workflowId = this.props.match.params.workflow_id;\n        if ((project == null) || (project.id !== projectId)) {\n            dispatch(\n                fetchProject(\n                    projectId,\n                    branchId,\n                    (project, branch) => (fetchWorkflow(\n                        project,\n                        branch,\n                        workflowId\n            ))));\n        } else if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchWorkflow(project, project.findBranch(branchId), workflowId));\n        } else if (notebook == null) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        } else if (notebook.id !== workflowId) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        }\n        // Get project listing if not set yet\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. If there is a change in the\n     * pathname we need to ensure that the resources that are referenced in\n     * the path match those that are in the current state.\n     */\n    componentDidUpdate(prevProps) {\n        // Check if the location path has changed. The change may either be\n        // the result from an update operation (create branch, delete branch),\n        // a switch between notebook versions or the result of the user using\n        // the back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch, notebook } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            const workflowId = this.props.match.params.workflow_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(\n                    fetchProject(\n                        projectId,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(\n                            project,\n                            branch,\n                            workflowId\n                ))));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(\n                    setBranch(\n                        project,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(project, branch, workflowId))\n                ));\n            } else if ((notebook == null) || (notebook.id !== workflowId)) {\n                dispatch(fetchWorkflow(project, branch, workflowId));\n            }\n        }\n    }\n\n    /**\n     * Dispatch action to load the workflow at the head of the current branch.\n     */\n    handleShowBranchHead = () => {\n        const { branch, history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n   \n    /**\n     * The content of the notebook page depends on the type of resource that\n     * is being shown.\n     */\n    render() {\n        const {\n            actionError,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            notebook,\n            project,\n            projectList,\n            serviceApi,\n            userSettings, \n            dataset\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (notebook == null) || (dataset == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading Spreadsheet...' />;\n        } else if (dataset != null) {\n            \n            // Layout has reverse button at top followed by list of notebook cells\n            const pageContent = (\n                <div className=\"spreadsheet\">\n                \t<Spreadsheet />\n                </div>\n            );\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    notebook={notebook}\n                    project={project}\n                    projectList={projectList}\n                    resource={SpreadsheetResource(dataset)}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                    onShowNotebook={this.handleShowBranchHead}\n                />\n            );\n        }\n        return content;\n    }\n   \n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        activeCell: state.notebookPage.activeCell,\n        branch: state.projectPage.branch,\n        fetchError: state.notebookPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.notebookPage.isFetching,\n        notebook: state.notebookPage.notebook,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        reversed: state.notebookPage.reversed,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        dataset: state.datasetErrorsPage.dataset\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(SpreadsheetPage));\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//import DatasetRepair from './DatasetRepair';\nimport { Icon } from 'semantic-ui-react';\nimport '../../../css/DatasetCaveat.css'\n\n/**\n * Display a list of dataset errors detected by mimir\n */\nclass DatasetReason extends React.Component {\n    static propTypes = {\n        reason: PropTypes.object.isRequired,\n        onGotoError: PropTypes.func.isRequired,\n        onRepairError: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {expanded: false }\n    }\n\n    handleExpand = () => {\n    \tconst { expanded } = this.state;\n    \tthis.setState({expanded:!expanded})\n    }\n\n    handleGotoError = (event) => {\n    \tconst { onGotoError, reason } = this.props;\n    \tonGotoError(reason.value);\n    }\n\n    buildReasonElement = (elkey, elvalue) => {\n    \tif(Array.isArray(elvalue)){\n    \t\tlet elements = []\n    \t\tfor(let i = 0; i<elvalue.length; i++){\n    \t\t\telements.push(this.buildReasonElement(elkey+'.'+i,elvalue[i]))\n    \t\t}\n    \t\treturn elements;\n    \t}\n    \telse if(elvalue instanceof Object){\n    \t\tlet elements = []\n    \t\tfor (let [ek, ev] of Object.entries(elvalue)) {\n    \t\t\telements.push(this.buildReasonElement(elkey+'.'+ek,ev))\n    \t\t}\n    \t\treturn elements;\n    \t}\n    \telse{\n    \t\treturn (<div className='dataset-reason-element'><td className='dataset-reason-key'><h4>{elkey}: </h4></td><td>{elvalue}</td></div>);\n    \t}\n    }\n    /**\n     *\n     */\n    render() {\n    \tconst { reason/*, onRepairError*/ } = this.props;\n        const { key, family, message, confirmed } = reason;\n        //const { expanded } = this.state;\n        const reasonElements = [];//this.buildReasonElement('reason',value);\n        reasonElements.unshift(<div className='dataset-reason-element'><td className='dataset-reason-key'><h4>family: </h4></td><td>{family}</td></div>)\n        reasonElements.unshift(<div className='dataset-reason-element'><td className='dataset-reason-key'><h4>key: </h4></td><td>{key}</td></div>)\n\n        let tableContent = null\n\n        /*if(expanded){\n        \ttableContent = (<div>\n        \t\t\t\t\t\t<table>{reasonElements}</table>\n        \t\t\t\t\t\t<DatasetRepair\n\t        \t                \treason={reason}\n\t        \t                \tonRepairError={onRepairError}\n\t        \t                />\n        \t\t\t\t\t</div> )\n        }*/\n\n        let gotoErrorIcon = null\n        if(key && Array.isArray(key) && key.length !== 0 ){\n        \tgotoErrorIcon = (<Icon name='external alternate' size='small' />)\n        }\n        let errorIcon = (<Icon name='warning sign' size='large' color='yellow' />)\n        if(confirmed){\n        \terrorIcon = (<Icon name='check circle' size='large' color='green' />)\n        }\n\n        return (\n        \t<div className='dataset-reason' >\n                <table><tr>\n                \t<td className='dataset-reason-icon'>\n                \t\t<div onClick={this.handleExpand}>{errorIcon}</div>\n                \t</td>\n                \t<td className='dataset-reason-english'><div onClick={this.handleExpand}>{message}</div></td>\n                \t<td className='dataset-reason-goto'><div onClick={this.handleGotoError}>{gotoErrorIcon}</div></td>\n                </tr></table>\n                {tableContent}\n            </div>\n        );\n    }\n}\n\nexport default DatasetReason;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DatasetReason from './DatasetReason';\nimport '../../../css/DatasetCaveat.css';\n\n/**\n * Display a list of dataset errors detected by mimir\n */\nclass DatasetCaveat extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        annotations: PropTypes.object.isRequired,\n        onGotoError: PropTypes.func.isRequired,\n        onRepairError: PropTypes.func.isRequired\n    }\n    /**\n     *\n     */\n    render() {\n        const { dataset, annotations, onGotoError, onRepairError } = this.props;\n        const errors = [];\n        const ackedErrors = [];\n        for (let i = 0; i < annotations.items.length; i++) {\n            const errs = annotations.items[i];\n            if(errs.confirmed){\n            \tackedErrors.push(\n\t        \t\t<DatasetReason\n\t            \t\treason={errs}\n\t        \t\t\tonGotoError={onGotoError(dataset)}\n\t        \t\t\tonRepairError={onRepairError(dataset)}\n\t            \t/>\n\t            )\n            }\n            else{\n\t            errors.push(\n\t        \t\t<DatasetReason\n\t            \t\treason={errs}\n\t        \t\t\tonGotoError={onGotoError(dataset)}\n\t        \t\t\tonRepairError={onRepairError(dataset)}\n\t            \t/>\n\t            )\n            }\n        }\n        return (\n            <div className='dataset-caveats'>\n                <h3 className='dataset-caveats'>\n                    {'Dataset Caveat List: '}\n                    <span className='error-highlight'>{dataset.name}</span>\n                </h3>\n                {errors}\n                {ackedErrors}\n            </div>\n        );\n    }\n}\n\nexport default DatasetCaveat;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n// import {  Icon } from 'semantic-ui-react';\nimport { fetchBranch } from '../../actions/project/Branch';\nimport { fetchProject } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\nimport ResourcePage from '../../components/ResourcePage';\nimport { DatasetCaveatResource } from '../../util/App';\nimport { notebookPageUrl } from '../../util/App.js';\nimport { showSpreadsheet, repairDatasetCaveat } from '../../actions/project/Spreadsheet';\n\nimport DatasetCaveat from '../../components/project/DatasetCaveat';\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/BranchHistory.css';\n\n\n/**\n * The branch history page displays the list of workflow versions that form the\n * history of a project branch. For each version the action that created the\n * workflow is shown together with the time of creation. The user can select\n * any of the workflow versions and display them in a different page.\n *\n */\n\nclass DatasetCaveatsPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        workflows: PropTypes.array,\n        dataset: PropTypes.object,\n        resource: PropTypes.object\n    }\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        const { branch, dispatch, project, projectList, workflows } = this.props;\n        // Get project and branch identifier from the URL\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        // Fetch any resources that are currently missing. It is assumed that\n        // the branch is set if the project is set.\n        if ((project == null) || (project.id !== projectId)) {\n            dispatch(fetchProject(projectId, branchId, fetchBranch));\n        } else if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        } else if (workflows == null) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        }\n        // Get project listing if not set\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. It appears that when the user\n     * uses the back and previous button in the browser the current state and\n     * the previous state are the same but the branch identifier in the URL\n     * is different.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Check if the location path has changed. The change may either be\n        // the result from a delete branch operation or the result of the user\n        // usingthe back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(fetchProject(projectId, branchId, fetchBranch));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(fetchBranch(project, project.findBranch(branchId)));\n            }\n        }\n    }\n    /**\n     * Dispatch action to load the workflow at the head of the current branch.\n     */\n    handleShowBranchHead = () => {\n        const { branch, history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n\n    /**\n     * Switch to spreadsheet view and load the selected to the page\n     * that has the source of a specific error.\n     */\n    loadDatasetToError = (dataset) => (reason) => {\n    \tconst { dispatch, serviceApi } = this.props;\n    \tconst fetch_url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '?rowid='+reason.key[0]\n        dispatch(showSpreadsheet(dataset, fetch_url));\n    }\n    /**\n     * Repair a specific error.\n     */\n    loadDatasetRepair = (dataset) => (reason, repair, acknowledge) => {\n        const { dispatch, serviceApi } = this.props;\n        const url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '/feedback'\n        dispatch(repairDatasetCaveat(dataset, url, reason, repair, acknowledge));\n    }\n    /**\n     * The branch history is rendered as a table with five columns: (1) the\n     * workflow version identifier, (2) an icon containing a link to display\n     * the workflow version in a web page, (3) an icon depicting the type of\n     * action that created the workflow version (i.e., CREATE BRANCH,\n     * INSERT/APPEND MODULE, DELETE MODULE, or REPLACE MODULE), (4) the short\n     * form of the command specification that was used to define the module\n     * that was affected by the action, and (5) the time of creation.\n     */\n    render() {\n        const {\n            actionError,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            project,\n            projectList,\n            serviceApi,\n            userSettings,\n            workflows,\n            resource\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (workflows == null) || (resource == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading Dataset Caveat List ...' />;\n        } else if (resource != null) {\n        \tconst dataset = resource.content.dataset;\n        \tconst annotations = resource.content.annotations;\n        \tconst pageContent = (\n                    <div className='dataset-caveat-view'>\n                        <DatasetCaveat\n                            dataset={dataset}\n                            annotations={annotations}\n                        \tonGotoError={this.loadDatasetToError}\n                        \tonRepairError={this.loadDatasetRepair}\n                        />\n                    </div>\n                )\n            \n            \n            // Show branch history table as the main content in a project\n            // resource page\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    project={project}\n                    projectList={projectList}\n                    resource={new DatasetCaveatResource()}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                    onShowNotebook={this.handleShowBranchHead}\n                />\n            );\n        }\n        return content;\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        branch: state.projectPage.branch,\n        fetchError: state.datasetErrorsPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.datasetErrorsPage.isFetching,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        workflows: state.branchPage.workflows,\n        dataset: state.datasetErrorsPage.dataset,\n        resource: state.datasetErrorsPage.resource,\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(DatasetCaveatsPage))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Input, Modal } from 'semantic-ui-react'\nimport '../../../css/ResourceListing.css'\n\n/**\n * Modal to input (or modify) the name of a resource. The optional isValid\n * function is used to check whether the entered value is valid or not.\n */\nclass AuthModal extends React.Component {\n    static propTypes = {\n        isValid: PropTypes.func,\n        prompt: PropTypes.string,\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.string\n    }\n    /**\n     * Keep the new resource name in the local state.\n     */\n    constructor(props) {\n        super(props)\n        let { value } = props;\n        if (value == null) {\n            value = '';\n        }\n        this.state = {user: value};\n    }\n    /**\n     * Make sure the clear the internal state value on cancel.\n     */\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        this.setState({user: ''});\n        onCancel();\n    }\n    /**\n     * Handle changes in the input control.\n     */\n    handleChange = (event) => {\n        const val = event.target.value\n        this.setState({user: val})\n    }\n    /**\n     * Handle changes in the input control.\n     */\n    handleChangePasswd = (event) => {\n        const val = event.target.value\n        this.setState({passwd: val})\n    }\n    /**\n     * Handle ESC and RETURN to cancel or submit the name update request.\n     */\n    handleKeyDown = (event) => {\n        const { onCancel } = this.props;\n        if (event.keyCode === 13) {\n            this.handleSubmit();\n        } else if (event.keyCode === 27) {\n            onCancel();\n        }\n    }\n    /**\n     * Call the provided onSubmit with the entered name. Use the optional\n     * isValid function to check if the entered value is valid or not.\n     */\n    handleSubmit = (event) => {\n        const { isValid, onSubmit } = this.props;\n        const { user, passwd } = this.state\n        // Return without submit if invalid value is given.\n        if (isValid != null) {\n            if (!isValid(user)) {\n                return;\n            }\n        }\n        const usero = { authdata : window.btoa(user + ':' + passwd) }\n        onSubmit(usero);\n    }\n    /**\n     * Show simple modal with input text box.\n     */\n    render() {\n        const { isValid, prompt, open, title } = this.props;\n        const { user, passwd } = this.state;\n        let message = null;\n        if (prompt != null) {\n            message = (<p>{prompt}</p>);\n        }\n        let validName = true;\n        if (isValid != null) {\n            validName = isValid(user);\n        }\n        return (\n            <Modal open={open} size={'small'}>\n                <Modal.Header>{title}</Modal.Header>\n                <Modal.Content>\n                    <div className=\"resource-name\">\n                        {message}\n                        <Input\n                            autoFocus\n                            className=\"resource-name-input\"\n                            value={user}\n                            onChange={this.handleChange}\n                            onKeyDown={this.handleKeyDown}\n                        />\n                        <Input \n                            type='password'\n                            value={passwd}\n                        \tclassName=\"resource-name-input\"\n                        \tonChange={this.handleChangePasswd}\n                            onKeyDown={this.handleKeyDown}\n                        />\n                     </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  negative onClick={this.handleCancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        positive\n                        icon='checkmark'\n                        labelPosition='right'\n                        content=\"Done\"\n                        disabled={!validName}\n                        onClick={this.handleSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nexport default AuthModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { fetchService, receiveAuth } from '../../actions/main/Service'\nimport { ConnectionInfo } from '../../components/Api';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { ErrorMessage } from '../../components/Message';\nimport MainPage from './MainPage'\nimport BranchPage from '../project/BranchPage';\nimport NotebookPage from '../project/NotebookPage'\nimport SpreadsheetPage from '../project/SpreadsheetPage'\nimport DatasetCaveatsPage from '../project/DatasetCaveatsPage'\nimport AuthModal from '../../components/modals/AuthModal';\nimport {\n    baseHref, branchHistoryHref, notebookHeadHref, notebookVersionHref,\n    isNotEmptyString, spreadsheetHref, errorListHref, spreadsheetVersionHref, errorListVersionHref\n} from '../../util/App';\n\nimport '../../../css/App.css'\nimport '../../../css/Connection.css'\n\nimport { MODAL_AUTH } from '../../actions/main/Service'\nimport { isCellOutputRequest } from '../../actions/project/Notebook';\n\nclass App extends Component {\n    static propTypes = {\n        error: PropTypes.string,\n        isFetching: PropTypes.bool.isRequired,\n        serviceUrl: PropTypes.string,\n        showModal: PropTypes.string,\n        refetch: PropTypes.bool\n    }\n    constructor(props) {\n        super(props);\n        this.state = {showModal: null}\n        const { dispatch } = this.props\n        dispatch(fetchService());\n    }\n    /**\n     * Show modal to login.\n     */\n    showAuthModal = () => (this.setState({showModal: MODAL_AUTH}));\n\n    /**\n     * Hide any open modal.\n     */\n    hideModal = () => (this.setState({showModal: null}));\n\n    /**\n     * Called by auth modal on submit.\n     */\n    authComplete = (user) => {\n    \tconst { dispatch } = this.props\n    \tlocalStorage.setItem('user', JSON.stringify(user));\n        dispatch(receiveAuth(user.authdata))\n    }\n    /**\n     * reload the service descriptor.\n     */\n    refetchService() {\n        const { dispatch } = this.props\n        dispatch(fetchService())\n    }\n    /**\n     * Create the routing elements in the DOM and display connection\n     * information.\n     */\n    render() {\n        // Set the window title\n        if (window.env.APP_TITLE) {\n            document.title = 'Vizier DB - ' + window.env.APP_TITLE\n        } else {\n            document.title = 'Vizier DB'\n        }\n        const { error, isFetching, links, name, showModal, refetch } = this.props;\n        let content = null;\n        let connection = null;\n        if (isFetching) {\n            // Show a content spinner if the API service descriptor is still\n            // being fetched.\n            content = <ContentSpinner />;\n        } else if (error) {\n            // Error message if the service descriptor could not be fetched\n            let title = 'Error while loading service descriptor'\n            if (this.props.serviceUrl) {\n                title = title + ' @ ' + this.props.serviceUrl\n            }\n            content = (\n                <div className='page-content slim'>\n                    <ErrorMessage\n                        title={title}\n                        message={error}\n                        />\n                </div>\n            );\n        } else if (refetch) {\n            // Refetch service descriptor after the user entered authentication\n            // information\n        \tthis.refetchService();\n        } else if ((name != null) && (links != null)) {\n            // If the service descriptor was loaded successfully display page\n            // content depending on the selected route\n            content = (\n                <MuiThemeProvider>\n                    <Router>\n                        <Switch>\n                            <Route exact path={baseHref} component={MainPage} />\n                            <Route path={spreadsheetHref} component={SpreadsheetPage} />\n                            <Route path={errorListHref} component={DatasetCaveatsPage} />\n                            <Route path={spreadsheetVersionHref} component={SpreadsheetPage} />\n                            <Route path={errorListVersionHref} component={DatasetCaveatsPage} />\n                            <Route path={branchHistoryHref} component={BranchPage} />\n                            <Route path={notebookHeadHref} component={NotebookPage} />\n                            <Route path={notebookVersionHref} component={NotebookPage} />\n                            <Route path={spreadsheetHref} component={SpreadsheetPage} />\n                            <Route path={errorListHref} component={DatasetCaveatsPage} />\n                        </Switch>\n                    </Router>\n                </MuiThemeProvider>\n            );\n            const cellOutput = isCellOutputRequest();\n            if(cellOutput){\n            \tconnection = null;\n            }\n            else{\n            \t// Show connection information at the bottom of the page\n                connection = (\n\t                <div className='connection-info'>\n\t                    <ConnectionInfo name={name} links={links}/>\n\t                </div>\n\t            );\n            }\n        }\n        // Add authentication modal\n        const modals = (\n                <div>\n                    <AuthModal\n                        isValid={isNotEmptyString}\n                        open={showModal === MODAL_AUTH}\n                        prompt='Please enter your login credentials'\n                        title='Login'\n                        onCancel={this.hideModal}\n                    \tonSubmit={this.authComplete}\n                        value=''\n                     />\n                </div>\n               );\n        return (\n            <div className=\"app\">\n                { content }\n                { connection }\n                { modals }\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.serviceApi.error,\n        isFetching: state.serviceApi.isFetching,\n        links: state.serviceApi.links,\n        name: state.serviceApi.name,\n        serviceUrl: state.serviceApi.serviceUrl,\n        showModal: state.serviceApi.showModal,\n        refetch: state.serviceApi.refetch\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter, routerMiddleware } from 'react-router-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport reducer from './core/reducers'\nimport App from './core/containers/main/App'\nimport 'semantic-ui-css/semantic.min.css';\nimport './css/index.css';\n\n// Most of the initialization code has been copied from the following article:\n// https://medium.com/@notrab/getting-started-with-create-react-app-redux-react-router-redux-thunk-d6a19259f71f\n\n// History syncs browserHistory with our store\nexport const history = createHistory();\n\nconst enhancers = []\nconst middleware = [\n    thunk,\n    routerMiddleware(history)\n]\n\nlet owaScript = null;\nif (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger())\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n    if (typeof devToolsExtension === 'function') {\n        enhancers.push(devToolsExtension())\n    }\n} else if(window.env.ANALYTICS_URL !== '') {\n    // Add Open Web Analytics if the app is running in production mode\n    const injectOWA = () => {\n    \tif (typeof window === 'undefined') {\n    \t\treturn;\n    \t}\n    \twindow._owa = document.createElement('script');\n        window._owa.type = 'text/javascript';\n        window._owa.async = true;\n        window._owa.src = window.env.ANALYTICS_URL + 'modules/base/js/owa.tracker-combined-min.js';\n        window._owa_s = document.getElementsByTagName('script')[0];\n        window._owa_s.parentNode.insertBefore(window._owa, window._owa_s);\n\n        window.owa_baseUrl = window.env.ANALYTICS_URL;\n    \twindow.owa_cmds = window.owa_cmds || [];\n    \tfunction owatag() {\n    \t\twindow.owa_cmds.push(arguments);\n    \t}\n    \t//owatag('js', new Date());\n    \towatag('setSiteId', window.env.ANALYTICS_SITE_ID);\n    \towatag('trackPageView');\n    \towatag('trackClicks');\n    };\n    owaScript = (<script>{injectOWA()}</script>);\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\n// Initialize the object (store) that holds the application state tree. The\n// required components of the serviceApi are set here. In particular, the\n// Url of the Vizier DB Web API. The API is expected to be contained in a file\n// env.js in the public directory (following the suggestion from\n// https://github.com/facebookincubator/create-react-app/issues/578)\nexport const store = createStore(\n    reducer,\n    {\n        serviceApi: {\n            isFetching: false,\n            serviceUrl: window.env.API_URL\n        }\n    },\n    composedEnhancers\n)\n\nrender(\n\t<Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App>\n                {owaScript}\n            </App>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n\n","/**\n * Copyright (C) 2021 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { PropTypes } from 'prop-types';\n\n\nclass JavascriptCellOutput extends React.Component {\n\n    static propTypes = {\n      html: PropTypes.string.isRequired,\n      code: PropTypes.string.isRequired,\n      deps: PropTypes.array.isRequired\n    }\n\n    componentDidMount() {\n      const { code, deps } = this.props\n\n      // Compute which dependencies we nee dto load\n      var neededDeps = []\n      for(var i in deps){\n        if(!document.getElementById(\"import-\"+deps[i])){\n          console.log(\"Need to download: \"+deps[i])\n          neededDeps.push(deps[i])\n        }\n      }\n      neededDeps = neededDeps.reverse()\n      var trigger = () => {\n        eval(code)\n      }\n      for(var i in neededDeps){\n        const dep = neededDeps[i]\n        const lastTrigger = trigger\n        trigger = () => {\n          if(!document.getElementById(\"import-\"+dep)){\n            const script = document.createElement('script')\n            script.src = dep\n            script.id = \"import-\"+dep\n            script.onload = lastTrigger\n            document.body.appendChild(script)\n          } else {\n            lastTrigger()\n          }\n        }\n      }\n      trigger()\n    }\n\n    render() {\n      const { html } = this.props\n      return <div className='output-content-html'\n                  ref={ el => (this.div = el) }\n                  dangerouslySetInnerHTML={{__html: html}}\n             />\n    }\n\n}\n\nexport default JavascriptCellOutput;\n"],"sourceRoot":""}