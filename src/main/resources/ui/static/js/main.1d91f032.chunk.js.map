{"version":3,"sources":["core/util/Settings.js","core/actions/main/App.js","core/reducers/main/App.js","core/actions/main/Service.js","core/reducers/main/MainPage.js","core/util/Api.js","core/util/HATEOAS.js","core/resources/Branch.js","core/util/Sort.js","core/util/Timestamp.js","core/util/Vizual.js","core/resources/Project.js","core/util/Error.js","core/actions/project/Project.js","core/resources/Dataset.js","core/resources/Workflow.js","core/resources/Outputs.js","core/util/App.js","core/actions/project/Branch.js","core/reducers/project/BranchPage.js","core/resources/Artifact.js","core/resources/Notebook.js","core/actions/project/Notebook.js","core/reducers/project/SpreadsheetPage.js","core/resources/Annotation.js","core/actions/project/Spreadsheet.js","core/reducers/project/DatasetCaveatsPage.js","core/reducers/project/NotebookPage.js","core/actions/project/ProjectListing.js","core/reducers/project/ProjectListing.js","core/reducers/project/ProjectPage.js","core/resources/Engine.js","core/reducers/main/Service.js","core/reducers/spreadsheet/Spreadsheet.js","core/reducers/index.js","core/components/ContentSpinner.js","core/components/Api.js","core/components/Message.js","core/components/notebook/input/form/TextInput.js","core/components/modals/EditResourceNameModal.js","core/components/Button.js","core/components/modals/DeleteResourceModal.js","core/components/SearchBar.js","core/containers/project/ProjectListing.js","core/actions/chart/Chart.js","core/components/menu/BranchMenuDropdown.js","core/components/menu/ChartMenuDropdown.js","core/components/menu/DatasetMenuDropdown.js","core/components/menu/DatasetCaveatMenuDropdown.js","core/components/menu/ProjectMenuDropdown.js","core/components/modals/FileUploadModal.js","core/components/menu/SettingsMenuDropdown.js","img/vizier_tiny.svg","core/components/menu/AppMenu.js","core/components/ResourcePage.js","core/containers/main/MainPage.js","core/containers/project/BranchPage.js","core/components/annotation/AnnotationObject.js","core/components/modals/ShareLinkModal.js","core/components/notebook/NotebookStatusHeader.js","core/components/notebook/input/CommandsListing.js","core/components/notebook/input/form/CodeCell.js","core/components/notebook/input/form/TextControl.js","core/components/notebook/input/form/BoolInput.js","core/components/notebook/input/form/ColumnSelector.js","core/components/notebook/input/form/ControlGroup.js","core/components/notebook/input/form/ControlRow.js","core/components/notebook/input/form/DatasetSelector.js","core/components/notebook/input/form/ArtifactSelector.js","core/components/notebook/input/form/FileSelector.js","core/components/notebook/input/form/TextSelector.js","core/components/notebook/input/form/URLSelector.js","core/components/notebook/input/form/ModuleFormControl.js","core/components/ProgressContext.js","core/components/notebook/input/LoadDatasetForm.js","core/components/notebook/input/ModuleInputFormDecorator.js","core/components/notebook/input/ModuleInputForm.js","core/components/notebook/input/form/PythonCell.js","core/components/notebook/input/form/ScalaCell.js","core/components/notebook/input/form/RCell.js","core/components/notebook/input/form/SQLCell.js","core/components/notebook/input/form/MarkdownCell.js","core/components/notebook/input/CellCommandArea.js","core/components/notebook/CellDropDownMenu.js","core/components/plot/Plots.js","core/components/plot/DatasetChart.js","core/components/spreadsheet/grid/GridInput.js","core/components/spreadsheet/grid/GridCell.js","core/components/spreadsheet/menu/RowDropDown.js","core/components/spreadsheet/grid/RowIndexCell.js","core/components/spreadsheet/menu/SpreadsheetDropDown.js","core/components/spreadsheet/SpreadsheetScrollbar.js","core/components/spreadsheet/grid/D3BasedPlot.js","core/components/spreadsheet/grid/VegaLiteBasedPlot.js","core/components/spreadsheet/grid/PlotHeader.js","core/components/spreadsheet/ColumnView.js","core/components/spreadsheet/menu/ColumnDropDown.js","core/components/spreadsheet/grid/HeaderCell.js","core/components/spreadsheet/Headers.js","core/components/spreadsheet/DatasetView.js","core/components/notebook/output/TimestampOutput.js","core/components/notebook/output/CellOutputArea.js","core/components/notebook/NotebookCell.js","core/components/notebook/TableOfContents.js","core/components/notebook/Notebook.js","core/containers/project/NotebookPage.js","core/containers/spreadsheet/Spreadsheet.js","core/containers/project/SpreadsheetPage.js","core/components/project/DatasetReason.js","core/components/project/DatasetCaveat.js","core/containers/project/DatasetCaveatsPage.js","core/components/modals/AuthModal.js","core/containers/main/App.js","index.js","core/components/notebook/output/JavascriptCellOutput.js"],"names":["DEFAULT_FILTERED_COMMANDS","vizual","ADD_FILTERED_COMMAND","COPY_CELL","HIDE_CELLS","NO_OP","REMOVE_FILTERED_COMMAND","REVERSE_ORDER","SET_FILTERED_MODULES","setModuleFilter","filter","type","toggleHideCells","reverseOrder","INITIAL_STATE","userSettings","filteredCommands","cellRowLimit","reversedOrder","hideCommands","clipboard","this","cellDatasetRowLimit","command","commandList","pckg","packageId","modifiedList","found","i","length","id","push","prop","UserSettings","cellRowLimitValue","cell","content","isNewCell","commandSpec","arguments","module","find","c","commands","REQUEST_SERVICE","RECEIVE_SERVICE","SERVICE_ERROR","REQUEST_AUTH","RECEIVE_AUTH","MODAL_AUTH","serviceError","error","requestAuth","authHeader","dispatch","user","JSON","parse","localStorage","getItem","authdata","removeItem","fetchAuthed","url","fetchProps","window","env","API_BASIC_AUTH","authHead","newFetchProps","headers","Object","assign","method","fetch","Promise","resolve","reject","message","checkResponseJsonForReAuth","response","isReadableStream","text","then","jsonObj","err","startsWith","includes","confirm","profile","reauthClient","client","open","data","fetchService","getState","serviceApi","serviceUrl","status","json","defaults","setItem","stringify","name","properties","environment","links","receiveService","catch","homePageContent","projects","createResource","successHandler","errorHandler","signalStartHandler","postResourceData","deleteResource","fetchResource","getProperty","object","key","defaultValue","property","value","body","updateResourceProperty","updStmt","putResourceData","HATEOAS_SELF","HATEOAS_BRANCH_HEAD","HATEOAS_DATASET_DOWNLOAD","HATEOAS_PROJECTS_CREATE","HATEOAS_PROJECTS_IMPORT","HATEOAS_PROJECTS_LIST","HATEOAS_PROJECT_FILE_UPLOAD","HATEOAS_MODULE_APPEND","HATEOAS_MODULE_FREEZE","HATEOAS_MODULE_THAW","HATEOASReferences","getSelf","get","ref","rel","href","console","log","columnId","rowId","offset","limit","projectId","branchId","workflowId","BranchDescriptor","isDefault","sortByName","objects","sort","o1","o2","localeCompare","moment","require","utc2LocalTime","timestamp","tz","guess","format","VIZUAL","VIZUAL_OP","SORT","moveColumn","dataset","column","position","commandId","moveRow","row","ProjectDescriptor","createdAt","lastModifiedAt","defaultBranch","ProjectHandle","branches","branch","modifiedBranchList","br","fromJson","cmdId","modBranches","ErrorObject","title","PROJECT_FETCH_ERROR","RECEIVE_PROJECT","REQUEST_PROJECT","PROJECT_ACTION_ERROR","RECEIVE_PROJECT_RESOURCE","REQUEST_PROJECT_ACTION","UPDATE_PROJECT","UPDATE_RESOURCE","UPDATE_WORKFLOW","fetchProject","resultFunc","getProjectUrl","requestProject","project","projectFetchError","receiveProjectResource","resource","setProject","setBranch","findBranch","updateProject","updateName","projectActionError","requestProjectAction","dismissProjectActionError","DatasetDescriptor","columns","rowCount","DatasetHandle","rows","moduleId","isProfiled","keys","is_profiled","roi","rowAnnotationFlags","index","hasAnnotations","hadAnnotations","annotations","annotatedCells","slice","WorkflowDescriptor","actionIsAppend","action","actionIsCreate","actionIsDelete","actionIsInsert","actionIsReplace","WorkflowHandle","engine","state","readOnly","datasets","modules","tableOfContents","cmd","packages","getCommandSpec","CONTENT_CHART","CONTENT_DATASET","CONTENT_ERROR","CONTENT_HTML","CONTENT_MARKDOWN","CONTENT_HIDE","CONTENT_TEXT","CONTENT_JAVASCRIPT","CONTENT_TIMESTAMPS","CONTENT_MULTIPLE","OutputResource","isFetching","isChart","isDataset","isError","isHidden","isHtml","isMarkdown","isText","isTimestamps","isJavascript","isMultiple","OutputChart","OutputDataset","OutputError","OutputHidden","OutputHtml","outputObjects","lines","j","out","OutputJavascript","OutputMarkdown","OutputText","OutputMultiple","outputs","stdoutGrouped","groupBy","map","x","join","OutputTimestamps","startedAt","finishedAt","process","baseHref","projectHref","branchHref","branchHistoryHref","notebookHeadHref","notebookVersionHref","spreadsheetHref","errorListHref","spreadsheetVersionHref","errorListVersionHref","KEY","MOVE","formatBytes","a","b","d","f","Math","floor","parseFloat","pow","toFixed","isNotEmptyString","trim","isNonNegativeInt","test","branchPageUrl","notebookPageUrl","link","spreadsheetPageUrl","datasetId","errorListPageUrl","valueOrDefault","val","RESOURCE_BRANCH","RESOURCE_MAIN_PAGE","RESOURCE_NOTEBOOK","RESOURCE_DATASET_CAVEAT","AppResource","resourceType","isBranch","isMainPage","isNotebook","isDatasetCaveat","BranchResource","ChartResource","DatasetCaveatResource","SpreadsheetResource","UPDATE_BRANCH","RECEIVE_BRANCH_HISTORY","REQUEST_BRANCH","deleteBranch","urlFactory","history","defaultBranchId","getDefaultBranch","requestBranch","fetchBranch","workflows","wf","updateBranch","updBranch","fetchError","ArtifactDescriptor","mime_type","artifact_type","category","objType","INSERT_AFTER","INSERT_BEFORE","getNewCellId","ModuleHandle","ds","artifacts","ts","charts","timestamps","locked","Notebook","workflow","cells","cellCounter","hasActiveCells","NotebookCell","getModuleDefaultOutput","cellId","cellList","newCell","output","modifiedCells","setFetching","modifiedCellId","useDefaultOutputs","size","min","outputResource","outputSelector","isActive","isPending","isRunning","isErrorOrCanceled","isCanceled","stdout","result","RECEIVE_WORKFLOW","REQUEST_WORKFLOW","SET_ACTIVE_NOTEBOOK_CELL","UPDATE_NOTEBOOK","fetchWorkflow","api","getNotebookUrl","workflowFetchError","getJson","success","checkModuleStatus","notebook","updateNotebook","setNotebookCellError","isCellOutputRequest","URLSearchParams","location","search","nb","replaceOutput","showCellChart","isInOutput","chart","setNotebookCellBusy","showCellDataset","getDatasetUrl","activeCell","showCellStdout","StandardOutput","insertNotebookCell","updateNotebookCell","replaceNotebookCell","freezeOrThawNotebookCell","updateNotebookCellWithUpload","modifyUrl","notebookModifier","uploadUrl","fileArg","onProgressUpdate","file","uploadReqData","FormData","append","config","propData","axios","post","getAuthed","onUploadProgress","progressEvent","round","loaded","total","fileid","msg","updateWorkflow","reversed","CellAnnotation","NoAnnotation","IsFetching","FetchError","AnnotationList","items","SUBMIT_UPDATE_REQUEST","REQUEST_CAVEATS","SET_ANNOTATIONS","UPDATE_DATASET_ANNOTATIONS","showSpreadsheet","fetchUrl","dsoffset","showDatasetCaveat","self","submitCaveatRequest","repairDatasetCaveat","reason","repair","acknowledge","annotation","setAnnotations","submitUpdate","moduleIndex","upcmd","submitUpdateRequest","updateBody","update","upds","newModuleIndex","newModuleId","values","col","colName","findIndex","clearAnnotations","fetchAnnotations","params","annoLink","postUpdateRequest","isAnnotated","updateAnnotations","CLEAR_PROJECT_ACTION_ERROR","REQUEST_PROJECTS","RECEIVE_PROJECTS","SET_PROJECT_CREATE_ERROR","SET_PROJECT_DELETE_ERROR","SET_PROJECTS_FETCH_ERROR","createProject","projectName","requestProjects","fetchProjects","projectCreateError","deleteProject","projectDeleteError","receiveProjects","projectsFetchError","uploadProject","projectsUploadError","DEFAULT_FETCH_MESSAGE","actionError","fetchMessage","DT_BOOL","DT_CODE","DT_COLUMN_ID","DT_DATASET_ID","DT_DECIMAL","DT_FILE_ID","DT_INT","DT_LIST","DT_RECORD","DT_ROW_ID","DT_STRING","CommandDeclaration","obj","description","suggest","parameters","nestCommandParameters","codeParameter","p","datatype","fileParameter","PackageDeclaration","elements","PackageRegistry","formValuesToRequestData","serviceProperties","errors","para","recordResult","forEach","required","r","rowResult","dt","parseInt","validateArgument","parent","resetColumnIds","parameterSpecs","toFormValues","moduleArgs","arg","recordVal","opt","filename","paraSpec","maxFileSize","isNaN","isFetchig","refetch","isUpdating","rootReducer","combineReducers","app","addCommandToHiddenList","copyCell","removeCommandFromHiddenList","setFilter","branchPage","mainPage","welcome","notebookPage","fromWorkflow","spreadsheetPage","datasetErrorsPage","projectListing","projectPage","backend","showModal","spreadsheet","router","routerReducer","ContentSpinner","props","cssClass","loaderSize","className","Loader","inline","active","React","Component","ApiPolling","interval","onFetch","timer","setInterval","clearInterval","onCancel","Button","negative","onClick","ConnectionInfo","target","ErrorMessage","onDismiss","Message","icon","header","charAt","toUpperCase","ErrorListMessage","list","is404","NotFoundMessage","floating","TextInput","onKeyDown","onChange","Input","autoFocus","EditResourceNameModal","handleCancel","setState","handleChange","event","handleKeyDown","keyCode","handleSubmit","isValid","onSubmit","prompt","inputComponent","validName","Tag","inputProps","ic","Modal","Header","Content","Actions","primary","labelPosition","disabled","IconButton","CloseButton","LargeMessageButton","css","caption","captionIcon","mainMessage","captionMessage","Divider","horizontal","Icon","style","margin","TextButton","linkCss","DeleteResourceModal","basic","color","inverted","defaultProps","SearchBar","addTitleFieldToProjects","projectsClone","handleSearchChange","e","isLoading","setTimeout","initialState","filterProjectListing","re","RegExp","_","escapeRegExp","results","align","aligned","Search","loading","onSearchChange","ProjectListing","clearActionError","confirmDeleteProject","hideModal","handleShowProjectPage","filteredProjects","showDeleteProjectModal","tabHead","Table","Row","HeaderCell","pj","Cell","noResults","modal","projectActionErrorMessage","searchBar","singleLine","Body","withRouter","connect","showChartView","BranchMenuDropdown","handleCreateBranch","onCreateBranch","isMostRecent","onDelete","onEdit","onGetMostRecent","onSelect","onShowHistory","selectedBranch","branchItems","Dropdown","iconName","Item","item","Menu","ChartMenuDropdown","handleSelect","onClickHandler","hasSelectableItems","menuItems","DatasetMenuDropdown","DatasetCaveatMenuDropdown","ProjectMenuDropdown","handleExportProject","onCreate","onImport","FileUploadModal","files","validFile","positive","SettingsMenuDropdown","onHideCells","onReverse","onSetFilter","showNotebookReversed","hideFilteredCommands","MODAL_CREATE_PROJECT","MODAL_IMPORT_PROJECT","MODAL_DELETE_BRANCH","MODAL_DELETE_PROJECT","MODAL_EDIT_BRANCH_NAME","MODAL_EDIT_PROJECT_NAME","AppMenu","handleDeleteCurrentBranch","onDeleteBranch","handleDeleteProject","onDeleteProject","showCreateProjecthModal","showImportProjecthModal","showDeleteBranchModal","showEditBranchNameModal","showEditProjectNameModal","submitUpdateBranchName","onEditBranch","submitUpdateProjectName","onEditProject","switchToBranchHead","onShowNotebook","onCreateProject","onImportProject","onGoHome","onShowChart","onShowDataset","onShowDatasetCaveat","onShowProject","onSwitchBranch","projectList","Image","src","logo","isMostRecentEnabled","Array","from","Map","flatMap","menuBar","fixed","optionalModalOrMessage","ResourcePage","dismissResourceError","handleCreateProject","handleImportProject","handleGoHome","handleSetFilter","handleShowBranch","handleShowProject","handleToggleHideCells","handleToggleNotebookReverse","loadChartView","loadDataset","loadDatasetCaveat","datasetAnnoUrl","loadDatasetToError","fetch_url","args","rowidarg","loadDatasetRepair","submitEditBranch","submitEditProject","contentCss","document","optionalError","pageContent","dimmer","headerContent","contentCssClass","Grid","Column","MainPage","showCreateProjectModal","headline","listingContent","BranchPage","handleDeleteBranch","handleShowWorkflow","isHead","handleSwitchBranch","match","project_id","branch_id","prevProps","prevState","snapshot","pathname","AnnotationObject","handleDelete","selectedAnnotation","handleClose","onDiscard","handleSelectAnnotation","handleSelectKey","anno","cssSuffix","annoIcon","List","relaxed","Description","inputForm","fluid","label","options","placeholder","ShareLinkModal","copySuccess","copyToClipboard","textInput","select","execCommand","onClose","copySupport","Label","NotebookStatusHeader","closeModal","openModal","extraContent","isAuth","API_ADV_AUTH","protocol","host","CommandsListing","arr","reduce","cat","apiEngine","onPaste","gridColumns","columnOrg","toList","groupedPackages","listItems","packageCategory","catPackages","as","width","Segment","divided","CodeCell","editor","cursorp","getCursor","to","origin","newLines","newLineCount","lastLineLength","newLine","line","newCh","ch","handleCursorActivity","cursorPos","onCursor","tabReplace","cm","spaces","getOption","replaceSelection","onClickInactiveCodeCell","onFocus","div","getElementById","height","lineHeightInPx","offsetHeight","chWidthInPx","transCY","nativeEvent","layerY","transCX","layerX","lineNo","lineSkew","sticky","xRel","cursorPosition","isActiveCell","language","mode","codeEditor","cursor","autofocus","lineNumbers","indentUnit","dragDrop","extraKeys","Tab","onBeforeChange","TextControl","strValue","toString","Form","BoolInput","checked","Checkbox","undefined","COLUMN_2_LETTER","temp","letter","String","fromCharCode","ColumnSelector","isRequired","selection","scrolling","ControlGroup","handleAdd","childId","childValue","controlSpec","formValue","newRow","blankRow","addTuple","rowIdx","handleMoveDown","handleMoveUp","selectedDataset","formLabels","child","t","tuple","rowControls","lastRowControls","lastRow","ControlRow","formControls","DatasetSelector","ctrlValue","ArtifactSelector","artifactType","artifact","FileSelector","clearSourceFile","handleFileDrop","uploadInfo","onDrop","multiple","TextSelector","entry","entryKey","URLSelector","useState","downloadUrl","setDownloadUrl","uploadFromUrl","iconPosition","onBlur","ModuleFormControl","ProgressContext","createContext","moduleProgress","Consumer","LoadDatasetForm","selectedCommand","localSourceState","setLocalSourceState","remoteSourceState","setRemoteSourceState","activeIndexValue","setActiveIndex","useEffect","handleValueChange","panes","menuItem","render","Pane","tabState","isUrlPane","progress","useContext","percent","autoSuccess","indicating","activeIndex","onTabChange","LoadFormPane","components","showingAdvancedOptions","setShowingAdvancedOptions","toggleAdvanced","cssAdvancedOption","hidden","Fragment","ModuleInputFormDecorator","cssTable","undecorated","ModuleInputForm","getSelectedDataset","ADD_ANNOTATION","CREATE_DATASET","DELETE_ANNOTATION","DELETE_COLUMN","DELETE_DATASET","DELETE_ROW","GET_DATASET","GET_DATASET_FRAME","INSERT_COLUMN","INSERT_ROW","NEW_DATASET_OBJECT","OUTPUT_ANNOTATIONS","OUTPUT_COLUMN_NAMES","OUTPUT_CELL_VALUES","OUTPUT_D3_PLOT","OUTPUT_BOKEH_PLOT","OUTPUT_MAP","EXPORT_MODULE","RENAME_DATASET","UPDATE_CELL_VALUE","UPDATE_ANNOTATION","UPDATE_DATASET","CodeSnippetsSelector","WITH_DATASET","ScalaCodeSnippetsSelector","RCodeSnippetsSelector","SELECT_TABLE","JOIN_TABLES","UNION_TABLES","DATASET","SQLCodeSnippetsSelector","secondaryDatasetValue","primaryDatasetValue","handleSecondaryDatasetChange","handlePrimaryDatasetChange","dsselector","TABLE","MarkdownCodeSnippetsSelector","CellCommandArea","handleActivateCell","onSelectCell","handleAppendCode","codeEditorProps","formValues","paraCode","editorValue","indent","script","split","refLine","substring","splice","handleFormValueChange","handleToggleSnippetSelector","modifiedValues","modifiedEditorProps","upstreamFormValues","handleBulkFormValueChange","handleCursorChange","handleDismiss","snippetSelectorVisible","handleDismissCommandsListing","onResetRecommendations","showCommandsListing","handleDismissErrors","handlePasteCommand","handleSelectCommand","handleShowCommandsListing","handleSubmitForm","onUpdateProgress","req","hasErrors","submitted","alert","handleF5Press","preventDefault","errorMessage","mainContent","additionalParams","codeSnippetButton","codeSnippetPanel","lockedCell","outputDataset","dstext","editing","buttonTitle","errorCss","wrappedContent","handlers","keyMap","runCell","dismiss","catchF5","buttons","moduleArguments","formattedModuleArguments","CellDropDownMenu","handleInsertBefore","onInsertCell","handleInsertAfter","cellNumber","isNewNext","isNewPrevious","onAddFilteredCommand","onCopyCell","onDeleteCell","onFreezeCell","onThawCell","dropdownItems","has","branchRange","cellStatusIcon","Plots","handleResize","elem","ReactDOM","findDOMNode","offsetWidth","handleSelectChart","handleToggleGrouped","selectedReCharts","nameChart","data_temp","grouped","labels","selectedReChart","yAxisName","data_","GridList","cellHeight","gridList_cellHeight","cols","gridList_height","overflowY","gridLis_overflowY","caveatDot","cx","cy","payload","dataKey","y","fill","viewBox","dy","fontSize","caveatLabels","idx","stackId","connectNulls","stroke","listColors","fillOpacity","top","bottom","left","right","strokeDasharray","verticalAlign","caveats","dot","dataScatterChart","dataTemp","instanceSP","indexOf","nameKey","innerRadius","outerRadius","dataRadarChart","instanceRC","indexRC","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","barSize","minAngle","background","clockWise","iconSize","layout","wrapperStyle","lineHeight","ratio","chartType","series","colorScale","scaleOrdinal","domain","range","addEventListener","xAxis","global_data","columnsNames","data_i","nameSerie","sort_values","identifier","fetchData","groupedCheckbox","CaveatLabel","PureComponent","gridList_width","colorText","DatasetChart","generatePDF","plotName","input","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","orientation","unit","addImage","save","CTRL_ID","GridInput","cellValue","onMove","onUpdate","ctrlKey","shiftKey","setFocus","isNull","el","focus","setSelectionRange","GridCell","handleClick","columnIndex","rowIndex","handleMove","direction","handleFetchAnnotations","onFetchAnnotations","cellCss","RowDropDown","deleteRow","onAction","insertRowAbove","insertRowBelow","RowIndexCell","handleMoveDropBefore","dropData","dropTargetData","onMoveAction","dropTargetDataValue","currentTarget","attributes","handleMoveDropAfter","isSpreadsheet","dropdown","dropTargetType","dropTargetBefore","dropTargetAfter","types","SpreadsheetDropDown","handleCopy","textField","createElement","innerText","appendChild","remove","handleDownload","downloadLimit","handleEditSpreadsheet","onEditSpreadsheet","onRecommendAction","downloadDropdown","Popup","trigger","on","hoverable","centered","GridColumn","textAlign","ScrollButton","enabled","SpreadsheetScrollbar","handleNavigateFirstPage","onNavigate","handleNavigateLastPage","maxValue","handleNavigateNextPage","handleNavigateNextRow","handleNavigatePreviousPage","max","handleNavigatePreviousRow","cellLimit","m","hasPrevious","hasNext","scrollbar","Centered","styled","D3BasedPlot","profiledData","isLoadingPlot","dataPlot","getEncoding","typePlot","yContent","field","bin","binned","x2","tooltip","utc","order","VegaLiteBasedPlot","isTherePlotData","plot","display","VegaLite","spec","axis","domainColor","axisX","ticks","encoding","mark","PlotHeader","profilerType","ColumnView","cidx","dataPlot_","backgroundColor","borderColor","borderRadius","overflow","listStyle","columnCount","columnGap","distinctValueCount","num_distinct_values","count","mean","stdDev","sum","maxHeight","minHeight","ColumnDropDown","deleteColumn","insertColumnLeft","insertColumnRight","sortAZ","sortZA","isEditing","columnName","wrapperComponent","Headers","DatasetView","handleSelectCell","updateTypeView","handleRequestProfiler","typeView","toastr","positionClass","hideDuration","timeOut","contentHeader","summaryPlot","ridx","returnContent","Group","floated","marginTop","pointing","getDerivedStateFromProps","TimestampOutput","time","CellOutputArea","activeTab","resourceName","hide","handleDiscardAnnotation","handleOutputDismiss","onOutputSelect","handleConsoleDownload","element","getConsoleOutputs","Blob","URL","createObjectURL","download","click","handleItemClick","handleCopyEmbedClick","code","innerHTML","removeChild","handleCopyURLClick","renders","hasOwnProperty","Response","createReactClass","dangerouslySetInnerHTML","__html","plugins","gfm","source","getDatasetView","getChartView","JavascriptCellOutput","html","deps","js_deps","onNavigateDataset","TypeError","maxDownloadRowLimit","getOutputContent","finishedType","stderr","errorOut","outputContent","onCancelExec","onCheckStatus","cancelButton","datasetList","chartList","consoleItems","v","consoleList","unshift","menu","indeterminate","nextProps","newOutput","toLowerCase","handleUpdateProgress","handleAddFilteredCommand","handleCopyCell","handleDatasetNavigate","onDatasetNavigate","handleDeleteCell","handleInsertCell","handleRemoveFilteredCommand","onRemoveFilteredCommand","handleFreezeCell","handleThawCell","handleRecommendAction","onDismissCell","onSubmitCell","cellIndex","cellMenu","outputArea","cmdSpec","isFiltered","errorcss","errorIcon","isNewNextFlag","isNewPreviousFlag","commandText","cssState","isFrozen","Provider","TableOfContents","toggleState","contents","tocElements","class","linkToIdx","activityClass","handleAppendCell","isEmpty","lastCell","handleResetRecommendations","activeNotebookCell","onSelectNotebookCell","notebookCells","moduleCount","hasActiveCell","onCancelCallback","submitHandler","isArray","appendCellButton","reverse","NotebookPage","addFilteredCommand","handleCancelWorkflowExec","cancelWorkflowExecution","handleCheckWorkflowStatus","resultBranch","addBranch","createBranch","hideCreateBranchModal","deleteNotebookCell","getLatestNotebook","updateCellDatasetProperties","handleDismissCell","dismissChangesForCell","dismissCellChanges","handleFetchDatasetCellAnnotations","dismissAnnotationModal","editCell","createtNotebookCell","removeFilteredCommand","handleSelectOutput","getDatasetForModule","hideCellOutput","showCellTimestamps","handleSelectActiveCell","selectNotebookCell","handleShowBranchHead","handleSubmitCell","modalOpen","showModuleSpreadsheet","showCreateBranchModal","modalTitle","queryCommandSupported","workflow_id","onChangeGrouping","handleChangeGrouping","notebookFooter","annotationsObject","cellOutput","ccell","Spreadsheet","appendModule","reqData","toggleNotebookCell","upload","clearActiveCell","submitPendingUpdate","activeColumnId","activeRowId","activeColumnIndex","activeRowIndex","originalCellValue","updatedCellValue","deleteUserAnnotation","annoId","deleteAnnotations","dismissModal","modalValue","modalResult","handleCellUpdate","handleMoveCell","minRowIndex","maxRowIndex","colIdx","rowAtIndex","abs","handleMoveHeader","handleNavigate","dataseti","handleSubmitModal","submitVizualCommand","insertColumn","handleMoveAction","srcValue","targetValue","handleVizualAction","insertRow","sortOrder","sortDataset","showNotebookCell","handleDisplayRows","handleCheckStatus","notebookRunning","showAnnotationModal","handleMoveColumnModalInputChange","handleMoveRowModalInputChange","valueValidFunc","modalPrompt","getInsertModuleIndex","imodule","updatingColumnId","updatingRowId","updatingValue","updateCell","renameColumn","submitUserAnnotation","new_value","row_id","updateAnnotation","activeDataset","newProps","currentDataset","newDataset","isBlocked","onDragStart","handleDragStart","showAnnoHandler","notebookCell","annoButtonCss","notebookCellButton","cellIcon","apiPolling","compact","float","Dimmer","Dimmable","dimmed","newState","opError","SpreadsheetPage","DatasetReason","handleExpand","expanded","handleGotoError","onGotoError","buildReasonElement","elkey","elvalue","entries","ek","ev","family","confirmed","reasonElements","gotoErrorIcon","DatasetCaveat","onRepairError","ackedErrors","errs","DatasetCaveatsPage","AuthModal","handleChangePasswd","passwd","btoa","App","showAuthModal","authComplete","APP_TITLE","connection","refetchService","Switch","Route","exact","path","component","modals","createHistory","middleware","thunk","routerMiddleware","owaScript","ANALYTICS_URL","owatag","owa_cmds","_owa","async","_owa_s","getElementsByTagName","parentNode","insertBefore","owa_baseUrl","ANALYTICS_SITE_ID","injectOWA","composedEnhancers","compose","applyMiddleware","store","createStore","reducer","API_URL","neededDeps","eval","dep","lastTrigger","onload"],"mappings":"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","file":"static/js/main.1d91f032.chunk.js","sourcesContent":["/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Default number of rows that are fetched when displaying a dataset in the\n// notebook cell output area.\nconst DEFAULT_CELL_DATASET_ROW_LIMIT = 10;\n// By now the commands that are filtered by default are hard-coded.\nexport const DEFAULT_FILTERED_COMMANDS = {\n    vizual: [\n        'deleteColumn',\n        'deleteRow',\n        'insertColumn',\n        'insertRow',\n        'moveColumn',\n        'moveRow',\n        'renameColumn',\n        'updateCell'\n    ]\n}\n// By default filtered commands are collapsed and not hidden\nconst DEFAULT_HIDE_FILTERED_COMMANDS = false;\n// Default order of cells in a notebook\nconst DEFAULT_SHOW_NOTEBOOK_REVERESED = false;\n\n\n/**\n * Object to capture all user preferences and their default values.\n */\nexport class UserSettings {\n    constructor(filteredCommands, cellRowLimit, reversedOrder, hideCommands, clipboard) {\n        this.filteredCommands = (filteredCommands != null) ? filteredCommands : DEFAULT_FILTERED_COMMANDS;\n        this.cellDatasetRowLimit = (cellRowLimit != null) ? cellRowLimit : DEFAULT_CELL_DATASET_ROW_LIMIT;\n        this.reversedOrder = (reversedOrder != null) ? reversedOrder : DEFAULT_SHOW_NOTEBOOK_REVERESED;\n        this.hideCommands = (hideCommands != null) ? hideCommands : DEFAULT_HIDE_FILTERED_COMMANDS;\n        this.clipboard = clipboard;\n    }\n    /**\n     * Add the given command to the list of commands that are selected to\n     * be hidden by the user. Returns a new user settinsg object.\n     */\n    addCommandToHiddenList(command) {\n        const commandList = {};\n        const pckg = this.filteredCommands[command.packageId];\n        if (pckg != null) {\n            const modifiedList = [];\n            let found = false;\n            for (let i = 0; i < pckg.length; i++) {\n                if (pckg[i] !== command.id) {\n                    modifiedList.push(pckg[i]);\n                } else {\n                    found = true;\n                }\n            }\n            if (!found) {\n                modifiedList.push(command.id);\n            }\n            commandList[command.packageId] = modifiedList;\n        } else {\n            commandList[command.packageId] = [command.id];\n        }\n        for (let prop in this.filteredCommands) {\n            if (prop !== command.packageId) {\n                commandList[prop] = this.filteredCommands[prop];\n            }\n        }\n        return new UserSettings(\n            commandList,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Number of rows that are fetched when a dataset is displayed in the output\n     * area of a notebook cell.\n     */\n    cellRowLimit() {\n        return this.cellDatasetRowLimit;\n    }\n    /**\n     * Copy the module specification and command arguments of the given cell to\n     * the clipboard. Returns a modified object.\n     */\n    copyCell(cell) {\n        let content = null;\n        if (!cell.isNewCell()) {\n            content = {\n                commandSpec: cell.commandSpec,\n                arguments: cell.module.command.arguments\n            };\n        }\n        return new UserSettings(\n            this.filteredCommands,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands,\n            content\n        );\n    }\n    /**\n     * Test if a given command is included in the list of filtered commands.\n     */\n    isFiltered(command) {\n        const pckg = this.filteredCommands[command.packageId];\n        if (pckg != null) {\n            if (pckg.find((c) => (c === command.id))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Flag indicating if notebook cells that have filtered commands are hidden\n     * or just collapsed.\n     */\n    hideFilteredCommands() {\n        return this.hideCommands;\n    }\n    /**\n     * Toggle the reverse notebook cell order. Returns a modified user settings\n     * object.\n     */\n    reverseOrder() {\n        return new UserSettings(\n            this.filteredCommands,\n            this.cellRowLimitValue,\n            !this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Remove the given command from the list of commands that are selected to\n     * be hidden by the user. Returns a new user settinsg object.\n     */\n    removeCommandFromHiddenList(command) {\n        const commandList = {};\n        for (let prop in this.filteredCommands) {\n            if (prop === command.packageId) {\n                const commands = this.filteredCommands[prop];\n                const modifiedList = [];\n                for (let i = 0; i < commands.length; i++) {\n                    if (commands[i] !== command.id) {\n                        modifiedList.push(commands[i]);\n                    }\n                }\n                if (modifiedList.length > 0) {\n                    commandList[prop] = modifiedList;\n                }\n            } else {\n                commandList[prop] = this.filteredCommands[prop];\n            }\n        }\n        return new UserSettings(\n            commandList,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Set the object that contains the filtered module identifier. Expects an\n     * object where the properties are package identifier and the values are\n     * lists of command identifier. Returns a modified user settings object.\n     */\n    setFilter(filter) {\n        // Eesure that the filter is not null\n        const filteredCommands = (filter != null) ? filter : {};\n        return new UserSettings(\n            filteredCommands,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            this.hideCommands\n        );\n    }\n    /**\n     * Flag indicating whether the cells in a notebook should be shown in\n     * reverse order or not.\n     */\n    showNotebookReversed() {\n        return this.reversedOrder;\n    }\n    /**\n     * Toggle the hide filtered commands value. Returns a modified user settings\n     * object.\n     */\n    toggleHideCells() {\n        return new UserSettings(\n            this.filteredCommands,\n            this.cellRowLimitValue,\n            this.reversedOrder,\n            !this.hideCommands\n        );\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Add a command to the list of hidden commands\nexport const ADD_FILTERED_COMMAND = 'ADD_FILTERED_COMMAND';\n// Copy a given cell to the clipboard that is contained in the user settings\nexport const COPY_CELL = 'COPY_CELL';\n// Toggle the value of the hide cells property\nexport const HIDE_CELLS= 'HIDE_CELLS';\n// Dummy action when redirecting as result of a received resource\nexport const NO_OP = 'NO_OP';\n// Remove a command from list of filtered commands\nexport const REMOVE_FILTERED_COMMAND = 'REMOVE_FILTERED_COMMAND';\n// Reverse notebook cell order\nexport const REVERSE_ORDER = 'REVERSE_ORDER';\n// Set the object that conatins the filtered module identifier\nexport const SET_FILTERED_MODULES = 'SET_FILTERED_MODULES';\n\n\n/**\n * Add the given command to the list of filtered commands in the user\n * settings.\n */\nexport const addFilteredCommand = (command) => ({\n    type: ADD_FILTERED_COMMAND,\n    command\n})\n\n\n/**\n * Copy the given cell to the clipboard that is contained in the user settings.\n */\nexport const copyCell = (cell) => ({\n    type: COPY_CELL,\n    cell\n})\n\n/**\n * Set the object that contains the filtered module identifier. Expects an\n * object where the properties are package identifier and the values are\n * lists of command identifier.\n */\nexport const setModuleFilter = (filter) => ({\n    type: SET_FILTERED_MODULES,\n    filter\n})\n\n/**\n * Toggle the value of the hide filtered cells property in the user settings.\n */\nexport const toggleHideCells = () => ({\n    type: HIDE_CELLS\n});\n\n\n/**\n * Remove the given command from the list of filtered commands in the user\n * settings.\n */\nexport const removeFilteredCommand = (command) => ({\n    type: REMOVE_FILTERED_COMMAND,\n    command\n})\n\n/**\n * Reverse ordering of notebook cells.\n */\nexport const reverseOrder = () => ({\n    type: REVERSE_ORDER\n});\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserSettings } from '../../util/Settings';\nimport { ADD_FILTERED_COMMAND, COPY_CELL, HIDE_CELLS, REMOVE_FILTERED_COMMAND,\n    REVERSE_ORDER, SET_FILTERED_MODULES } from '../../actions/main/App';\n\n/**\n* This application state contains the user preferences object.\n*/\n\nconst INITIAL_STATE = {\n    userSettings: new UserSettings()\n}\n\n\nexport const app = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ADD_FILTERED_COMMAND:\n            return {\n                ...state,\n                userSettings: state.userSettings.addCommandToHiddenList(action.command)\n            };\n        case COPY_CELL:\n            return {\n                ...state,\n                userSettings: state.userSettings.copyCell(action.cell)\n            };\n        case HIDE_CELLS:\n            return {\n                ...state,\n                userSettings: state.userSettings.toggleHideCells()\n            };\n        case REMOVE_FILTERED_COMMAND:\n            return {\n                ...state,\n                userSettings: state.userSettings.removeCommandFromHiddenList(action.command)\n            };\n        case REVERSE_ORDER:\n            return {\n                ...state,\n                userSettings: state.userSettings.reverseOrder()\n            };\n        case SET_FILTERED_MODULES:\n            return {\n                ...state,\n                userSettings: state.userSettings.setFilter(action.filter)\n            };\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport axios from 'axios'\n/**\n * Actions for retrieving the Vizier DB Web Service Descriptor. The service\n * descriptor contains the service name, the list of available workflow\n * execution environments, and a list of HATEOAS references to Web service\n * resources.\n *\n * The service descriptor will be retrieved as the first operation by the Web\n * Application.\n *\n * The service descriptor will be maintained as part of the application state\n * under element 'serviceApi'.\n *\n * It is assumed that the serviceUrl (containing the base Url of the Vizier DB\n * Web Service) has been initialized as path of the App initialization.\n */\nexport const REQUEST_SERVICE = 'REQUEST_SERVICE'\nexport const RECEIVE_SERVICE = 'RECEIVE_SERVICE'\nexport const SERVICE_ERROR = 'SERVICE_ERROR'\nexport const REQUEST_AUTH = 'REQUEST_AUTH'\nexport const RECEIVE_AUTH = 'RECEIVE_AUTH'\n\n//MODAL IDENTIFIERS\nexport const MODAL_AUTH = 'AUTH'\n\n/**\n * Signal start of service descriptor fetching.\n */\nconst requestService = () => ({\n  type: REQUEST_SERVICE\n})\n\n/**\n * Handler for successful retrieval of service descriptor.\n */\nconst receiveService = (json) => {\n    if(json.defaults && json.defaults.profile)\n    \tlocalStorage.setItem('profile', JSON.stringify(json.defaults.profile)); \t\n    return ({\n        type: RECEIVE_SERVICE,\n        name: json.name,\n        properties: json.defaults,\n        environment: json.environment,\n        links: json.links\n    })\n}\n\n/**\n * Error handler for service descriptor retrieval.\n */\nexport const serviceError = (error) => ({\n    type: SERVICE_ERROR,\n    error\n})\n\n/**\n * Signal start of auth request.\n */\nexport const requestAuth = () => ({\n  type: REQUEST_AUTH\n})\n\n/**\n * Handler for successful retrieval of auth.\n */\nexport const receiveAuth = (json) => ({\n  type: RECEIVE_AUTH,\n  authdata: json\n})\n\n/**\n * try to get the auth data saved in local storage.\n */\nexport const authHeader = (dispatch) => {\n    // return authorization header with basic auth credentials\n    let user = JSON.parse(localStorage.getItem('user'));\n    if(!user){\n    \tdispatch(requestAuth())\n    \treturn null;\n    }\n    if (user && user.authdata) {\n        return { 'Authorization': 'Basic ' + user.authdata };\n    } else {\n    \tlocalStorage.removeItem('user')\n    \treturn null;\n    }\n}\n/***\n * use axios get and post methods to resolve promises. This fetcher gives us access to more data fetching features\n * e.g. monitoring onUploadProgress, onDownloadProgress\n */\nexport const getAuthed = (url, fetchProps, config) => (dispatch) => {\n\tif(window.env.API_BASIC_AUTH){\n\t\tconst authHead = authHeader(dispatch);\n\t\tif(authHead){\n\t\t\tlet newFetchProps = fetchProps;\n\t\t\tif(fetchProps && fetchProps.headers){\n\t\t\t\tObject.assign(newFetchProps.headers, authHead);\n\t\t\t}\n\t\t\telse if(fetchProps){\n\t\t\t\tnewFetchProps.headers = authHead;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewFetchProps = {\n\t\t\t\t\tmethod : 'GET',\n\t\t\t\t\theaders: authHead\n\t\t\t\t};\n\t\t\t}\n\t\t\tconfig = {\n\t\t\t\t...config,\n\t\t\t\theaders: newFetchProps.headers\n\t\t\t};\n\t\t\tlet propData = newFetchProps.body ? newFetchProps.body : null;\n\t\t\treturn newFetchProps.method ==='POST' ? axios.post(url, propData, config) : axios.get(url, config)\n\t\t}\n\t\telse return new Promise(function(resolve, reject){\n\t\t\treject({message:\"No saved credentials.  Please enter credentials.\"})\n\t\t})\n\t}\n\telse {\n\t\tconst promise = fetchProps.method ==='POST' ? axios.post(url, fetchProps.body, config) : axios.get(url, config)\n\t\treturn promise.then( (response) => (response))\n\t}\n\n}\n/**\n * try to get the auth data saved in local storage.\n */\nexport const fetchAuthed = (url, fetchProps) => (dispatch) => {\n\tif(window.env.API_BASIC_AUTH){\n\t\tconst authHead = authHeader(dispatch);\n\t\tif(authHead){\n\t\t    let newFetchProps = fetchProps;\n\t\t    if(fetchProps && fetchProps.headers){\n\t\t    \tObject.assign(newFetchProps.headers, authHead);\n\t\t\t}\n\t\t\telse if(fetchProps){\n\t\t\t\tnewFetchProps.headers = authHead;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewFetchProps = {\n\t\t\t\t\tmethod : 'GET',\n\t\t\t\t\theaders: authHead\n\t\t\t\t};\n\t\t\t}\n\t\t    return fetch(url, newFetchProps)\n\t    }\n\t    else return new Promise(function(resolve, reject){\n\t    \t reject({message:\"No saved credentials.  Please enter credentials.\"})\n\t    \t})\n\t}\n    else {\n    \treturn fetch(url, fetchProps)\n    }\n}\n\n/**\n * Checks a fetch response to determine if an authorization timeout has occured \n * and since fetch can not handle redirects we may need to trigger browser GET\n * to perform the renewal.  Right now this is specifically for ub shibboleth; \n * we can generalize it more in the future.  \n *\n */\nexport const checkResponseJsonForReAuth = (response, isReadableStream) => {\n\tif(isReadableStream!=null && !isReadableStream){\n\t\treturn Promise.resolve(response.data)\n\t}else{\n\t\treturn response.text().then(text => {\n\t\t\ttry {\n        // console.log(\"REAUTH: \" + text)\n\t\t\t\tconst jsonObj = JSON.parse(text)\n\t\t\t\treturn Promise.resolve(jsonObj)\n\t\t\t} catch(err) {\n\t\t\t\tif(text && text.startsWith(\"<!DOCTYPE html>\") && text.includes(\"SAMLRequest\")){\n\t\t\t\t\tconst r = window.confirm(\"Your session has timed out.  Do you want to renew your session?\");\n\t\t\t\t\tif (r === true) {\n\t\t\t\t\t\t//window.location.reload(false);\n\t\t\t\t\t\t//stored from serviceApi.properties.profile\n\t\t\t\t\t\tconst profile = JSON.parse(localStorage.getItem('profile'));\n\t\t\t\t\t\tlet reauthClient = \"default\";\n\t\t\t\t\t\tif (profile && profile.client) {\n\t\t\t\t\t\t\treauthClient = profile.client\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.open(process.env.PUBLIC_URL + \"/reauth?client=\" + reauthClient);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.resolve(JSON.parse(\"{}\"))\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve(JSON.parse(\"{}\"))\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Action to retrieve API service descriptor. Expects that the Web Service Url\n * has been set during App initialization.\n *\n */\nexport const fetchService = () => (dispatch, getState) =>  {\n    // Get API Url from the current state. It is expected that the Url has been\n    // set as part of the App initialization\n    const url = getState().serviceApi.serviceUrl;\n    // Signal start to service descriptor retrieval\n    dispatch(requestService())\n    return fetchAuthed(url)(dispatch)\n    // Check the response. Assume that eveything is all right if status\n    // code below 400\n    .then(function(response) {\n        if (response.status >= 200 && response.status < 400) {\n            // SUCCESS: Pass the JSON result to the respective callback\n            // handler\n            checkResponseJsonForReAuth(response).then(json => dispatch(receiveService(json)));\n        } else if(response.status === 401) {\n        \t// UNAUTHORIZED: re-request auth\n        \tdispatch(requestAuth())\n        } else {\n            // ERROR: The API is expected to return a JSON object in case\n            // of an error that contains an error message\n            checkResponseJsonForReAuth(response).then(json => dispatch(serviceError(json.message)));\n        }\n    })\n    .catch(err => dispatch(serviceError(err.message)))\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RECEIVE_SERVICE } from '../../actions/main/Service'\n\n\n/**\n * STATE:\n *\n * homePageContent: Welcome message {title: ..., description: ...} provided by\n *    the API.\n * projects: Project listing returned by the API.\n */\n\nconst INITIAL_STATE = {\n    homePageContent: null,\n    projects: []\n}\n\n\n/**\n* Reducer for actions that manipulate the global state of the App home page.\n*/\nexport const mainPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case RECEIVE_SERVICE:\n            return {\n                ...state,\n                homePageContent: action.welcome\n            }\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../actions/main/Service';\n\n\n/**\n * Collection of functions to interact with the Vizier DB Web service API.\n */\n\n\n/**\n * Generic function to create a new resource at the Web service via HTTP POST\n * request. Expects at least two callback functions (successHandler and\n * errorHandler) that will be called respectively when the resource was\n * retrieved successfully or in case of an error. The optional\n * signalStartHandler will be called before the request is being made.\n */\nexport const createResource = (url, data, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    dispatch(postResourceData(url, data, successHandler, errorHandler, signalStartHandler))\n}\n\n\n/**\n * Generic function to delete a resource from the Web service. Expects at\n * least two callback functions (successHandler and errorHandler) that will be\n * called respectively when the resource was deleted successfully or in case\n * of an error. The optional signalStartHandler will be called before the\n * attempt to fetch the resource is being made.\n *\n * There are no arguments that are being passed to the success handler because\n * Vizier DB API DELETE requests to not return any content.\n *\n * If the resource does not exists no error will be displayed. Instead, the\n * success handler is called.\n */\nexport const deleteResource = (url, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(url, {method: 'DELETE'})(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code is 204\n        .then(function(response) {\n            if (response.status === 204) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                dispatch(successHandler());\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth());\n            } else if (response.status === 404) {\n                dispatch(errorHandler('Resource not found'));\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Generic function to retrieve a resource from the Web service. Expects at\n * least two callback functions (successHandler and errorHandler) that will be\n * called respectively when the resource was retrieved successfully or in case\n * of an error. The optional signalStartHandler will be called before the\n * attempt to fetch the resource is being made.\n */\nexport const fetchResource = (url, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(url)(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(successHandler(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Get the value for a resource property with given key. If no property with\n * given key exists the defaultValue will be returned.\n */\nexport const getProperty = (object, key, defaultValue) => {\n    // Get dictionary value for key 'name'\n    let property = object.properties.find(prop => (prop.key === key));\n    if (property) {\n        return property.value;\n    } else {\n        return defaultValue;\n    }\n};\n\n\n/**\n * Generic function to create or update a resource at the Web service via HTTP\n * POST request. Expects at least two callback functions (successHandler and\n * errorHandler) that will be called respectively when the resource was\n * created or updated successfully or in case of an error. The optional\n * signalStartHandler will be called before the request is being made.\n */\nexport const postResourceData = (url, data, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(\n            url,\n            {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n            }\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(successHandler(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Generic function to update a resource at the Web service via HTTP PUT\n * request. Expects at least two callback functions (successHandler and\n * errorHandler) that will be called respectively when the resource was\n * created or updated successfully or in case of an error. The optional\n * signalStartHandler will be called before the request is being made.\n */\nexport const putResourceData = (dispatch, url, data, successHandler, errorHandler, signalStartHandler) => {\n    // Signal start if callback handle is given\n    if (signalStartHandler) {\n        dispatch(signalStartHandler())\n    }\n    return fetchAuthed(\n            url,\n            {\n                method: 'PUT',\n                body: JSON.stringify(data),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n            }\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(successHandler(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(errorHandler(json.message)));\n            }\n        })\n        .catch(err => dispatch(errorHandler(err.message)))\n}\n\n\n/**\n * Generic function to update a property of a resource at the Web service via\n * HTTP POST request. Expects at least two callback functions (successHandler\n * and errorHandler) that will be called respectively when the resource was\n * updated successfully or in case of an error. The optional signalStartHandler\n * will be called before the request is being made.\n *\n * The property key cannot be null. If the new property value is null, the\n * property will be deleted.\n */\n export const updateResourceProperty = (url, key, value, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    let updStmt = {'key': key}\n    if (value !== null) {\n        updStmt['value'] = value\n    }\n    return putResourceData(dispatch, url, {'properties': [updStmt]}, successHandler, errorHandler, signalStartHandler)\n}\n\n\n/**\n * Update a resource at the Vizier DB Web API by posting a Json object. Expects\n * at least two callback functions (successHandler and errorHandler) that will\n * be called respectively when the resource was updated successfully or in case\n * of an error. The optional signalStartHandler will be called before the\n * request is being made.\n */\nexport const updateResource = (url, data, successHandler, errorHandler, signalStartHandler) => (dispatch) => {\n    return postResourceData(dispatch, url, data, successHandler, errorHandler, signalStartHandler)\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper classes and constants for HATEOAS references returned as part of\n * API responses for the different API resources.\n */\n\n// General\nexport const HATEOAS_SELF = 'self';\n\n// API\nexport const HATEOAS_API_DOC = 'api.doc';\nexport const HATEOAS_USER_AUTH = 'user.auth';\n\n// Branch\nexport const HATEOAS_BRANCH_HEAD = 'branch.head';\nexport const HATEOAS_BRANCH_UPDATE_PROPERTY = 'branch.update';\n\n// Dataset\nexport const HATEOAS_DATASET_DOWNLOAD = 'dataset.download';\nexport const HATEOAS_DATASET_GET_ANNOTATIONS = 'annotations.get';\n\n// Projects\nexport const HATEOAS_PROJECTS_CREATE = 'project.create';\nexport const HATEOAS_PROJECTS_IMPORT = 'project.import';\nexport const HATEOAS_PROJECTS_DELETE = 'project.delete';\nexport const HATEOAS_PROJECTS_LIST = 'project.list';\nexport const HATEOAS_PROJECT_UPDATE_PROPERTY = 'project.update';\n\n// Project\nexport const HATEOAS_PROJECT_FILE_UPLOAD = 'file.upload';\n\n// Workflow\nexport const HATEOAS_WORKFLOW_CANCEL = 'workflow.cancel';\n\n// Module\nexport const HATEOAS_MODULE_APPEND = 'workflow.append';\nexport const HATEOAS_MODULE_DELETE = 'module.delete';\nexport const HATEOAS_MODULE_INSERT = 'module.insert';\nexport const HATEOAS_MODULE_REPLACE = 'module.replace';\nexport const HATEOAS_MODULE_FREEZE = 'module.freeze';\nexport const HATEOAS_MODULE_THAW = 'module.thaw';\n\n\n/**\n * Maintain a list of HATEOAS references that are given as an array of\n * (rel,href)-pairs.\n *\n * Provides methods to retrieve references for given relationship keys and\n * to test for the existence of objects with particular reference keys in the\n * array.\n */\nexport class HATEOASReferences {\n    /**\n     * Expects an array of HATEOAS reference objects as returned by the API.\n     * Each object has a 'rel' and 'href' property.\n     */\n    constructor(links) {\n        this.links = links;\n    }\n    /**\n     * Get the HTTP reference that is associated with the given relationship\n     * key. The result is null if no reference with the given key exists.\n     */\n    get(key) {\n        const ref = this.links.find((ref) => (ref.rel === key));\n        if (ref != null) {\n            return ref.href;\n        } else {\n            console.log('NOT FOUND IN')\n            console.log(this.links);\n            return null;\n        }\n    }\n    /**\n     * Get annotations for a dataset cell identified by the column and row\n     * identifier.\n     */\n    getAnnotations(columnId, rowId) {\n        let url = this.get(HATEOAS_DATASET_GET_ANNOTATIONS);\n        url += '?column=' + columnId + '&row=' + rowId;\n        return url;\n    }\n    /**\n     * Get the dataset fetch URL for a given range of rows. This method\n     * it is called on the set of URL's returned for a dataset descriptor\n     */\n    getDatasetUrl(offset, limit, profile=false) {\n        let url = this.get(HATEOAS_SELF);\n        url += '?offset=' + offset + '&limit=' + limit;\n        if(profile){\n            url += '&profile=' + profile;\n        }\n        return url;\n    }\n    /**\n     * Get the Url for a workflow with the given identifier.\n     *\n     * This method will return null if the links list does not contain an entry\n     * for the project listing.\n     */\n    getNotebookUrl(projectId, branchId, workflowId) {\n        let url = this.get(HATEOAS_PROJECTS_LIST);\n        if (url != null) {\n            url += '/' + projectId + '/branches/' + branchId;\n            if (workflowId != null) {\n                url += '/workflows/' + workflowId;\n            } else {\n                url += '/head';\n            }\n            return url;\n        } else {\n            return null;\n        }\n    }\n    /**\n     * Get the Url for a project with the given identifier. The idea is to keep\n     * all resource URLs in one place. At this point we just hard-code the\n     * pattern for project URLs into the method. To be more flexible we could\n     * include URL patterns in the links object as well.\n     *\n     * This method will return null if the links list does not contain an entry\n     * for the project listing.\n     */\n    getProjectUrl(projectId) {\n        const url = this.get(HATEOAS_PROJECTS_LIST);\n        if (url != null) {\n            return url + '/' + projectId;\n        } else {\n            return null;\n        }\n    }\n    /**\n     * Short-cut to get resource self reference.\n     */\n    getSelf = () => (this.get(HATEOAS_SELF));\n    /**\n     * Test if a HATEOAS reference with the given key exists.\n     */\n    has(key) {\n        return (this.links.find((ref) => (ref.rel === key)) != null);\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getProperty } from '../util/Api';\nimport { HATEOASReferences } from '../util/HATEOAS';\n\n\n// -----------------------------------------------------------------------------\n// Classes\n// -----------------------------------------------------------------------------\n\n/**\n * Descriptor for a project branch. Contains the basic information about the\n * branch (i.e., .id, .name, and .links).\n */\nexport class BranchDescriptor {\n    constructor(id, name, isDefault, links) {\n        this.id = id;\n        this.name = name;\n        this.isDefault = isDefault;\n        this.links = links;\n    }\n    /**\n     * Initialize the descriptor from a Json object that is a BranchDescriptor\n     * serialization returned by the Web API.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = getProperty(json, 'name', 'undefined');\n        this.isDefault = json.isDefault;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n    /**\n     * Create a copy of the branch handle with a modified name.\n     */\n    updateName(name) {\n        const { id, isDefault, links } = this;\n        return new BranchDescriptor(id, name, isDefault, links);\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Collection of functions that sort arrays of various objects.\n */\n\n/**\n * Sort elements in a list by their .name property.\n */\nexport const sortByName = (objects) => (\n    objects.sort(function(o1, o2) {return o1.name.localeCompare(o2.name)})\n);\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manipulate timestamps for Vizier-DB resources.\n */\nvar moment = require('moment-timezone');\nexport const utc2LocalTime = (timestamp) => {\n    const localDate = moment.tz(timestamp, \"UTC\");\n    return localDate.tz(moment.tz.guess()).format('DD-MMM-YYYY HH:mm:ss');\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Collection of definitions and helper methods to submit Vizual operstions.\n */\n\n/**\n * Vizual operation identifier\n */\n\nexport const VIZUAL = {\n    DELETE_COLUMN: 'deleteColumn',\n    DELETE_ROW: 'deleteRow',\n    DROP_DATASET: 'dropDataset',\n    INSERT_COLUMN: 'insertColumn',\n    INSERT_ROW: 'insertRow',\n    LOAD: 'load',\n    MOVE_COLUMN: 'moveColumn',\n    MOVE_ROW: 'moveRow',\n    PROJECTION: 'projection',\n    RENAME_COLUMN: 'renameColumn',\n    RENAME_DATASET: 'renameDataset',\n    SORT: 'sortDataset',\n    UPDATE_CELL: 'updateCell'\n}\n\nexport const VIZUAL_OP = 'vizual';\n\n// Sort orders\nexport const SORT = {\n    ASC: 'asc',\n    DESC: 'desc'\n}\n\n\n/**\n * DELETE COLUMN operation request body\n */\nexport const deleteColumn = (dataset, column) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.DELETE_COLUMN,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'column',value:column}\n    ]\n})\n\n\n/**\n * DELETE ROW operation request body\n */\nexport const deleteRow = (dataset, row) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.DELETE_ROW,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'row',value:row}\n    ]\n})\n\n\n/**\n * INSERT COLUMN operation request body\n */\nexport const insertColumn = (dataset, name, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.INSERT_COLUMN,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'name',value:name},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * INSERT ROW operation request body\n */\nexport const insertRow = (dataset, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.INSERT_ROW,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * MOVE COLUMN operation request body\n */\nexport const moveColumn = (dataset, column, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.MOVE_COLUMN,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'column',value:column},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * MOVE ROW operation request body\n */\nexport const moveRow = (dataset, row, position) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.MOVE_ROW,\n\targuments: [\n    \t{id:'dataset',value:dataset},\n    \t{id:'row',value:row},\n    \t{id:'position',value:position}\n    ]\n})\n\n\n/**\n * RENAME COLUMN operation request body\n */\nexport const renameColumn = (dataset, column, name) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.RENAME_COLUMN,\n    arguments: [\n    \t{id:'dataset',value:dataset},\n        {id:'column',value:column},\n        {id:'name',value:name}\n    ]\n})\n\n\n/**\n * SORT A DATASET based on the values int he given column.\n */\nexport const sortDataset = (dataset, column, sortOrder) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.SORT,\n    arguments: [\n    \t{id:'dataset',value:dataset},\n        {id:'columns',value:[\n            [\n                {id:'columns_column',value:column},\n                {id:'columns_order',value:sortOrder}\n            ]\n        ]}\n    ]\n})\n\n/**\n * UPDATE CELL operation request body\n */\nexport const updateCell = (dataset, column, row, value) => ({\n\tpackageId: VIZUAL_OP,\n\tcommandId: VIZUAL.UPDATE_CELL,\n    arguments: [\n        {id:'dataset',value:dataset},\n        {id:'column',value:column},\n        {id:'row',value:row},\n        {id:'value',value:value}\n    ]\n})\n\nexport const updateAnnotation = (dataset, column, new_value, row_id) => ({\n\tpackageId:'mimir',\n\tcommandId:'comment',\n\targuments: [\n\t\t{id:'dataset',value:dataset.name},\n\t\t{id:'comments',value: [\n\t\t\t\t[\n\t\t\t\t\t{id:'expression',value:dataset.columns[column].id},\n\t\t\t\t\t{id:'comment',value:new_value},\n\t\t\t\t\t{id:'rowid',value:row_id}\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t    {id: \"materializeInput\", value: false}\n\t]\n})\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BranchDescriptor } from './Branch';\nimport { getProperty } from '../util/Api';\nimport { HATEOASReferences } from '../util/HATEOAS';\nimport { sortByName } from '../util/Sort';\nimport { utc2LocalTime } from '../util/Timestamp';\nimport { VIZUAL, VIZUAL_OP } from '../util/Vizual';\n// import { CONTENT_CHART, CONTENT_DATASET, CONTENT_ERROR } from './Outputs';\n\n/**\n * Descriptor for a project in the project listing. Contains the information\n * that is required by the project listing component.\n */\nexport class ProjectDescriptor {\n    fromJson(json) {\n        this.id = json.id;\n        this.name = getProperty(json, 'name', 'undefined');\n        this.createdAt = utc2LocalTime(json.createdAt);\n        this.lastModifiedAt = utc2LocalTime(json.lastModifiedAt);\n        this.defaultBranch = json.defaultBranch;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n}\n\n\n/**\n * Metadata for a vizier data curation project (i.e., a VizTrail). Contains the\n * project id, name, links and list of descriptors for project branches.\n *\n * The project currently also contains the registry of available modules for\n * workflows and the listing of files on the file server (for display in module\n* forms, e.g., LOAD DATASET). At least e latter is supposed to change in the\n* future.\n */\nexport class ProjectHandle {\n    constructor(id, name, links, branches) {\n        this.id = id;\n        this.name = name;\n        this.links = links;\n        this.branches = branches;\n    }\n    /**\n     * Add a new branch to the list of project branches. Returns a new project\n     * handle for the modified project.\n     */\n    addBranch(branch) {\n        const modifiedBranchList = [branch];\n        for (let i = 0; i < this.branches.length; i++) {\n            modifiedBranchList.push(this.branches[i]);\n        }\n        sortByName(modifiedBranchList);\n        return new ProjectHandle(\n            this.id,\n            this.name,\n            this.links,\n            modifiedBranchList\n        );\n    }\n    /**\n     * Delete the branch with the given identifier. Returns a modified project\n     * handle.\n     */\n    deleteBranch(branchId) {\n        const modifiedBranchList = [];\n        for (let i = 0; i < this.branches.length; i++) {\n            const br = this.branches[i];\n            if (br.id !== branchId) {\n                modifiedBranchList.push(br);\n            }\n        }\n        return new ProjectHandle(\n            this.id,\n            this.name,\n            this.links,\n            modifiedBranchList\n        );\n    }\n    /**\n     * Shortcut to retrieve branch with the given identifier.\n     */\n    findBranch(branchId) {\n        if (branchId != null) {\n            return this.branches.find((br) => (br.id === branchId));\n        }\n    }\n    /**\n     * Initialize the object properties from a Json object that is returned by\n     * Web API calls that return a ProjectHandle.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = getProperty(json, 'name');\n        this.links = new HATEOASReferences(json.links);\n        // List of project branchs (sorted by name)\n        this.branches = [];\n        for (let i = 0; i < json.branches.length; i++) {\n            this.branches.push(new BranchDescriptor().fromJson(json.branches[i]));\n        }\n        sortByName(this.branches);\n        return this;\n    }\n    /**\n     * Returns the default branch for this project.\n     */\n    getDefaultBranch() {\n        return this.branches.find((br) => (br.isDefault));\n    }\n    /**\n     * This method is used to identify cells in a notebook that are grouped.\n     * The information about which cells are grouped should be encoded in the\n     * project packages.\n     * Note: For now, the information is hard-coded.\n     */\n    isGrouped(module) {\n        if (module.command.type === VIZUAL_OP) {\n            const cmdId = module.command.id;\n            if (\n                (cmdId !== VIZUAL.LOAD) &&\n                (cmdId !== VIZUAL.DROP_DATASET) &&\n                (cmdId !== VIZUAL.RENAME_DATASET) &&\n                (cmdId !== VIZUAL.SORT)\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Create a copy of the project handle where the branch listing is modified\n     * so that it contains the given branch instead of an outdated one.\n     */\n    updateBranch(branch) {\n        const { id, name, links, branches } = this;\n        // Create a modified branch listing\n        const modBranches = [];\n        for (let i = 0; i < branches.length; i++) {\n            const br = branches[i];\n            if (br.id === branch.id) {\n                modBranches.push(branch);\n            } else {\n                modBranches.push(br);\n            }\n        }\n        return new ProjectHandle(id, name, links, modBranches);\n    }\n    /**\n     * Create a copy of the project handle with a modified name.\n     */\n    updateName(name) {\n        const { id, links, branches } = this;\n        return new ProjectHandle(id, name, links, branches);\n    }\n}\n\n\n\n// -----------------------------------------------------------------------------\n// Functions\n// -----------------------------------------------------------------------------\n\n/**\n * Use the combination of module type and type-dependent module identifier as\n * a unique module identifier. Module is a command specification returned by\n * the Web API.\n */\nexport const moduleId = (module) => (module.type + ':' + module.id)\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Objects for error messages that are generated during asynchronous processing.\n * Primarily used to group error messages and titles. We also distinguish\n * between error messages (return codes 400 or 500) and File Not Found errors\n * (return code 404).\n */\n\nexport class ErrorObject {\n    constructor(title, message, status) {\n        this.title = title;\n        this.message = message;\n        // Status is optional. If not given assume 400 or 500\n        if (status != null) {\n            this.status = status;\n        } else {\n            this.status = 400;\n        }\n    }\n    /**\n     * Distinguish between server errors and invalud requests or file not foound\n     * errors.\n     */\n     is404() {\n         return this.status === 404;\n     }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProjectHandle } from '../../resources/Project';\nimport { getProperty, updateResourceProperty } from '../../util/Api';\nimport { ErrorObject } from '../../util/Error';\nimport { HATEOAS_PROJECT_UPDATE_PROPERTY } from '../../util/HATEOAS';\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../main/Service';\n\n// Actions for fetching project information from Web API.\nexport const PROJECT_FETCH_ERROR = 'PROJECT_FETCH_ERROR';\nexport const RECEIVE_PROJECT = 'RECEIVE_PROJECT';\nexport const REQUEST_PROJECT = 'REQUEST_PROJECT';\n\n// Actions when fetching or manipulating project resources\nexport const PROJECT_ACTION_ERROR = 'PROJECT_ACTION_ERROR';\nexport const RECEIVE_PROJECT_RESOURCE = 'RECEIVE_PROJECT_RESOURCE';\nexport const REQUEST_PROJECT_ACTION = 'REQUEST_PROJECT_ACTION';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const UPDATE_RESOURCE = 'UPDATE_RESOURCE';\nexport const UPDATE_WORKFLOW = 'UPDATE_WORKFLOW';\n\n/**\n * Fetch project and branch from API. Calls the given result function to\n * fetch further resources on success.\n *\n */\nexport const fetchProject = (projectId, branchId, resultFunc) => (dispatch, getState) => {\n    // Construct project url from the API reference set. This set may not be\n    // initialized yet!\n    if (getState().serviceApi.links) {\n        let url = getState().serviceApi.links.getProjectUrl(projectId);\n        // Signal start of fetching project listing\n        dispatch(requestProject())\n        // Fetch the project.\n        return fetchAuthed(url)(dispatch)\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: The returned json object is expected to contain\n                // the project handle (.project), workflow handle (.workflow),\n                //  workflow modules (.modules), and all dataset descriptors\n                // (.datasets). The last two are used to generate the notebook.\n                checkResponseJsonForReAuth(response).then(json => {\n                    const project = new ProjectHandle().fromJson(json);\n                    let branch = null;\n                    if (branchId != null) {\n                        branch = project.branches.find((br) => (br.id === branchId));\n                    } else {\n                        branch = project.branches.find((br) => (br.isDefault));\n                    }\n                    if (branch != null) {\n                        dispatch({type: RECEIVE_PROJECT, project, branch});\n                        dispatch(resultFunc(project, branch));\n                    } else {\n                        dispatch(projectFetchError('Unknown branch ' + branchId, 404));\n                    }\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else if (response.status === 404) {\n                // The requested project, branch, or workflow does not exist.\n                checkResponseJsonForReAuth(response).then(json => (dispatch(\n                    projectFetchError(json.message, 404)\n                )));\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                    projectFetchError(json.message, response.status)\n                ));\n            }\n        })\n        .catch(err => dispatch(projectFetchError(err.message)))\n    }\n}\n\n/**\n * Set the resource that is shown as page content. Expects a ProjectResource\n * object.\n *\n */\nexport const receiveProjectResource = (resource) => ({\n    type: RECEIVE_PROJECT_RESOURCE,\n    resource: resource\n})\n\nexport const setProject = (project) => ({\n    type: UPDATE_PROJECT,\n    project\n});\n\n\n// -----------------------------------------------------------------------------\n// Switch Branch\n// -----------------------------------------------------------------------------\n\nexport const setBranch = (project, branchId, resultFunc) => (dispatch) => {\n    let branch = project.findBranch(branchId);\n    if (branch != null) {\n        dispatch({type: RECEIVE_PROJECT, project, branch});\n        if (resultFunc) {\n            dispatch(resultFunc(project, branch));\n        }\n    } else {\n        dispatch(projectFetchError('Unknown branch ' + branchId, 404));\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Updates\n// -----------------------------------------------------------------------------\n\n/**\n * .Update the name of the current project. Send a post request to the API\n * and modify the project handle in the global state.\n */\nexport const updateProject = (project, name) => (dispatch) => {\n    dispatch(\n        updateResourceProperty(\n            project.links.get(HATEOAS_PROJECT_UPDATE_PROPERTY),\n            'name',\n            name,\n            (json) => (dispatch) => (dispatch({\n                type: UPDATE_PROJECT,\n                project: project.updateName(getProperty(json, 'name'))\n            })),\n            (message) => (projectActionError(\n                'Error updating project', message\n            )),\n            requestProjectAction\n        )\n    );\n}\n\n\n/**\n * Update the resource that is shown on the project page. This function is for\n * example used when changing the output of a notebook cell which modifies the\n * notebook resource.\n */\nexport const updateResource = (resource) => ({\n    type: UPDATE_RESOURCE,\n    resource\n})\n\n\n/**\n * Set the workflow handle and page content in the global state to the given\n * values. This funcion is used when the underlying workflow was updated either\n * in notebook view or in spreadsheet view.\n */\nexport const updateWorkflowResource = (workflow, resource) => ({\n    type: UPDATE_WORKFLOW,\n    workflow,\n    resource\n})\n\n\n// -----------------------------------------------------------------------------\n// Errors\n// -----------------------------------------------------------------------------\n\n/**\n * Dismiss any project action error message that may be shown by setting the\n * respective property in the global state to null.\n */\nexport const dismissProjectActionError = (title, message) => ({\n     type: PROJECT_ACTION_ERROR,\n     error: null\n})\n\n/**\n * Error while fetching a project resource, creating a new project branch,\n * or updating the project name.\n */\nexport const projectActionError = (title, message) => ({\n    type: PROJECT_ACTION_ERROR,\n    error: new ErrorObject(title, message)\n})\n\n\n/**\n * Error generated while fetching a project.\n */\nexport const projectFetchError = (message, status, title) => {\n    if (title == null) {\n        title = 'Error fetching project';\n    }\n    return {\n        type: PROJECT_FETCH_ERROR,\n        error: new ErrorObject(title, message, status)\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Busy flags\n// -----------------------------------------------------------------------------\n\n/**\n * Signal start of fetching a single project.\n */\nexport const requestProject = () => ({\n  type: REQUEST_PROJECT\n})\n\n/**\n * Signal start fetching a resource that is associated with a project (e.g., a\n * project branch or workflow).\n */\nexport const requestProjectResource = () => (requestProject());\n\n/**\n * Signal start of an action that fetces or manipulates a project property or\n * resource.\n */\nexport const requestProjectAction = () => ({\n  type: REQUEST_PROJECT_ACTION\n})\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HATEOASReferences } from '../util/HATEOAS';\n\n\n/**\n * Dataset descriptor containing dataset identifier, columns, rowCount and\n * references.\n */\nexport class DatasetDescriptor {\n    constructor(id, name, columns, links) {\n        this.id = id;\n        this.name = name;\n        this.columns = columns;\n        this.links = links;\n    }\n    /**\n     * Initialize from a Json object that contains a dataset descriptor returned\n     * by the Web API. Note that the name and column information are optional.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name\n        this.columns = json.columns;\n        this.rowCount = json.rowCount;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n}\n\n\n/**\n * Handle for dataset that is associated with a workflow module. Contains the\n * columns, rows, dataset name, and references. The dataset annotations are\n * optional.\n */\nexport class DatasetHandle {\n    constructor(id, name, columns, rows, rowCount, offset, links, moduleId=null, properties=null) {\n        this.id = id;\n        this.name = name;\n        this.columns = columns;\n        this.rows = rows;\n        this.rowCount = rowCount;\n        this.offset = offset;\n        this.links = links;\n        this.moduleId = moduleId;\n        this.properties = properties;\n    }\n    /**\n     * Initialize the dataset handle from a Json object returned by the Web API.\n     * Note that the dataset name is not expected to be part of the Json object.\n     * Dataset annotations are optional.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name;\n        this.columns = json.columns;\n        this.rows = json.rows;\n        this.rowCount = json.rowCount;\n        this.offset = json.offset;\n        this.links = new HATEOASReferences(json.links);\n        this.moduleId = json.moduleId;\n        this.properties = json.properties;\n        return this;\n    }\n    hasAnnotations(columnId, rowId) {\n    \tlet roi = this.rows.find((row) => (row.id === rowId));\n        return roi && roi.rowAnnotationFlags && (roi.rowAnnotationFlags[columnId] === false);\n    }\n    /**\n     * Get the dataset row at with the given index position. Note that the\n     * row index position is not the same as the index in the row array.\n     */\n    rowAtIndex(index) {\n        return this.rows[index];//this.rows.find((row) => (row.index === index));\n    }\n    /**\n     * Create an updated copy of the dataset where annotation information for\n     * the given cell has been modified according to whether the cell has\n     * annotations or not (as indicated by the given flag).\n     */\n    updateAnnotations(columnId, rowId, hasAnnotations) {\n        // Get the status of the hasAnnotation flag for the previous version\n        const hadAnnotations = this.hasAnnotations(columnId, rowId);\n        let annotations = null;\n        if ((hasAnnotations) && (hadAnnotations)) {\n            return this;\n        } else if ((!hasAnnotations) && (!hadAnnotations)) {\n            return this;\n        } else if ((hasAnnotations) && (!hadAnnotations)) {\n            // Add annotation idicator for cell\n            annotations = this.annotatedCells.slice();\n            annotations.push({column: columnId, row: rowId});\n        } else if ((!hasAnnotations) && (hadAnnotations)) {\n            // Delete annotation\n            annotations = [];\n            for (let i = 0; i < this.annotatedCells.length; i++) {\n                const cell = this.annotatedCells[i];\n                if ((cell.column !== columnId) || (cell.row !== rowId)) {\n                    annotations.push(cell);\n                }\n            }\n        }\n        const {id, name, columns, rows, offset, links, moduleId, properties } = this;\n        return new DatasetHandle(id, name, columns, rows, offset, links, annotations, moduleId, properties);\n    }\n\n    isProfiled = () => this.properties != null && Object.keys(this.properties).length > 0 && this.properties.is_profiled != null\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatasetDescriptor } from './Dataset';\nimport { HATEOASReferences } from '../util/HATEOAS';\nimport { utc2LocalTime } from '../util/Timestamp';\n\n\n// -----------------------------------------------------------------------------\n// Workflow objects\n// -----------------------------------------------------------------------------\n\n/**\n * Descriptor for a workflow version in a branch history. Contains the version\n * number of the workflow, time of creation, type of action that created the\n * workflow, and a short text describing the type of module that was affected\n * by the action.\n */\nexport class WorkflowDescriptor {\n    /**\n     * Helper functions to determine the action type that created the workflow\n     * version There are four possible action types: CREATE BRANCH, DELETE\n     * MODULE, INSERT (or APPEND) MODULE, and REPLACE MODULE.\n     */\n    actionIsAppend = () => (this.action === 'apd');\n    actionIsCreate = () => (this.action === 'cre');\n    actionIsDelete = () => (this.action === 'del');\n    actionIsInsert = () => (this.action === 'ins');\n    actionIsReplace = () => (this.action === 'upd');\n    /**\n     * Initialize the workflow descriptor from a Json object that contains the\n     * serialization of a WorkflowDescriptor returned by the Web API.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.createdAt = utc2LocalTime(json.createdAt);\n        this.action = json.action;\n        this.packageId = json.packageId;\n        this.commandId = json.commandId;\n        return this;\n    }\n}\n\n\n/**\n * Handle for curation workflow. Contains information about the workflow itself\n * and the resources (i.e., datasets and charts) in the workflow state.\n *\n * For now the workflow handle also contains a read only flag to indicate whether\n * the workflow can be modified by the user via the web app. This shold be\n * replaced in the future when proper authentication and access control is\n * implemented.\n */\nexport class WorkflowHandle {\n    constructor(engine) {\n        this.engine = engine;\n    }\n    /**\n     * Initialize the workflow handle from a Json object containing a\n     * WorkflowHandle returned by the Web API.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.createdAt = utc2LocalTime(json.createdAt);\n        this.state = json.state;\n        this.readOnly = json.readOnly;\n        // Get a dictionary of dataset descriptors for all datasets that occur\n        // in the workflow. Datasets are keyed by their unique identifier. Note\n        // that the dictionary will contain all datasets that were created by\n        // any module in the workflow and not just the datasets in the current\n        // workflow state.\n        this.datasets = {};\n        for (let i = 0; i < json.datasets.length; i++) {\n            const dataset = new DatasetDescriptor().fromJson(json.datasets[i]);\n            this.datasets[dataset.id] = dataset;\n        }\n        // Keep list of modules as they are. The notebook will convert them into\n        // a list of notebook cells when needed.\n        this.modules = json.modules;\n        this.links = new HATEOASReferences(json.links);\n        this.tableOfContents = json.tableOfContents\n        return this;\n    }\n    /**\n     * Get the specification for a given module command.\n     */\n    getCommandSpec(cmd) {\n        return this.engine.packages.getCommandSpec(cmd.packageId, cmd.commandId);\n    }\n}\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {groupBy} from \"lodash\";\nimport {DatasetHandle} from \"./Dataset\";\n/**\n * Defintion of objects that represent the different types of output that\n * are associated with a notebook cell.\n */\n\n\n// Output cell resource type identifier\nexport const CONTENT_CHART = 'CONTENT_CHART';\nexport const CONTENT_DATASET = 'CONTENT_DATASET';\nexport const CONTENT_ERROR = 'CONTENT_ERROR';\nexport const CONTENT_HTML = 'CONTENT_HTML';\nexport const CONTENT_MARKDOWN = 'CONTENT_MARKDOWN';\nexport const CONTENT_HIDE = 'CONTENT_HIDE';\nexport const CONTENT_TEXT = 'CONTENT_TEXT';\nexport const CONTENT_JAVASCRIPT = 'CONTENT_JAVASCRIPT';\nexport const CONTENT_TIMESTAMPS = 'CONTENT_TIMESTAMPS';\nexport const CONTENT_MULTIPLE = 'CONTENT_MULTIPLE';\n\n/**\n * Output resource content. Contains functionality to determine content type\n * and whether the content is currently being fetched from the server.\n */\nclass OutputResource {\n    constructor(type, isFetching) {\n        this.type = type;\n        this.isFetching = (isFetching != null) ? isFetching : false;\n    }\n    isChart = () => (this.type === CONTENT_CHART);\n    isDataset = () => (this.type === CONTENT_DATASET);\n    isError = () => (this.type === CONTENT_ERROR);\n    isHidden = () => (this.type === CONTENT_HIDE);\n    isHtml = () => (this.type === CONTENT_HTML);\n    isMarkdown = () => (this.type === CONTENT_MARKDOWN);\n    isText = () => (this.type === CONTENT_TEXT);\n    isTimestamps = () => (this.type === CONTENT_TIMESTAMPS);\n    isJavascript = () => (this.type === CONTENT_JAVASCRIPT);\n    isMultiple = () => (this.type === CONTENT_MULTIPLE);\n}\n\n// Extended output resources for the different types of output.\n\n\n/**\n * Output resource for showing a chart plotted for a given dataset in a\n * notebook cell.\n */\nexport class OutputChart extends OutputResource {\n    constructor(name, dataset, isFetching) {\n        super(CONTENT_CHART, isFetching);\n        this.name = name;\n        this.dataset = dataset;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputChart(this.name, this.dataset, true);\n    }\n}\n\n\n/**\n * Output resource for showing dataset rows in a notebook cell\n */\nexport class OutputDataset extends OutputResource {\n    constructor(dataset, isFetching) {\n        super(CONTENT_DATASET, isFetching);\n        this.dataset = dataset;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputDataset(this.dataset, true);\n    }\n}\n\n\n/**\n * Output resource for showing an error message resulting from a content\n * fetch error.\n */\nexport class OutputError extends OutputResource {\n    constructor(error, isFetching) {\n        super(CONTENT_ERROR, isFetching);\n        this.error = error;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputError(this.error, true);\n    }\n}\n\n\n/**\n * Output resource when hiding output for a notebook cell.\n */\nexport class OutputHidden extends OutputResource {\n    constructor(isFetching) {\n        super(CONTENT_HIDE, isFetching);\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputHidden(true);\n    }\n}\n\n\n/**\n * Output resource for showing content of the module standard output as HTML\n * in the output area of a notebook cell.\n */\nexport class OutputHtml extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_HTML, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/html') {\n                    this.lines.push(out.value);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputHtml(this.lines, true);\n    }\n}\n/**\n * Output resource for showing content of the module standard output as HTML\n * in the output area of a notebook cell, enhanced with Javascript\n */\nexport class OutputJavascript extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_JAVASCRIPT, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/javascript') {\n                    this.lines.push(out);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputHtml(this.lines, true);\n    }\n}\n\n\n/**\n * Output resource for showing content of the module standard output as Markdown\n * in the output area of a notebook cell.\n */\nexport class OutputMarkdown extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_MARKDOWN, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/markdown') {\n                    this.lines.push(out.value);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputMarkdown(this.lines, true);\n    }\n}\n\n/**\n * Output resource for showing content of the module standard output as plain\n * text in the output area of a notebook cell.\n */\nexport class OutputText extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_TEXT, isFetching);\n        this.lines  = [];\n        for (let j = 0; j < outputObjects.length; j++) {\n            const out = outputObjects[j];\n            if (out.type != null) {\n                if (out.type === 'text/plain') {\n                    this.lines.push(out.value);\n                }\n            } else {\n                this.lines.push(out);\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputText(this.lines, true);\n    }\n}\n\n/**\n * Output resource for showing content of the module standard output as an array of multiple resources\n * in the output area of a notebook cell.\n */\nexport class OutputMultiple extends OutputResource {\n    constructor(outputObjects, isFetching) {\n        super(CONTENT_MULTIPLE, isFetching);\n        this.outputs = {};\n        let stdoutGrouped = groupBy(outputObjects, 'type');\n        for (let out in stdoutGrouped) {\n            // assuming only one dataset or chart object can exist per output\n            switch (out) {\n                case 'text/plain': this.outputs[out] = stdoutGrouped[out].map(x => x.value).join(\"\\n\"); break;\n                case 'text/markdown' : this.outputs[out] = stdoutGrouped[out].map(x => x.value).join(\"\\n\"); break;\n                case 'text/html': this.outputs[out] = stdoutGrouped[out].map(x => x.value).join(\"\\n\"); break;\n                case 'dataset/view': this.outputs[out] = new DatasetHandle().fromJson(stdoutGrouped[out][0].value); break;\n                case 'chart/view': this.outputs[out] = stdoutGrouped[out][0].value; break;\n                default: this.outputs[out] = stdoutGrouped[out][0]; break;\n            }\n        }\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputMultiple(this.outputs, true);\n    }\n}\n\n/**\n * Output resource for showing the timestamps for different stages of module\n * execution in the output area of a notebook cell.\n */\nexport class OutputTimestamps extends OutputResource {\n    constructor(createdAt, startedAt, finishedAt) {\n        super(CONTENT_TIMESTAMPS);\n        this.createdAt = createdAt;\n        this.startedAt = startedAt;\n        this.finishedAt = finishedAt;\n    }\n    /**\n     * Return a copy of the resource where the isFetching flag is true.\n     */\n    setFetching() {\n        return new OutputTimestamps(\n            this.createdAt,\n            this.startedAt,\n            this.finishedAt,\n            true\n        );\n    }\n}\n\n// Shortcut to show text output for all lines in standard output. Depending on\n// whether the output is plain/text of html a different output resource is\n// returned.\nexport const StandardOutput = (module) => {\n    const stdout = module.outputs.stdout;\n    let outputResource = null;\n    if (stdout.length === 1) {\n        const out = stdout[0];\n        if (out.type === 'text/html') {\n            outputResource = new OutputHtml(stdout);\n        } else if (out.type === 'text/markdown') {\n            outputResource = new OutputMarkdown(stdout);\n        } else if (out.type === 'text/javascript') {\n            outputResource = new OutputJavascript(stdout);\n        } else if (out.type === 'chart/view') {\n            outputResource = new OutputChart(out.value.data.name, out.value.result);\n        } else if (out.type === 'dataset/view') {\n            outputResource = new OutputDataset(new DatasetHandle(out.value.id, out.value.name).fromJson(out.value), false);\n        } else {\n            outputResource = new OutputText(stdout);\n        }\n    } else if (stdout.length > 1) {\n        outputResource = new OutputMultiple(stdout);\n    }\n    // Make sure that there is some output\n    if (outputResource === null) {\n        outputResource = new OutputText([]);\n    }\n    return outputResource;\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Set application routes. The baseHref points to the application home. Route\n * projectHref points to the web page for individual projects.\n */\nimport { CONTENT_CHART, CONTENT_DATASET, CONTENT_ERROR } from '../resources/Outputs';\n\nlet href = process.env.PUBLIC_URL;\nif (process.env.NODE_ENV === 'production') {\n    // href = href + '/vizier-db';\n}\nif (href === '') {\n    href = '/'\n}\n\nexport const baseHref = href;\nexport const projectHref = baseHref + 'projects/:project_id';\nexport const branchHref = projectHref + '/branches/:branch_id';\nexport const branchHistoryHref = branchHref + '/history';\nexport const notebookHeadHref = branchHref + '/head';\nexport const notebookVersionHref = branchHref + '/workflows/:workflow_id';\nexport const spreadsheetHref = notebookHeadHref + '/spreadsheet/:dataset_id';\nexport const errorListHref = notebookHeadHref + '/errors/:dataset_id';\nexport const spreadsheetVersionHref = notebookVersionHref + '/spreadsheet/:dataset_id';\nexport const errorListVersionHref = notebookVersionHref + '/errors/:dataset_id';\n\n/**\n * Key codes\n */\n\nexport const KEY = {\n    DOWN: 40,\n    ENTER: 13,\n    ESC: 27,\n    LEFT: 37,\n    NULL: 46,\n    RIGHT: 39,\n    UP: 38,\n    TAB: 9\n};\n\n/**\n * Directions\n */\n\nexport const MOVE = {\n    DOWN: 0,\n    LEFT: 1,\n    RIGHT: 2,\n    UP: 3\n}\n\n\n/**\n * Convert file size bytes into string. Copied from:\n * https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\n */\nexport const formatBytes = (a, b) => {\n    if (a < 0) {\n        return '?'\n    } else if (a === 0) {\n        return '0 Bytes'\n    }\n    const c=1024\n    const d=b||2\n    const e=[\"Bytes\",\"KB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"]\n    const f=Math.floor(Math.log(a)/Math.log(c))\n    return parseFloat((a/Math.pow(c,f)).toFixed(d))+\" \"+e[f]\n}\n\n\n/*\n * Name validity function that returns true if a given value is not equal to\n * a string that is empty or only contains whitespaces.\n */\nexport const isNotEmptyString = (name) => (name.trim() !== '');\n\n\n/*\n * Position validity function that returns true if a given value is a\n * non-negative integer.\n */\nexport const isNonNegativeInt = (value) => {\n    return (value && !/[^\\d]/.test(value));\n};\n\n\n/**\n * Generate url to show the history of a project branch in the app.\n */\nexport const branchPageUrl = (projectId, branchId) => {\n    return baseHref + 'projects/' + projectId + '/branches/' + branchId + '/history';\n}\n\n\n/**\n * Generate url to show a particular workflow version in the app.\n */\nexport const notebookPageUrl = (projectId, branchId, workflowId) => {\n    let link = baseHref + 'projects/' + projectId + '/branches/' + branchId;\n    if (workflowId != null) {\n        link += '/workflows/' + workflowId;\n    } else {\n        link += '/head';\n    }\n    return link;\n}\n\n/**\n * Generate url to show a particular workflow version spreadsheet in the app.\n */\nexport const spreadsheetPageUrl = (projectId, branchId, datasetId, workflowId) => {\n    let link = baseHref + 'projects/' + projectId + '/branches/' + branchId;\n    if (workflowId != null) {\n        link += '/workflows/' + workflowId + '/spreadsheet/' + datasetId;\n    } else {\n        link += '/head/spreadsheet/' + datasetId;\n    }\n    return link;\n}\n\n/**\n * Generate url to show a particular workflow version error list in the app.\n */\nexport const errorListPageUrl = (projectId, branchId, datasetId, workflowId) => {\n    let link = baseHref + 'projects/' + projectId + '/branches/' + branchId;\n    if (workflowId != null) {\n        link += '/workflows/' + workflowId + '/errors/' + datasetId;\n    } else {\n        link += '/head/errors/' + datasetId;\n    }\n    return link;\n}\n\n/**\n * Return given value or default value if value is null or undefined.\n */\nexport const valueOrDefault = (val, defaultValue) => ((val != null) ? val : defaultValue);\n\n\n// -----------------------------------------------------------------------------\n// Project page resource\n// -----------------------------------------------------------------------------\n\nconst RESOURCE_BRANCH = 'RESOURCE_BRANCH';\nconst RESOURCE_MAIN_PAGE = 'RESOURCE_MAIN_PAGE';\nconst RESOURCE_NOTEBOOK = 'RESOURCE_NOTEBOOK';\nexport const RESOURCE_DATASET_CAVEAT = 'RESOURCE_DATASET_CAVEAT';\n\n\n/**\n * Wrapper for the application resource that are displayed in the resource page\n * component. The resource captures one of the following content types: Branch\n * History Page, Main Page, or Notebook Page.\n */\nexport class AppResource {\n    /**\n     * Constructor expects the content type information and a type-specific\n     * content object.\n     */\n    constructor(resourceType, content) {\n        this.resourceType = resourceType;\n        this.type = resourceType;\n        this.content = content; \n    }\n    /**\n     * Various flags to check the type of the content.\n     */\n    isBranch = () => (this.resourceType === RESOURCE_BRANCH);\n    isMainPage = () => (this.resourceType === RESOURCE_MAIN_PAGE);\n    isNotebook = () => (this.resourceType === RESOURCE_NOTEBOOK);\n    isError = () => (this.type === CONTENT_ERROR);\n    isChart = () => (this.type === CONTENT_CHART);\n    isDataset = () => (this.type === CONTENT_DATASET);\n    isDatasetCaveat = () => (this.type === RESOURCE_DATASET_CAVEAT);\n    \n}\n\n\n// Shortcuts for different content types\nexport const BranchResource = () => (new AppResource(RESOURCE_BRANCH));\nexport const MainPageResource = (notebook) => (new AppResource(RESOURCE_MAIN_PAGE));\nexport const NotebookResource = (notebook) => (new AppResource(RESOURCE_NOTEBOOK));\nexport const ErrorResource = (title, module) => (new AppResource(CONTENT_ERROR, {title, module}));\nexport const ChartResource = (name, dataset) => (new AppResource(CONTENT_CHART, {name, dataset}));\nexport const DatasetCaveatResource = (dataset, annotations) => (new AppResource(RESOURCE_DATASET_CAVEAT, {dataset, annotations}));\nexport const SpreadsheetResource = (dataset) => (new AppResource(CONTENT_DATASET, dataset));\n\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NO_OP } from '../main/App';\nimport { projectActionError, projectFetchError, requestProjectAction, setBranch, setProject } from './Project';\nimport { BranchDescriptor } from '../../resources/Branch';\nimport { WorkflowDescriptor } from '../../resources/Workflow';\nimport { createResource, deleteResource, fetchResource, getProperty, updateResourceProperty } from '../../util/Api';\nimport { notebookPageUrl } from '../../util/App';\nimport { HATEOAS_BRANCH_UPDATE_PROPERTY } from '../../util/HATEOAS';\n\n\n// Actions for manipulating branches and retrieving branch information\nexport const UPDATE_BRANCH = 'UPDATE_BRANCH';\nexport const RECEIVE_BRANCH_HISTORY = 'RECEIVE_BRANCH_HISTORY';\nexport const REQUEST_BRANCH = 'REQUEST_BRANCH'\n\n\n/**\n * Create a new project branch with given name. The branch is created from\n * the source that is defined by the given workflow and module.\n *\n * Parameters:\n *\n * project: ProjectHandle\n * workflow: WorkflowHandle\n * module: ModuleHandle\n * name: string\n * history: Browser history stack\n *\n */\nexport const createBranch = (project, branch, workflowId, moduleId, name, history) =>  (dispatch) => {\n    // Generate request body containing source information and branch\n    // properties. The branch source is empty if the given module identifier\n    // is empty\n    const data = {\n        properties: [{\n            key: 'name',\n            value: name\n        }]\n    }\n    if (moduleId != null) {\n        data.source = {\n            branchId: branch.id,\n            workflowId: workflowId,\n            moduleId: moduleId\n        }\n    }\n    // POST request to branches url contained in the project handle's links. On\n    // success, redirect to the page for the new branch.\n    dispatch(\n        createResource(\n            project.links.get('branch.create'),\n            data,\n            (json) => {\n                const resultBranch = new BranchDescriptor().fromJson(json);\n                dispatch(setProject(project.addBranch(resultBranch)));\n                history.push(notebookPageUrl(project.id, resultBranch.id));\n                // Avoid action undefined error\n                return ({type: NO_OP});\n            },\n            (message) => (\n                projectActionError('Error creating new branch', message)\n            ),\n            requestBranch\n        )\n    )\n}\n\n\n/**\n * Delete a project branch. Expects the project and branch handles as arguments.\n * Uses the delete url in the branch handle's links. On success, redirect to the\n * page for the default branch.\n *\n * Parameters:\n *\n * project: ProjectHandle\n * branch: BranchDescriptor\n * redirectAction: Dispatch action to redirect to the default brnach in case of\n *                 successful delete\n */\nexport const deleteBranch = (project, branch, urlFactory, history) => (dispatch) => {\n    dispatch(\n        deleteResource(\n            branch.links.get('branch.delete'),\n            () => {\n                dispatch(setProject(project.deleteBranch(branch.id)));\n                const defaultBranchId = project.getDefaultBranch().id;\n                history.push(urlFactory(project.id, defaultBranchId));\n                // Avoid action undefined error\n                return ({type: NO_OP});\n            },\n            (message) => (\n                projectActionError('Error deleting branch', message)\n            ),\n            requestBranch\n        )\n    )\n}\n\n\n/**\n * Fetch the full history of a given project branch. On success, the returned\n * result is expected to contain a listing of workflow version descriptors\n * (.workflows). Show the result as content on the project page.\n *\n * Parameters:\n *\n * branch: BranchDescriptor\n *\n */\nexport const fetchBranch = (project, branch) => (dispatch) => {\n    if (branch == null) {\n        dispatch(setBranch(project));\n    } else {\n        dispatch(\n            fetchResource(\n                branch.links.getSelf(),\n                (json) => (dispatch) => {\n                    // Expect a listing of workflow version descriptors.\n                    const workflows = json.workflows;\n                    const history = [];\n                    for (let i = 0; i < workflows.length; i++) {\n                        const wf = workflows[i];\n                        history.push(new WorkflowDescriptor().fromJson(wf))\n                    }\n                    dispatch(setBranch(project, branch.id));\n                    dispatch({\n                        type: RECEIVE_BRANCH_HISTORY,\n                        workflows: history\n                    });\n                },\n                (message) => (\n                    projectFetchError(message, 400, 'Error fetching branch history')\n                ),\n                requestBranch,\n            )\n        )\n    }\n}\n\n\n/**\n * Signal start when fething the branch history.\n */\nexport const requestBranch = () => ({ type: REQUEST_BRANCH });\n\n/**\n * Update the name of the branch in the current workflow. On success, call\n * replaceCurrentBranch to update the branch listing in the current project\n * handle and the branch in the current workflow.\n *\n * Parameters:\n *\n * project: ProjectHandle\n * branch: BranchHandle\n * name: string\n *\n */\nexport const updateBranch = (project, branch, name) => (dispatch) => {\n    dispatch(\n        updateResourceProperty(\n            branch.links.get(HATEOAS_BRANCH_UPDATE_PROPERTY),\n            'name',\n            name,\n            (json) => (dispatch) => {\n                // Create an updated branch descriptor with the new name\n                const updBranch = branch.updateName(getProperty(json, 'name'));\n                // Need to modify the project as well since it contains a\n                // reference to all the branches\n                return dispatch({\n                    type: UPDATE_BRANCH,\n                    branch: updBranch,\n                    project: project.updateBranch(updBranch)\n                });\n            },\n            (message) => (\n                projectActionError('Error updating branch', message)\n            ),\n            requestProjectAction\n        )\n    )\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RECEIVE_BRANCH_HISTORY, REQUEST_BRANCH } from '../../actions/project/Branch';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT } from '../../actions/project/Project';\n\n/**\n* Reducer for actions that affect the branch history page.\n*/\n\n\n/**\n * STATE:\n *\n * fetchError: Error while loading the project handle or workflow listing\n * isFetching: Load of project handle or workflow listing in progress\n * workflows: List of workflow descriptors in branch history\n */\n\nconst INITIAL_STATE = {\n    fetchError: null,\n    isFetching: false,\n    workflows: null\n}\n\nexport const branchPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_BRANCH_HISTORY:\n            return {\n                ...state,\n                workflows: action.workflows,\n                isFetching: false,\n                fetchError: null\n            };\n        case RECEIVE_PROJECT:\n            return {...state, workflows: null};\n        case REQUEST_PROJECT:\n        case REQUEST_BRANCH:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HATEOASReferences } from '../util/HATEOAS';\n\n/**\n * Artifact descriptor containing artifact identifier, type, and name.\n */\nexport class ArtifactDescriptor {\n    constructor(id, name, mime_type, artifact_type, links) {\n        this.id = id;\n        this.name = name;\n        this.artifact_type = artifact_type;\n        this.mime_type = mime_type;\n        this.links = links;\n    }\n    /**\n     * Initialize from a Json object that contains a dataset descriptor returned\n     * by the Web API. Note that the name and column information are optional.\n     */\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name\n        this.artifact_type = json.category;\n        this.mime_type = json.objType;\n        this.links = new HATEOASReferences(json.links);\n        return this;\n    }\n}\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatasetDescriptor } from './Dataset';\nimport { ArtifactDescriptor } from './Artifact';\nimport { HATEOASReferences } from '../util/HATEOAS';\nimport {\n    OutputChart,\n    OutputHtml,\n    OutputText,\n    OutputMarkdown,\n    OutputDataset,\n    OutputMultiple,\n    OutputJavascript,\n    CONTENT_TEXT\n} from './Outputs';\nimport { DatasetHandle } from './Dataset';\nimport { utc2LocalTime } from '../util/Timestamp';\n\n// Workflow and module states\nconst STATE_PENDING = 0;\nconst STATE_RUNNING = 1\nconst STATE_CANCELED = 2\nconst STATE_ERROR = 3\nconst STATE_SUCCESS = 4\nconst STATE_FROZEN = 5\n\n// Relative positions when inserting a new cell\nexport const INSERT_AFTER = 'INSERT_AFTER';\nexport const INSERT_BEFORE = 'INSERT_BEFORE';\n\n\n/**\n * New cells have a string identifier that contains  unique counter value. Here\n * we assume that modules fetched from the API contain identifier that do not\n * match this pattern (i.e., do not start and end with underlines). As an\n * alternative we could use unique UUID's here.\n */\nexport const getNewCellId = (id) => ('__' + id + '__');\n\n\n/**\n * Workflow module handle.\n */\nclass ModuleHandle {\n    fromJson(json, datasets) {\n        this.id = json.id;\n        this.state = json.state;\n        this.command = json.command;\n        this.outputs = json.outputs;\n        this.datasets = [];\n        for (let i = 0; i < json.datasets.length; i++) {\n            const { id, name } = json.datasets[i];\n            const ds = datasets[id];\n            this.datasets.push(\n                new DatasetDescriptor(id, name, ds.columns, ds.links)\n            );\n        }\n        this.artifacts = [];\n        for (let i = 0; i < json.artifacts.length; i++) {\n            const { id, name, objType, category } = json.artifacts[i];\n            this.artifacts.push(\n                new ArtifactDescriptor(id, name, objType, category, json.links)\n            );\n        }\n        this.charts = json.charts;\n        this.text = json.text;\n        this.links = new HATEOASReferences(json.links);\n        // Convert timestamps to local time\n        this.timestamps = {}\n        for (var ts in json.timestamps) {\n            this.timestamps[ts] = utc2LocalTime(json.timestamps[ts]);\n        }\n        this.locked = json.locked;\n        return this;\n    }\n}\n\n\n/**\n * A notebook resource is a list of cells. Each cell corresponds to a module\n * in an underlying workflow. In addition to the workflow module each cell in\n * the notebook has an output resource. This resource is shown in the output\n * area when the notebook cell is rendered.\n *\n * Each notebook maintains a counter for for new cells to generate unique cell\n * identifier.\n */\nexport class Notebook {\n    constructor(workflow, cells, cellCounter) {\n        this.workflow = workflow;\n        this.cells = cells;\n        this.cellCounter = (cellCounter != null) ? cellCounter : 0;\n        // Set a few shortcuts\n        this.id = workflow.id;\n        this.createdAt = workflow.createdAt;\n        this.readOnly = workflow.readOnly;\n        this.datasets = workflow.datasets;\n    }\n    /**\n     * Create a notebook resource from a given workflow handle.\n     */\n    fromWorkflow(workflow) {\n        // Create notebook cells from list of of workflow modules returned by\n        // the API\n        this.cells = [];\n        for (let i = 0; i < workflow.modules.length; i++) {\n            const module = new ModuleHandle().fromJson(\n                workflow.modules[i],\n                workflow.datasets\n            );\n            this.cells.push(\n                new NotebookCell(\n                    module.id,\n                    module,\n                    workflow.getCommandSpec(module.command),\n                    getModuleDefaultOutput(module)\n                )\n            );\n        }\n        return this;\n    }\n    /**\n     * Dismiss changes that were made for a given cell. If the cell is a new\n     * cell it will be removed from the list of cells. If the cell represents\n     * an existing workflow module all changes will be reset.\n     */\n    dismissChangesForCell(cellId) {\n        const cellList = [];\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            if (cell.id === cellId) {\n                if (!cell.isNewCell()) {\n                    cellList.push(cell);\n                }\n            } else {\n                cellList.push(cell);\n            }\n        }\n        return new Notebook(this.workflow, cellList, this.cellCounter);\n    }\n    /**\n     * Insert a new cell or set an existing cell into edit mode. There are three\n     * options here: (1) if cell is null or undefined a new cell is being added\n     * to an empty notebook, (2) if cell is defined and position is null or\n     * undefined the given cell is being edited, or (3) if cell and position\n     * are defined a new cell is inserted at a position relative to the given\n     * cell (either before or after).\n     */\n    editCell(cell, position) {\n        if (cell != null) {\n            const cellList = [];\n            for (let i = 0; i < this.cells.length; i++) {\n                const c = this.cells[i];\n                if (c.id === cell.id) {\n                    // Depending on whether position is defined or not we either\n                    // add a new cell (as defined by position) or set the given\n                    // cell into edit mode.\n                    if (position != null) {\n                        const newCell = new NotebookCell(\n                            getNewCellId(this.cellCounter)\n                        );\n                        if (position === INSERT_BEFORE) {\n                            cellList.push(newCell);\n                            cellList.push(c);\n                        } else {\n                            cellList.push(c);\n                            cellList.push(newCell);\n                        }\n                    } else {\n                        cellList.push(\n                            new NotebookCell(\n                                c.id,\n                                c.module,\n                                c.commandSpec,\n                                c.output,\n                                true\n                        ));\n                    }\n                } else {\n                    cellList.push(c);\n                }\n            }\n            return new Notebook(this.workflow, cellList, this.cellCounter + 1);\n        } else {\n            // I\\f the notebook is empty a new cell is added.\n            if (this.cells.length === 0) {\n                return new Notebook(\n                    this.workflow,\n                    [new NotebookCell(getNewCellId(this.cellCounter))],\n                    this.cellCounter + 1\n                );\n            }\n        }\n        return this;\n    }\n    /**\n     * Get a descriptor for the dataset with the given name in the given module.\n     */\n    getDatasetForModule(module, name) {\n        // Find the dataset name to identifier mapping in the dataset list in\n        // the module state\n        const datasetId = module.datasets.find((ds) => (ds.name === name)).id;\n        // Create a new descriptor from the dataset that has the given dataset\n        // name\n        const ds = this.datasets[datasetId];\n        return new DatasetDescriptor(datasetId, name, ds.columns, ds.links);\n    }\n    /**\n     * Test if the associated workflow has modules that are in an active state.\n     */\n    hasActiveCells = () => ((this.workflow.state === STATE_PENDING) || (this.workflow.state === STATE_RUNNING));\n    /**\n     * Test if a notebook is empty.\n     */\n    isEmpty() {\n        return this.cells.length === 0;\n    }\n    /**\n     * Shortcut to access the last cell in the notebook.\n     */\n    lastCell() {\n        if (this.cells.length > 0) {\n            return this.cells[this.cells.length - 1];\n        } else {\n            return null;\n        }\n\n    }\n    /**\n     * Replace the output in the cell that represents the workflow module with\n     * the given identifier. Returns a modified copy of this notebook.\n     */\n    replaceOutput(moduleId, output) {\n        // Modified list of notebook cells\n        const modifiedCells = [];\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            const module = cell.module;\n            if ((module != null) && (module.id === moduleId)) {\n                modifiedCells.push(\n                    new NotebookCell(\n                        module.id,\n                        module,\n                        cell.commandSpec,\n                        output\n                    )\n                );\n            } else {\n                modifiedCells.push(cell);\n            }\n        }\n        return new Notebook(this.workflow, modifiedCells, this.cellCounter);\n    }\n    /**\n     * Set the isFetching flag in the notebook cell that that contains the\n     * module with the given id. Returns a modified copy of the notebook.\n     */\n    setFetching(moduleId) {\n        // Modified list of notebook cells\n        const modifiedCells = [];\n        for (let i = 0; i < this.cells.length; i++) {\n            const cell = this.cells[i];\n            const module = cell.module;\n            if ((module != null) && (module.id === moduleId)) {\n                modifiedCells.push(\n                    new NotebookCell(\n                        module.id,\n                        module,\n                        cell.commandSpec,\n                        cell.output.setFetching()\n                    )\n                );\n            } else {\n                modifiedCells.push(cell);\n            }\n        }\n        return new Notebook(this.workflow, modifiedCells, this.cellCounter);\n    }\n    /**\n     * Update the notebook whenever a new version of the associated workflow\n     * is received. Replaces the respective modules in notebook cells with\n     * their updated counterparts. Returns a new notebook object.\n     */\n    updateWorkflow(workflow, modifiedCellId, useDefaultOutputs=false) {\n        // We iterate over the notebook cells and workflow modules until a\n        // difference in the corresponding module ids is encoutered. At that\n        // point we append the remaining workflow modules.\n        // Any new cell that is encountered before the first difference will\n        // also be included in the notebook.\n        const modifiedCells = [];\n        const size = Math.min(this.cells.length, workflow.modules.length);\n        let index = 0;\n        while (index < size) {\n            const cell = this.cells[index];\n            if ((cell.isNewCell()) && (cell.id !== modifiedCellId)) {\n                modifiedCells.push(cell);\n            } else {\n                const module = new ModuleHandle().fromJson(\n                    workflow.modules[index],\n                    workflow.datasets\n                );\n                if (cell.id === module.id) {\n                    // This is a cell that existed in the previous workflow. If\n                    // the modified module identifier is given then we need to\n                    // set the cell output to its default value unless we want\n                    // to maintain the output states of the notebook cells\n                    let outputResource = outputSelector(cell, module, useDefaultOutputs)\n                    modifiedCells.push(\n                        new NotebookCell(\n                            module.id,\n                            module,\n                            cell.commandSpec,\n                            outputResource\n                        )\n                    );\n                    index++;\n                } else {\n                    // Here is were the differences between the notebook and the\n                    // new workflow version starts. All modules from here on\n                    // will have new identifier. We append them to the modified\n                    // cell list below\n                    break;\n                }\n            }\n        }\n        // Append all workflow modules that have not been appended yet\n        for (let i = index; i < workflow.modules.length; i++) {\n            const module = new ModuleHandle().fromJson(\n                workflow.modules[i],\n                workflow.datasets\n            );\n            modifiedCells.push(\n                new NotebookCell(\n                    module.id,\n                    module,\n                    workflow.getCommandSpec(module.command),\n                    getModuleDefaultOutput(module)\n                )\n            );\n        }\n        return new Notebook(workflow, modifiedCells, this.cellCounter);\n    }\n}\n\n\n/**\n * Each cell in a notebook contains a corresponding workflow module and a cell\n * output resource to keep track of the information that is shown in the cell\n * output area.\n */\nclass NotebookCell {\n    constructor(id, module, commandSpec, output) {\n        this.id = id;\n        this.module = module;\n        this.commandSpec = commandSpec;\n        this.output = output;\n    }\n    /**\n     * Test if the associated workflow module is in an active state.\n     */\n    isActive = () => (this.isPending() || this.isRunning());\n    /**\n     * Test if the state of the associated module is canceled.\n     */\n    isCanceled() {\n        if (this.module != null) {\n            return this.module.state === STATE_CANCELED;\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in error state.\n     */\n    isError() {\n        if (this.module != null) {\n            return this.module.state === STATE_ERROR\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in error or canceled state.\n     */\n    isErrorOrCanceled = () => (this.isCanceled() || this.isError());\n    /**\n     * Test if this object represents a new cell in the notebook. A new cell\n     * does not have a workflow module associated with it.\n     */\n    isNewCell = () => (this.module == null);\n    /**\n     * Test if the associated workflow module is in pending state.\n     */\n    isPending() {\n        if (this.module != null) {\n            return this.module.state === STATE_PENDING\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in running state.\n     */\n    isRunning() {\n        if (this.module != null) {\n            return this.module.state === STATE_RUNNING\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if the associated workflow module is in success state.\n     */\n    isSuccess() {\n        if (this.module != null) {\n            return this.module.state === STATE_SUCCESS\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Test if this cell is in the frozen state.\n     */\n    isFrozen() {\n        if (this.module != null) {\n            return this.module.state === STATE_FROZEN\n        } else {\n            return false\n        }\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n/**\n * Selects the output between the module and cell. useDefaultOutputs =true uses module outputs.\n * the choice between using cell and module outputs during re-rendering helps retain notebook state.\n * the API returns an empty CONTEXT_TEXT (lines=[]) output when processing cells, hence these should\n * be ignored and module output displayed at the end of the execution\n */\nconst outputSelector = (cell, module, useDefaultOutputs) => {\n    let outputResource = cell.output;\n    if(useDefaultOutputs || (cell.output.type===CONTENT_TEXT && (!cell.output.lines || cell.output.lines.length===0))){\n        outputResource = getModuleDefaultOutput(module);\n    }\n    return outputResource;\n}\n\n\n/**\n * Get the default output resource for a given module.\n */\nconst getModuleDefaultOutput = (module) => {\n    // Get cell output resource\n    const stdout = module.outputs.stdout;\n    let outputResource;\n    if (stdout.length === 1) {\n        // If the output is a chart view it is expected to be the only\n        // output element\n        const out = stdout[0];\n        if (out.type === 'chart/view') {\n            outputResource = new OutputChart(out.value.data.name, out.value.result);\n        } else if (out.type === 'dataset/view') {\n            outputResource = new OutputDataset(new DatasetHandle(out.value.id, out.value.name).fromJson(out.value), false);\n        } else if (out.type === 'text/html') {\n            outputResource = new OutputHtml(stdout);\n        } else if (out.type === 'text/markdown') {\n            outputResource = new OutputMarkdown(stdout);\n        } else if (out.type === 'text/javascript') {\n            outputResource = new OutputJavascript(stdout);\n        } else  {\n            outputResource = new OutputText(stdout);\n        }\n    } else if (stdout.length > 1) {\n        outputResource = new OutputMultiple(stdout);\n    } else { // Make sure that there is some output\n        outputResource = new OutputText([]);\n    }\n    return outputResource;\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {fetchAuthed, checkResponseJsonForReAuth, requestAuth, serviceError, getAuthed} from '../main/Service';\nimport { projectActionError, projectFetchError, requestProjectAction } from './Project';\n// import { AnnotationList } from '../../resources/Annotation';\nimport { DatasetHandle } from '../../resources/Dataset';\nimport { getNewCellId } from '../../resources/Notebook';\nimport { OutputChart, OutputDataset, OutputError, OutputHidden,\n    OutputTimestamps, StandardOutput } from '../../resources/Outputs';\nimport { WorkflowHandle } from '../../resources/Workflow';\nimport { fetchResource, postResourceData } from '../../util/Api';\nimport { ErrorObject } from '../../util/Error';\nimport { HATEOASReferences, HATEOAS_BRANCH_HEAD, HATEOAS_MODULE_DELETE,\n    HATEOAS_WORKFLOW_CANCEL } from '../../util/HATEOAS';\n// import { VIZUAL, VIZUAL_OP } from '../../util/Vizual';\n\n\n/**\n * Identifier for the supported notebook actions\n */\n// Change the value of the group mode state\nexport const CHANGE_GROUP_MODE = 'CHANGE_GROUP_MODE';\n// Insert a new cell into the notebook\nexport const INSERT_NOTEBOOK_CELL = 'INSERT_NOTEBOOK_CELL';\n// Signals for fetching workflow modules\nexport const RECEIVE_WORKFLOW = 'RECEIVE_WORKFLOW';\nexport const REQUEST_WORKFLOW = 'REQUEST_WORKFLOW';\n// set the active notebook cell\nexport const SET_ACTIVE_NOTEBOOK_CELL = 'SET_ACTIVE_NOTEBOOK_CELL';\n// Update the notebook object in the global state\nexport const UPDATE_NOTEBOOK = 'UPDATE_NOTEBOOK';\n\n\n// -----------------------------------------------------------------------------\n// Workflows\n// -----------------------------------------------------------------------------\n\n/**\n * Fetch project and branch from API. Calls the given result function to\n * fetch further resources on success.\n *\n */\nexport const fetchWorkflow = (project, branch, workflowId) => (dispatch, getState) => {\n    // Construct workflow url from the API reference set. This set may not be\n    // initialized yet!\n    const api = getState().serviceApi;\n    if (api.links) {\n        let url = getState().serviceApi.links.getNotebookUrl(project.id, branch.id, workflowId);\n        // Signal start of fetching project listing\n        dispatch({ type: REQUEST_WORKFLOW });\n        // Fetch the project.\n        return fetchAuthed(url)(dispatch)\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: The returned json object is expected to contain\n                // the project handle (.project), workflow handle (.workflow),\n                //  workflow modules (.modules), and all dataset descriptors\n                // (.datasets). The last two are used to generate the notebook.\n                checkResponseJsonForReAuth(response).then(json => (\n                    dispatch({\n                        type: RECEIVE_WORKFLOW,\n                        workflow: new WorkflowHandle(api.engine).fromJson(json)\n                    })\n                ));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else if (response.status === 404) {\n                // The requested project, branch, or workflow does not exist.\n                checkResponseJsonForReAuth(response).then(json => (dispatch(\n                    workflowFetchError(json.message, 404)\n                )));\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                    workflowFetchError(json.message, response.status)\n                ));\n            }\n        })\n        .catch(err => dispatch(workflowFetchError(err.message)))\n    }\n}\n\n\n/**\n * Siple wrapper for workflow-specific project errors.\n */\nconst workflowFetchError = (message, status) => (\n    projectFetchError(message, status, 'Error fetching notebook')\n);\n\n\n// -----------------------------------------------------------------------------\n// Notebooks\n// -----------------------------------------------------------------------------\n\nconst getJson = (response, success) => {\n    if (response.status === success) {\n        return checkResponseJsonForReAuth(response);\n    } else {\n        return checkResponseJsonForReAuth(response).then(err => {throw err;});\n    }\n}\n/**\n * Check the status of an active notebook cell. If the status of the associated\n * module has changed we fetch the update version of the workflow and update\n * the notebook accordingly.\n */\nexport const checkModuleStatus = (notebook, cell) => (dispatch) => (\n    fetchAuthed(cell.module.links.getSelf())(dispatch).then(\n        response => getJson(response, 200),\n        error => dispatch(serviceError(error.message))\n    ).then(\n        json => {\n            if (json.state !== cell.module.state) {\n                return fetchAuthed(notebook.workflow.links.get(HATEOAS_BRANCH_HEAD))(dispatch).then(\n                    response => getJson(response, 200),\n                    error => dispatch(serviceError(error.message))\n                ).then(\n                    json => (dispatch(updateNotebook(notebook, json, cell.id))),\n                    error => dispatch(workflowFetchError(error.message))\n                )\n            }\n        },\n        error => dispatch(setNotebookCellError(notebook, cell.module, 'module status', error.message))\n    )\n)\n\n\n/**\n * Dismiss any changes that were made to the given cell. Sets the active cell\n * to null.\n */\nexport const dismissCellChanges = (notebook, cell) => (dispatch) => {\n    dispatch({\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook.dismissChangesForCell(cell.id)\n    })\n    dispatch({type: SET_ACTIVE_NOTEBOOK_CELL});\n}\n\n\n/**\n * Start editing a cell in a notebook. The cell is expected to contain a\n * workflow module that contains the command that is being edited.\n */\nexport const editNotebookCell = (notebook, cell) => ({\n    type: UPDATE_NOTEBOOK,\n    notebook: notebook.editCell(cell)\n})\n\n\n/**\n * Insert a new cell into the notebook. The position of the new cell is relative\n * to the given cell (either before or after). If cell is null the new cell is\n * being added to an empty notebook.\n *\n * The new cell will be set as the active cell for the modified notebook.\n */\nexport const createtNotebookCell = (notebook, cell, position) => (dispatch) => {\n    // The identifier for the new notebook cell is generated by the getNewCellId\n    // method. By calling the method here we get the identifier of the cell that\n    // will be added when .editCell() is called. Use this identifier to set the\n    // new cell as the active cell in the modified notebook.\n    const cellId = getNewCellId(notebook.cellCounter);\n    dispatch({\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook.editCell(cell, position)\n    })\n    dispatch({\n        type: SET_ACTIVE_NOTEBOOK_CELL,\n        cellId\n    })\n}\n\n\n/**\n * Set the identifier of the notebook cell that is active. The cell might be\n * null if the active cell selection is being cleared.\n */\nexport const selectNotebookCell = (cell) => {\n    let cellId = (cell != null) ? cell.id : null;\n    return {\n        type: SET_ACTIVE_NOTEBOOK_CELL,\n        cellId\n    }\n}\n\n\n/**\n * Check the url param cell-output.  if it is present\n */\nexport const isCellOutputRequest = () => {\n\tconst urlParams = new URLSearchParams(window.location.search);\n\tconst cellOutput = urlParams.get('cell-output');\n\treturn cellOutput;\n}\n\n\n\n// -----------------------------------------------------------------------------\n// Update notebook cells\n// -----------------------------------------------------------------------------\n\n/**\n * Load annotations for a given dataset cell to be displayed in a notebook cell.\n * If columnId or rowId are negative a shown annotation is discarded instead.\n */\nexport const fetchAnnotations = (notebook, module, dataset, columnId, rowId) => (dispatch) => {\n    return dispatch(\n        fetchResource(\n            dataset.links.getAnnotations(columnId, rowId),\n            (json) => {\n                // const annotations = new AnnotationList(json['annotations'])\n                return setActiveDatasetCell(\n                    notebook,\n                    module\n                );\n            },\n            (message) => {\n                setNotebookCellError(notebook, module, 'annotations for dataset ' + dataset.name, message)\n            },\n            () => (setActiveDatasetCell(notebook, module))\n        )\n    )\n}\n\n/**\n * Update the cell containing the given module in the notebook to indicate that\n * the output content is being loaded.\n */\nconst setNotebookCellBusy = (notebook, module) => (dispatch) => {\n    return dispatch(updateNotebook(notebook.setFetching(module.id)));\n}\n\n\n/**\n * Update the cell containing the given module in the notebook to show an error\n * message that was generated while fetching a cell resource.\n */\nconst setNotebookCellError = (notebook, module, resourceType, message) => (dispatch) => {\n    const err = new ErrorObject('Error loading ' + resourceType, message);\n    const nb = notebook.replaceOutput(module.id, new OutputError(err));\n    return dispatch(updateNotebook(nb));\n}\n\n\n/**\n * Set the annotation object for a given notebook module.\n */\nconst setActiveDatasetCell = (notebook, module, cell) => (dispatch) => {\n    const nb = notebook.setActiveDatasetCell(module.id, cell);\n    return dispatch(updateNotebook(nb));\n}\n/**\n * Request properties for the specified datatset from the API and recreate the notebook.\n * unstable because it tries to recreate the notebook from the workflow which may or may not get the properties for\n * previously requested data cells depending on if the API updated default module outputs when that request is made.\n */\nexport const unstable_updateCellDatasetProperties = (notebook, module, dataset, offset, limit, profile) => (dispatch) => {\n    let url = dataset.links.getDatasetUrl(offset, limit, profile);\n    return fetchAuthed(url)(dispatch).then(\n        response => getJson(response, 200),\n        error => dispatch(serviceError(error.message))\n    ).then(\n        json => {\n            if (json.properties !== dataset.properties) {\n                //refetch the latest workflow since notebook might have been modified since the request to initiate profiling was sent\n                return fetchAuthed(notebook.workflow.links.get(HATEOAS_BRANCH_HEAD))(dispatch).then(\n                    response => getJson(response, 200),\n                    error => dispatch(serviceError(error.message))\n                ).then(\n                    wfJson => (dispatch(updateNotebookFromProperties(notebook, wfJson, module.id, new OutputDataset(new DatasetHandle(json.id, dataset.name, dataset.activeCell).fromJson(json))))),\n                    error => dispatch(workflowFetchError(error.message))\n                )\n            }\n        },\n        error => dispatch(setNotebookCellError(notebook, module, 'module status', error.message))\n    )\n}\n/**\n * Request dataset properties from the API and updates the latest notebook\n */\nexport const updateCellDatasetProperties = (getLatestNotebook, module, dataset, offset, limit, profile) => (dispatch) => {\n    // Use dataset self reference to create fect URL\n    let url = dataset.links.getDatasetUrl(offset, limit, profile);\n    return dispatch(\n        fetchResource(\n            url,\n            (json) => (updateNotebook(\n                getLatestNotebook().replaceOutput(\n                    module.id,\n                    new OutputDataset(\n                        new DatasetHandle(\n                            json.id,\n                            dataset.name,\n                            dataset.activeCell\n                        ).fromJson(json)\n                    )))),\n            (message) => (\n                setNotebookCellError(getLatestNotebook(), module, 'dataset ' + dataset.name, message)\n            )\n        )\n    )\n}\n\n// -----------------------------------------------------------------------------\n// Show notebook cell output\n// -----------------------------------------------------------------------------\n\n/**\n * Hide output by setting it to an empty text output.\n */\nexport const hideCellOutput = (notebook, module) => (dispatch) => {\n    const out = new OutputHidden();\n    dispatch(updateNotebook(notebook.replaceOutput(module.id, out)))\n};\n\n\n/**\n * Show the chart with the given name in the notebook cell.\n */\nexport const showCellChart = (notebook, module, name) => (dispatch) => {\n    // If the chart was in the module output we can directly dispatch it.\n    // Otherwise we need to fetch the resource from the server first.\n    let isInOutput = false;\n    if (module.outputs.stdout.length === 1) {\n        if (module.outputs.stdout[0].type === 'chart/view') {\n            isInOutput = (module.outputs.stdout[0].value.data.name === name);\n        }\n    }\n    if (isInOutput) {\n        const val = module.outputs.stdout[0].value;\n        const out = new OutputChart(val.data.name, val.result)\n        dispatch(updateNotebook(notebook.replaceOutput(module.id, out)));\n    } else {\n        // Find the chart descriptor in the module\n        let chart = null;\n        for (let i = 0; i < module.charts.length; i++) {\n            if (module.charts[i].name === name) {\n                chart = module.charts[i];\n                break;\n            }\n        }\n        if (chart !== null) {\n            // Use the chart's self reference to fetch the data frm the Web API.\n            const url = new HATEOASReferences(chart.links).getSelf()\n\n            dispatch(\n                fetchResource(\n                    url,\n                    (json) => {\n                        const output = new OutputChart(name, json.data);\n                        const nb = notebook.replaceOutput(module.id, output);\n                        return updateNotebook(nb);\n                    },\n                    (message) => (\n                        setNotebookCellError(notebook, module, 'chart', message)\n                    ),\n                    () => (setNotebookCellBusy(notebook, module))\n            ))\n        }\n    }\n}\n\n\n/**\n * Show (a subset of rows for) a given dataset in the output area of a notebook\n * cell. The data is fetched from the Web API. The url to fetch the dataset is\n * constructed using the  given offset and limit values.\n */\nexport const showCellDataset = (notebook, module, dataset, offset, limit) => (dispatch) => {\n    // Use dataset self reference to create fect URL\n    let url = dataset.links.getDatasetUrl(offset, limit);\n    return dispatch(\n        fetchResource(\n            url,\n            (json) => (updateNotebook(\n                notebook.replaceOutput(\n                    module.id,\n                    new OutputDataset(\n                        new DatasetHandle(\n                            json.id,\n                            dataset.name,\n                            dataset.activeCell\n                        ).fromJson(json)\n            )))),\n            (message) => (\n                setNotebookCellError(notebook, module, 'dataset ' + dataset.name, message)\n            )\n        )\n    )\n}\n\n\n/**\n * Change the output of a notebook cell to show the text that was written to\n * standard output during execution of the workflow module that is associated\n * with the cell.\n */\nexport const showCellStdout = (notebook, module) => (dispatch) => {\n    const out = StandardOutput(module);\n    dispatch(updateNotebook(notebook.replaceOutput(module.id, out)))\n};\n\n\n/**\n * Change the output of a notebook cell to show the timestamps for the different\n * stages of cell execution.\n */\nexport const showCellTimestamps = (notebook, module) => (dispatch) => {\n    const { createdAt, startedAt, finishedAt } = module.timestamps;\n    const out = new OutputTimestamps(createdAt, startedAt, finishedAt);\n    dispatch(updateNotebook(notebook.replaceOutput(module.id, out)))\n};\n\n\n// -----------------------------------------------------------------------------\n// Modify Workflow\n// -----------------------------------------------------------------------------\n\n/**\n * Cancel execution of a running workflow. The result is handle of the modified\n * workflow. We use this to update the notebook accordingly.\n */\nexport const cancelWorkflowExecution = (notebook) => (dispatch) => (\n    dispatch(\n        postResourceData(\n            notebook.workflow.links.get(HATEOAS_WORKFLOW_CANCEL),\n            {},\n            (json) => {\n                // Get the new workflow handle\n                const wf = new WorkflowHandle(\n                    notebook.workflow.engine\n                ).fromJson(json);\n                return {\n                    type: UPDATE_NOTEBOOK,\n                    notebook: notebook.updateWorkflow(wf)\n                };\n            },\n            workflowFetchError\n        )\n    )\n)\n\n\n/**\n * Delete a cell in the current notebook. This action is only applicable to\n * cells that contain an existing module in the current workflow.\n *\n * Expects the module handle as argument. The handle contains the delete url\n * in the set of HATEOAS links. The result of a successful delete request is\n * a Json object that is expected to contain the handle for the new workflow\n * (.workflow) and the information for the workflow notebook (.modules and\n * (.datasets).\n */\nexport const deleteNotebookCell = (notebook, cell) => (dispatch) => {\n    // Signal start by setting the project action flag\n    dispatch(requestProjectAction());\n    return fetchAuthed(\n        cell.module.links.get(HATEOAS_MODULE_DELETE),\n        {method: 'DELETE'}\n    )(dispatch).then(function(response) {\n        if (response.status === 200) {\n            // SUCCESS: Dispatch updated notebook for new workflow handle\n            checkResponseJsonForReAuth(response).then(json => dispatch(updateNotebook(notebook, json)));\n        } else if(response.status === 401) {\n        \t// UNAUTHORIZED: re-request auth\n        \tdispatch(requestAuth())\n        } else {\n            // ERROR: The API is expected to return a JSON object in case\n            // of an error that contains an error message\n            checkResponseJsonForReAuth(response).then(json => dispatch(\n                projectActionError('Error deleting module', json.message)\n            ))\n        }\n    })\n    .catch(err => dispatch(\n        projectActionError('Error while deleting module', err.message)\n    ))\n}\n\n\n/**\n * Insert a new cell into a notebook. The position at which the cell is inserted\n * is identified by the given Url. Creates a POST request using the given\n * data object. The object is expected to contain a valid request body.\n *\n * Parameters:\n *\n * url: string\n * data: {type: string, id: string, arguments: object}\n */\nexport const insertNotebookCell = (notebook, url, data, modifiedCellId) => (dispatch) => {\n    return dispatch(updateNotebookCell(notebook, url, 'POST', data, modifiedCellId));\n}\n\n\n/**\n * Replace a cell in a notebook. The replaced cell is identified by the given\n * Url. Creates a PUT request using the given data object. The object is\n * expected to contain a valid request body.\n *\n * Parameters:\n *\n * url: string\n * data: {type: string, id: string, arguments: object}\n */\nexport const replaceNotebookCell = (notebook, url, data, modifiedCellId) => (dispatch) => {\n    return dispatch(updateNotebookCell(notebook, url, 'PUT', data, modifiedCellId));\n}\n\n\n/**\n * Freeze a specified cell in the notebook an d its successors.\n */\nexport const freezeOrThawNotebookCell = (notebook, url, modifiedCellId) => (dispatch) => {\n    dispatch(updateNotebookCell(notebook, url, 'POST', {}, modifiedCellId));\n}\n\n\n/**\n * Update a cell in a notebook. This could either insert a new notebook cell or\n * replace an existing cell. The data object contains the module specification\n * and user provided input parameters.\n *\n * Parameters:\n *\n * url: string\n * action: POST or PUT\n * data: {type: string, id: string, arguments: object}\n */\nexport const updateNotebookCell = (notebook, url, action, data, modifiedCellId) => (dispatch) => {\n    // Signal start by setting the project action flag\n    dispatch(requestProjectAction());\n    // Independently of whether we insert or append the request is a POST\n    // containing the module specification as its body.\n    return fetchAuthed(\n        url,\n        {\n            method: action,\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }\n    )(dispatch).then(function(response) {\n        if (response.status === 200) {\n            // SUCCESS: Dispatch modified notebook resource. The result is\n            // expected to be a Json object with WorkflowHandle (.workflow)\n            // and the new nootebook information (.modules and .datasets)\n            checkResponseJsonForReAuth(response).then(json => (\n                dispatch(updateNotebook(notebook, json, modifiedCellId)))\n            );\n        } else if(response.status === 401) {\n        \t// UNAUTHORIZED: re-request auth\n        \tdispatch(requestAuth())\n        } else {\n            // ERROR: The API is expected to return a JSON object in case\n            // of an error that contains an error message\n            checkResponseJsonForReAuth(response).then(json => (dispatch(\n                projectActionError('Error updating notebook', json.message)\n            )));\n        }\n    })\n    .catch(err => dispatch(\n        projectActionError('Error updating notebook', err.message)\n    ))\n}\n\n\n/**\n * Update a cell in a notebook. If the new cell command is VIZUAL LOAD we need\n * to upload any specified file first (unless the file has already been uploaded\n * previously which is indicated by a fileid that is not null).\n * After any potential file upload the provided notebook modifier function is\n * called with the approriate request body data.\n *\n * Parameters:\n *\n * modifyUrl: string\n * data: {type: string, id: string, arguments: object}\n * notebookModifier: func(url, data)\n * uploadUrl: string\n *\n */\nexport const updateNotebookCellWithUpload = (notebook, modifyUrl, data, notebookModifier, modifiedCellId, uploadUrl, fileArg, onProgressUpdate) => (dispatch) => {\n    const { file } = fileArg.value;\n    const uploadReqData = new FormData();\n    uploadReqData.append('file', file);\n    const req = {\n        method: 'POST',\n        body: uploadReqData\n    }\n    let config = {\n        onUploadProgress: function(progressEvent) {\n            onProgressUpdate && onProgressUpdate(Math.round( (progressEvent.loaded * 100) / progressEvent.total));\n        }\n    };\n    // updated methodology to use axios post instead of the native fetch() method, to enable upload progress tracking\n    return getAuthed(\n            uploadUrl,\n            req,\n            config\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Fetch updated file identifier and modify the\n                // request body to update the notebook.\n                checkResponseJsonForReAuth(response, false).then(json => {\n                    console.log('FILE RESPONSE');\n                    console.log(json);\n                    fileArg.value.fileid = json.id;\n                    console.log('REQ')\n                    console.log(data)\n                    return dispatch(notebookModifier(notebook, modifyUrl, data, modifiedCellId));\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message. For some response\n                // codes, however, this is not true (e.g. 413).\n                // TODO: Catch the cases where there is no Json response\n                checkResponseJsonForReAuth(response, false).then(json => dispatch(\n                    projectActionError('Error updating workflow', json.message))\n                )\n            }\n        })\n        .catch(err => {\n            let msg = err.message;\n            if (msg === 'NetworkError when attempting to fetch resource.') {\n                msg = 'Connection closed by server. The file size may exceed the server\\'s upload limit.'\n            }\n            dispatch(projectActionError('Error updating workflow', msg))\n        });\n}\n\n\n/**\n * Set notebook resource in the notebook page state. The semantics of the first\n * parameter depends on the presence of the second parameter.\n *\n * If only a notebook is given it is expected to be the new notebook resource.\n * If an additional json object is given this object is expected to contain the\n * workflow handle of the updated workflow. The notebook in this case is the\n * current notebook that needs to be updated using the new workflow handle. The\n * optional modified cell identifier is the identifier of the cell that\n * triggered the update.\n */\nexport const updateNotebook = (notebook, json, modifiedCellId) => {\n    // Create an updated notebook resource if the workflow handle is given\n    if (json != null) {\n        const wf = new WorkflowHandle(notebook.workflow.engine).fromJson(json);\n        notebook = notebook.updateWorkflow(wf, modifiedCellId);\n    }\n    return {\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook\n    }\n};\n/***\n * Create a new notebook from the latest workflow and new dataset handle with properties\n */\nexport const updateNotebookFromProperties = (notebook, wfJson, modifiedCellId, outputDataset)=> {\n    const wf = new WorkflowHandle(notebook.workflow.engine).fromJson(wfJson);\n    return {\n        type: UPDATE_NOTEBOOK,\n        notebook: notebook\n            .updateWorkflow(wf, modifiedCellId)\n            .replaceOutput(modifiedCellId, outputDataset)\n    }\n}","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * Reducer for actions that affect the notebook page.\n */\n\nimport { RECEIVE_WORKFLOW, REQUEST_WORKFLOW, SET_ACTIVE_NOTEBOOK_CELL,\n    UPDATE_NOTEBOOK } from '../../actions/project/Notebook';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT } from '../../actions/project/Project';\nimport { Notebook } from '../../resources/Notebook';\n\n\n/**\n * STATE:\n *\n * activeCell: Identifier of the active cell\n * fetchError: Error while loading the project handle or workflow handle\n * groupMode: Mode for grouping Vizual commands\n * isFetching: Load of project handle or workflow handle in progress\n * notebook: Notebook for the current workflow handle\n * reversed: Order of cells in a notebook\n */\n\nconst INITIAL_STATE = {\n    activeCell: null,\n    fetchError: null,\n    isFetching: false,\n    notebook: null,\n    reversed: false,\n}\n\nexport const spreadsheetPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_WORKFLOW:\n            return {\n                ...state,\n                activeCell: null,\n                isFetching: false,\n                fetchError: null,\n                notebook: new Notebook(action.workflow).fromWorkflow(action.workflow)\n            };\n        case RECEIVE_PROJECT:\n            return {...state, activeCell: null, notebook: null};\n        case REQUEST_PROJECT:\n        case REQUEST_WORKFLOW:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case SET_ACTIVE_NOTEBOOK_CELL:\n            return {...state, activeCell: action.cellId};\n        case UPDATE_NOTEBOOK:\n            return {...state, notebook: action.notebook};\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Annotation object for a database cell. Contains all annotations for a\n * given cell.\n *\n */\nexport class CellAnnotation {\n    constructor(column, row, content) {\n        this.column = column;\n        this.row = row;\n        this.content = content;\n    }\n    /**\n     * Test if the annotation is for a given column-id, row-id pair.\n     */\n    isActive(columnId, rowId) {\n        return ((this.column === columnId) && (this.row === rowId));\n    }\n}\n\n\nexport class NoAnnotation {\n    constructor(column, row, content) {\n        this.column = -1;\n        this.row = -1;\n    }\n    /**\n     * Test if the annotation is for a given column-id, row-id pair.\n     */\n    isActive(columnId, rowId) {\n        return false;\n    }\n}\n\n\n/**\n * Annotation content indicating that annotations are currently being fetched.\n */\nexport class IsFetching {\n    isFetching() {\n        return true;\n    }\n    isError() {\n        return false;\n    }\n}\n\n\n/**\n * Annotation content containing an error that occured while fetching\n * annotations.\n */\nexport class FetchError {\n    constructor(title, message) {\n        this.title = title;\n        this.message = message;\n    }\n    isFetching() {\n        return false;\n    }\n    isError() {\n        return true;\n    }\n}\n\n\n/**\n * List of annotation objects. The objects are expected to be (key,value)-pairs.\n */\nexport class AnnotationList {\n    constructor(items) {\n        this.items = items;\n    }\n    isFetching() {\n        return false;\n    }\n    isError() {\n        return false;\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    projectActionError, receiveProjectResource, requestProjectAction } from './Project';\nimport { updateNotebook } from './Notebook';\nimport {\n    CellAnnotation, NoAnnotation, IsFetching, FetchError, AnnotationList\n} from '../../resources/Annotation';\nimport { DatasetHandle } from '../../resources/Dataset';\n//import { WorkflowHandle } from '../../resources/Workflow';\n// import { Notebook } from '../../resources/Notebook';\nimport { SpreadsheetResource, DatasetCaveatResource } from '../../util/App'\n// import { WorkflowHandle } from '../../resources/Workflow';\nimport { fetchResource, postResourceData } from '../../util/Api';\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../main/Service';\nimport { HATEOAS_MODULE_APPEND } from '../../util/HATEOAS';\nimport { VIZUAL_OP, VIZUAL } from '../../util/Vizual'\n// Actions to indicate that the spreadsheet is currently being updated\nexport const SUBMIT_UPDATE_REQUEST = 'SUBMIT_UPDATE_REQUEST';\n//Actions to indicate that the dataset caveats are currently being updated\nexport const REQUEST_CAVEATS = 'REQUEST_CAVEATS';\n// Set the cell annotation object for a selected dataset cell\nexport const SET_ANNOTATIONS = 'SET_ANNOTATIONS';\n// Signal an update to the datasets annotations\nexport const UPDATE_DATASET_ANNOTATIONS = 'UPDATE_DATASET_ANNOTATIONS'\n\n\n/**\n * Show a spreadsheet as the content of the project page. The url parameter is\n * optional. If not given, loads the spreadsheet datat using the .self url from\n * the given dataset descriptor.\n *\n * Parameters:\n *\n * dataset: DatasetDescriptor\n *\n */\nexport const showSpreadsheet = (dataset, url) => (dispatch) => {\n\tconst { id, name, offset } = dataset;\n\tlet fetchUrl = null;\n\tlet dsoffset = 0;\n    if(offset){\n    \tdsoffset = offset;\n    }\t\n\tif (url) {\n        fetchUrl = url;\n    } else {\n        fetchUrl = dataset.links.getDatasetUrl(dsoffset, 25);\n    }\n    dispatch(\n        fetchResource(\n            fetchUrl,\n            (json) => (dispatch) => {\n                return dispatch(receiveProjectResource(\n                    new SpreadsheetResource(\n                        new DatasetHandle(id, name)\n                            .fromJson(json)\n                    )\n                ));\n            },\n            (message) => (\n                projectActionError('Error loading spreadsheet', message)\n            ),\n            requestProjectAction\n        )\n    )\n}\n\n/**\n * Show (a subset of rows for) a given dataset in the output area of a notebook\n * cell. The data is fetched from the Web API. The url to fetch the dataset is\n * constructed using the  given offset and limit values.\n */\nexport const showModuleSpreadsheet = (dataset, offset, limit, moduleId) => (dispatch) => {\n    // Use dataset self reference to create fect URL\n    let url = dataset.links.getDatasetUrl(offset, limit);\n    dispatch(\n        fetchResource(\n            url,\n            (json) => (dispatch) => {\n            \tjson.moduleId = moduleId;\n                return dispatch(receiveProjectResource(\n                    new SpreadsheetResource(\n                        new DatasetHandle(\n                            json.id,\n                            dataset.name\n                        ).fromJson(json)\n                    )\n                ));\n            },\n            (message) => (\n            \t\tprojectActionError('Error loading spreadsheet', message)\n            )\n        )\n    )\n}\n\n/**\n * Show a dataset errors as the content of the project page. The url parameter is\n * optional. If not given, loads the spreadsheet datat using the .self url from\n * the given dataset descriptor.\n *\n * Parameters:\n *\n * dataset: DatasetDescriptor\n *\n */\nexport const showDatasetCaveat = (dataset, url) => (dispatch) => {\n    let fetchUrl = null;\n    if (url) {\n        fetchUrl = url;\n    } else {\n        fetchUrl = dataset.links.self +'/annotations';\n    }\n    dispatch(submitCaveatRequest());\n    dispatch(\n        fetchResource(\n            fetchUrl,\n            (json) => (dispatch) => {\n                return dispatch(receiveProjectResource(\n                    new DatasetCaveatResource(\n                        new DatasetHandle(dataset.id, dataset.name),\n                        new AnnotationList(json)\n                    )\n                ));\n            },\n            (message) => (\n                projectActionError('Error loading dataset errors', message)\n            ),\n            requestProjectAction\n        )\n    )\n}\n\nexport const repairDatasetCaveat = (dataset, url, reason, repair, acknowledge) => (dispatch) => {\n    const data = {\n    \t\treason,\n            repair,\n            acknowledge\n        }\n    const columnId = -1\n    const rowId = '-1'\n    return postResourceData(\n            dispatch,\n            url,\n            data,\n            (json) => (dispatch) => {\n                return dispatch(receiveProjectResource(\n                    new DatasetCaveatResource(\n                        new DatasetHandle(dataset.id, dataset.name),\n                        new AnnotationList(json['annotations'])\n                    )\n                ));\n            },\n            (message) => {\n                const err = new FetchError('Error loading annotations', message);\n                const annotation = new CellAnnotation(columnId, rowId, err);\n                return setAnnotations(annotation);\n            },\n            requestProjectAction\n        );\n    }\n\nexport const submitUpdate = (notebook, dataset, cmd, moduleIndex) => (dispatch) => {\n    // const { name, offset } = dataset;\n\tconst upcmd = cmd;\n    dispatch(submitUpdateRequest());\n    const updateBody = {\n            method: 'POST',\n            body: JSON.stringify({...cmd}),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n        };\n    let update = null;\n    if(moduleIndex){\n    \tconst url = notebook.workflow.modules[moduleIndex].links[0].href;\n    \tupdate = fetchAuthed(\n    \t\t\turl,\n                updateBody\n            );\n    }\n    else {\n    \tupdate = fetchAuthed(\n    \t\t\tnotebook.workflow.links.get(HATEOAS_MODULE_APPEND),\n                updateBody\n            );\n    }\n    \n    return update(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => {\n                \tlet upds = dataset\n                \tlet moduleId = \"__0__\";\n                \tif(moduleIndex){\n                \t\tlet newModuleIndex = moduleIndex;\n                \t\tconst newModuleId = json.modules[newModuleIndex].id;\n                \t\tmoduleId = json.modules[moduleIndex-1].id;\n                    \tupds.moduleId = newModuleId;\n                    \tupds.moduleIndex = newModuleIndex;\n                \t}\n                \t//add updates to current dataset -- trick to make not need to wait for dataset fetch\n                \tif(upcmd.packageId === VIZUAL_OP && upcmd.commandId === VIZUAL.UPDATE_CELL){\n                \t\tupds.rows.find((row) => (row.id === upcmd.arguments[2].value)).values[upcmd.arguments[1].value] = upcmd.arguments[3].value\n                \t}\n                \tif(upcmd.packageId === VIZUAL_OP && upcmd.commandId === VIZUAL.RENAME_COLUMN){\n                \t\tupds.columns.find((col) => (col.id === upcmd.arguments[1].value)).name = upcmd.arguments[2].value\n                \t}\n                \t\n                \telse if(upcmd.packageId === \"mimir\" && upcmd.commandId === \"comment\"){\n                \t\tconst colName = upcmd.arguments[1].value[0][0].value;\n                \t\tconst nameEquals = (col) => col.name === colName;\n                \t\tconst columnId = upds.columns.findIndex(nameEquals); \n                \t\tupds.rows.find((row) => (row.id === upcmd.arguments[1].value[0][2].value)).rowAnnotationFlags[columnId] = false\n                \t}\n                \t//we shoule also fire off a fetch of the new dataset here or something more clever that needs to be designed \n                \t// like partial spreadsheet fetch like above but the right way. \n                \t//const wf = new WorkflowHandle(notebook.workflow.engine).fromJson(json);\n                \tdispatch(updateNotebook(notebook, json, moduleId));\n                \tdispatch(receiveProjectResource(\n                            new SpreadsheetResource(upds)));\n                \t\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                    projectActionError('Error updating spreadsheet', json.message))\n                );\n            }\n        })\n        .catch(err => dispatch(\n            projectActionError('Error updating spreadsheet', err.message))\n        )\n}\n\n\n/**\n * Signal that the spreadsheet is currently being updated.\n */\nexport const submitUpdateRequest = () => ({\n    type: SUBMIT_UPDATE_REQUEST\n})\n\n/**\n * Signal that the dataset caveats are currently being updated.\n */\nexport const submitCaveatRequest = () => ({\n    type: REQUEST_CAVEATS\n})\n\n// -----------------------------------------------------------------------------\n// Annotations\n// -----------------------------------------------------------------------------\n\n/**\n * Close an annotation dialog by setting the current annotation object to null.\n */\nexport const clearAnnotations = () => (setAnnotations(new NoAnnotation()));\n\nexport const deleteAnnotations = (dataset, columnId, rowId, annoId) => (dispatch) => {\n    const data = {\n        columnId,\n        rowId,\n        annoId\n    }\n    return postUpdateRequest(\n        dispatch,\n        dataset.links.annotations,\n        data,\n        dataset,\n        columnId,\n        rowId\n    );\n}\n\nexport const fetchAnnotations = (dataset, columnId, rowId) => (dispatch) => {\n    let params = '?column=' + columnId + '&row=' + rowId;\n    let annoLink = '';\n    if(dataset.links.annotations){\n    \tannoLink = dataset.links.annotations + params;\n    }\n    else{\n    \tannoLink = dataset.links.links[3].href + params;\n    }\n    if ((columnId < 0)) {\n        return dispatch(clearAnnotations());\n    } else {\n        return dispatch(\n            fetchResource(\n            \tannoLink,\n                (json) => {\n                    const content = new AnnotationList(json)\n                    const annotation = new CellAnnotation(columnId, rowId, content);\n                    return setAnnotations(annotation);\n                },\n                (message) => {\n                    const err = new FetchError('Error loading annotations', message);\n                    const annotation = new CellAnnotation(columnId, rowId, err);\n                    return setAnnotations(annotation);\n                },\n                () => (setAnnotations(new CellAnnotation(columnId, rowId, new IsFetching())))\n            )\n        )\n    }\n}\n\n\nconst postUpdateRequest = (dispatch, url, data, dataset, columnId, rowId) => {\n    return dispatch(postResourceData(\n        url,\n        data,\n        (json) => {\n            const content = new AnnotationList(json['annotations'])\n            const annotation = new CellAnnotation(columnId, rowId, content);\n            const isAnnotated = (json['annotations'].length > 0);\n            dispatch({\n                type: UPDATE_DATASET_ANNOTATIONS,\n                dataset: dataset.updateAnnotations(columnId, rowId, isAnnotated)\n            });\n            return setAnnotations(annotation);\n        },\n        (message) => {\n            const err = new FetchError('Error loading annotations', message);\n            const annotation = new CellAnnotation(columnId, rowId, err);\n            return setAnnotations(annotation);\n        },\n        () => (setAnnotations(new CellAnnotation(columnId, rowId, new IsFetching())))\n    ));\n}\n\nexport const setAnnotations = (annotations) => ({\n    type: SET_ANNOTATIONS,\n    annotations\n})\n\nexport const updateAnnotations = (dataset, columnId, rowId, key, value) => (dispatch) => {\n    const oldValue = ''\n    const newValue = value\n\tconst data = {\n        columnId,\n        rowId,\n        key,\n        oldValue,\n        newValue\n    }\n    let annoLink = '';\n    if(dataset.links.annotations){\n    \tannoLink = dataset.links.annotations;\n    }\n    else{\n    \tannoLink = dataset.links.links[4].href;\n    }\n    return postUpdateRequest(\n        dispatch,\n        annoLink,\n        data,\n        dataset,\n        columnId,\n        rowId\n    );\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { REQUEST_CAVEATS } from '../../actions/project/Spreadsheet';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT, RECEIVE_PROJECT_RESOURCE } from '../../actions/project/Project';\nimport { RESOURCE_DATASET_CAVEAT } from '../../util/App';\nimport { CONTENT_DATASET } from '../../resources/Outputs';\n\n/**\n* Reducer for actions that affect the branch history page.\n*/\n\n\n/**\n * STATE:\n *\n * fetchError: Error while loading the project handle or workflow listing\n * isFetching: Load of project handle or workflow listing in progress\n * workflows: List of workflow descriptors in branch history\n */\n\nconst INITIAL_STATE = {\n    fetchError: null,\n    isFetching: false,\n    workflows: null\n}\n\nexport const datasetErrorsPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_PROJECT:\n            return {...state, workflows: null};\n        case REQUEST_PROJECT:\n        case REQUEST_CAVEATS:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case RECEIVE_PROJECT_RESOURCE:\n        \tswitch (action.resource.type) {\n        \t\tcase RESOURCE_DATASET_CAVEAT:\n\t        \t    return {\n\t\t        \t    ...state,\n\t\t        \t    isFetching: false,\n\t\t                resource: action.resource\n\t\t            };\n        \t\tcase CONTENT_DATASET:\n\t        \t    return {\n\t\t        \t    ...state,\n\t\t        \t    dataset: action.resource\n\t\t            };\n        \t\tdefault:\n                    return state\n        \t}\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /**\n * Reducer for actions that affect the notebook page.\n */\n\nimport { RECEIVE_WORKFLOW, REQUEST_WORKFLOW, SET_ACTIVE_NOTEBOOK_CELL,\n    UPDATE_NOTEBOOK } from '../../actions/project/Notebook';\nimport { PROJECT_FETCH_ERROR, RECEIVE_PROJECT, REQUEST_PROJECT } from '../../actions/project/Project';\nimport { Notebook } from '../../resources/Notebook';\n\n\n/**\n * STATE:\n *\n * activeCell: Identifier of the active cell\n * fetchError: Error while loading the project handle or workflow handle\n * groupMode: Mode for grouping Vizual commands\n * isFetching: Load of project handle or workflow handle in progress\n * notebook: Notebook for the current workflow handle\n * reversed: Order of cells in a notebook\n */\n\nconst INITIAL_STATE = {\n    activeCell: null,\n    fetchError: null,\n    isFetching: false,\n    notebook: null,\n    reversed: false,\n}\n\nexport const notebookPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error\n            };\n        case RECEIVE_WORKFLOW:\n            return {\n                ...state,\n                activeCell: null,\n                isFetching: false,\n                fetchError: null,\n                notebook: new Notebook(action.workflow).fromWorkflow(action.workflow)\n            };\n        case RECEIVE_PROJECT:\n            return {...state, activeCell: null, notebook: null};\n        case REQUEST_PROJECT:\n        case REQUEST_WORKFLOW:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case SET_ACTIVE_NOTEBOOK_CELL:\n            return {...state, activeCell: action.cellId};\n        case UPDATE_NOTEBOOK:\n            return {...state, notebook: action.notebook};\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NO_OP } from '../main/App';\nimport { fetchAuthed, checkResponseJsonForReAuth, requestAuth } from '../main/Service';\nimport { ProjectDescriptor } from '../../resources/Project';\nimport { HATEOASReferences, HATEOAS_PROJECTS_DELETE, HATEOAS_PROJECTS_LIST } from '../../util/HATEOAS';\nimport { createResource, deleteResource } from '../../util/Api'\nimport { notebookPageUrl } from '../../util/App';\nimport { sortByName } from '../../util/Sort';\n\n/**\n* Actions to update the internal state maintaining the project listing on\n* the main page.\n*/\nexport const CLEAR_PROJECT_ACTION_ERROR = 'CLEAR_PROJECT_ACTION_ERROR'\nexport const REQUEST_PROJECTS = 'REQUEST_PROJECTS'\nexport const RECEIVE_PROJECTS = 'RECEIVE_PROJECTS'\nexport const SET_PROJECT_CREATE_ERROR = 'SET_PROJECT_CREATE_ERROR'\nexport const SET_PROJECT_DELETE_ERROR = 'SET_PROJECT_DELETE_ERROR'\nexport const SET_PROJECTS_FETCH_ERROR = 'SET_PROJECTS_FETCH_ERROR'\nexport const SET_PROJECTS_UPLOAD_ERROR = 'SET_PROJECTS_UPLOAD_ERROR'\n\n\n\n/**\n * Handle errors when deleting a project.\n */\nexport const clearProjectActionError = () => ({\n    type: CLEAR_PROJECT_ACTION_ERROR\n})\n\n\n/**\n * Create a new project.\n */\nexport const createProject = (url, name, history) => (dispatch) =>  {\n    // Trim project name. If empty set to default value.\n    let projectName = name.trim();\n    if (projectName === '') {\n        projectName = 'New Project';\n    }\n    // Signal start of create project action\n    dispatch(requestProjects('Create Project ...'))\n    // Set request body\n    const data = {properties: []}\n    if (name.trim() !== '') {\n        data.properties.push({key: 'name', value: projectName})\n    }\n    // Dispatch create resource request\n    dispatch(\n        createResource(\n            url,\n            data,\n            (json) => {\n                dispatch(fetchProjects());\n                history.push(notebookPageUrl(json.id, json.defaultBranch));\n                // Avoid action undefined error\n                return ({type: NO_OP});\n            },\n            projectCreateError\n    ));\n}\n\n\n/**\n * Send DELETE request for project with given Url\n */\nexport const deleteProject = (project) => (dispatch) => {\n    dispatch(\n        deleteResource(\n            project.links.get(HATEOAS_PROJECTS_DELETE),\n            fetchProjects,\n            projectDeleteError,\n            () => (requestProjects('Delete Project ...'))\n        )\n    )\n}\n\n\n/**\n * Action to retrieve project listing. Expects that the Web Service Url has been\n * set during App initialization.\n *\n */\nexport const fetchProjects = () => (dispatch, getState) => {\n    // Get project Url from the API reference set. This set may not have been\n    // initialized yet!\n    if (getState().serviceApi.links) {\n        const url = getState().serviceApi.links.get(HATEOAS_PROJECTS_LIST);\n        // Signal start of fetching project listing\n        dispatch(requestProjects())\n        return fetchAuthed(url)(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Pass the JSON result to the respective callback\n                // handler\n                checkResponseJsonForReAuth(response).then(json => dispatch(receiveProjects(json)));\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth());\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message\n                checkResponseJsonForReAuth(response).then(json => dispatch(projectsFetchError(json.message)));\n            }\n        })\n        .catch(err => dispatch(projectsFetchError(err.message)))\n    }\n}\n\n/**\n * upload a project export\n *\n * Parameters:\n *\n * uploadUrl: string\n *\n */\nexport const uploadProject = (uploadUrl, fileArg, history) => (dispatch) => {\n    const file = fileArg;\n    const uploadReqData = new FormData();\n    uploadReqData.append('file', file);\n    const req = {\n        method: 'POST',\n        body: uploadReqData\n    }\n    return fetchAuthed(\n            uploadUrl,\n            req\n        )(dispatch)\n        // Check the response. Assume that eveything is all right if status\n        // code below 400\n        .then(function(response) {\n            if (response.status >= 200 && response.status < 400) {\n                // SUCCESS: Fetch updated file identifier and modify the\n                // request body to update the notebook.\n                checkResponseJsonForReAuth(response).then(json => {\n                    console.log('FILE RESPONSE');\n                    console.log(json);\n                    let defaultBranch = json.defaultBranch;\n                    if(!defaultBranch){\n                    \tdefaultBranch = json.branches[0].id;\n                    }\n                    history.push(notebookPageUrl(json.id, defaultBranch));\n                    // Avoid action undefined error\n                    return ({type: NO_OP});\n                });\n            } else if(response.status === 401) {\n            \t// UNAUTHORIZED: re-request auth\n            \tdispatch(requestAuth())\n            } else {\n                // ERROR: The API is expected to return a JSON object in case\n                // of an error that contains an error message. For some response\n                // codes, however, this is not true (e.g. 413).\n                // TODO: Catch the cases where there is no Json response\n                checkResponseJsonForReAuth(response).then(json => dispatch(\n                \t\tprojectsUploadError('Error updating workflow', json.message))\n                )\n            }\n        })\n        .catch(err => {\n            let msg = err.message;\n            if (msg === 'NetworkError when attempting to fetch resource.') {\n                msg = 'Connection closed by server. The file size may exceed the server\\'s upload limit.'\n            }\n            dispatch(projectsUploadError('Error updating workflow', msg))\n        });\n}\n\n\n\n/**\n * Handle errors when retrieving the project listing.\n */\nexport const projectCreateError = (error) => ({\n    type: SET_PROJECT_CREATE_ERROR,\n    error\n})\n\n\n/**\n * Handle errors when deleting a project.\n */\nconst projectDeleteError = (error) => ({\n    type: SET_PROJECT_DELETE_ERROR,\n    error\n})\n\n\n/**\n * Handle errors when retrieving the project listing.\n */\nconst projectsUploadError = (error) => ({\n    type: SET_PROJECTS_UPLOAD_ERROR,\n    error\n})\n\n/**\n * Handle errors when retrieving the project listing.\n */\nconst projectsFetchError = (error) => ({\n    type: SET_PROJECTS_FETCH_ERROR,\n    error\n})\n\n\n/**\n * Signal start of project listing fetch.\n */\nconst requestProjects = (message) => ({\n    type: REQUEST_PROJECTS,\n    message\n})\n\n\n/**\n * Handler for successful retrieval of project listing.\n */\nconst receiveProjects = (json) => {\n    const projects = [];\n    for (let i = 0; i < json.projects.length; i++) {\n        projects.push(new ProjectDescriptor().fromJson(json.projects[i]));\n    }\n    sortByName(projects);\n    return {\n        type: RECEIVE_PROJECTS,\n        projects: projects,\n        links: new HATEOASReferences(json.links)\n    };\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CLEAR_PROJECT_ACTION_ERROR, REQUEST_PROJECTS, RECEIVE_PROJECTS,\n  SET_PROJECT_CREATE_ERROR, SET_PROJECT_DELETE_ERROR, SET_PROJECTS_FETCH_ERROR\n} from '../../actions/project/ProjectListing'\nimport { ErrorObject } from '../../util/Error';\n\n\n/**\n* Reducer for actions that retrieve the Vizier DB Web Service API descriptor.\n*/\n\n\nconst DEFAULT_FETCH_MESSAGE = 'Loading Projects ...';\n\n\n/**\n * STATE:\n *\n * deleteError: Error while deleting a project\n * fetchError: Error while fetching project listing\n * isFetchig: Flag indicating whether fetching is in progress\n * projects: List of retrieved project resources.\n * links: HATEOASReferences\n */\n\nconst INITIAL_STATE = {\n    actionError: null,\n    fetchError: null,\n    fetchMessage: DEFAULT_FETCH_MESSAGE,\n    isFetching: false,\n    projects: null,\n    links: null\n}\n\n\nexport const projectListing = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CLEAR_PROJECT_ACTION_ERROR:\n            return {...state, actionError: null};\n        case REQUEST_PROJECTS:\n            let message = DEFAULT_FETCH_MESSAGE;\n            if (action.message != null) {\n                message = action.message;\n            }\n            return {\n                ...state,\n                isFetching: true,\n                fetchMessage: message\n            }\n        case RECEIVE_PROJECTS:\n            return {\n                ...state,\n                fetchError: null,\n                isFetching: false,\n                projects: action.projects,\n                links: action.links\n            }\n        case SET_PROJECT_CREATE_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                actionError: new ErrorObject('Error creating project', action.error)\n            }\n        case SET_PROJECT_DELETE_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                actionError: new ErrorObject('Error deleting project', action.error)\n            }\n        case SET_PROJECTS_FETCH_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                fetchError: action.error,\n                projects: []\n            }\n    default:\n      return state\n  }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UPDATE_BRANCH } from '../../actions/project/Branch';\nimport { UPDATE_NOTEBOOK } from '../../actions/project/Notebook';\nimport {\n  PROJECT_ACTION_ERROR, PROJECT_FETCH_ERROR, RECEIVE_PROJECT,\n  RECEIVE_PROJECT_RESOURCE, REQUEST_PROJECT, REQUEST_PROJECT_ACTION,\n  UPDATE_PROJECT, UPDATE_RESOURCE, UPDATE_WORKFLOW\n} from '../../actions/project/Project';\n\n/**\n* Reducer for actions that retrieve the Vizier DB Web Service API descriptor.\n*/\n\n\n/**\n * STATE:\n *\n * actionError: Error while loading or updating a project resource\n * fetchError: Error while loading the project handle\n * isActive: Loading or updating a project resource is in progress\n * isFetching: Load of project handle in progress\n * project: The project handle\n * resource: A project resource object that has been loaded\n * workflow: Workflow handle\n */\n\nconst INITIAL_STATE = {\n    actionError: null,\n    branch: null,\n    fetchError: null,\n    isActive: false,\n    isFetching: false,\n    project: null,\n    resource: null\n}\n\nexport const projectPage = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case REQUEST_PROJECT:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case REQUEST_PROJECT_ACTION:\n            return {\n                ...state,\n                isActive: true\n            };\n        case PROJECT_FETCH_ERROR:\n            return {\n                ...state,\n                branch: null,\n                fetchError: action.error,\n                isFetching: false,\n                project: null\n            };\n        case PROJECT_ACTION_ERROR:\n            return {\n                ...state,\n                isActive: false,\n                isFetching: false,\n                actionError: action.error\n            };\n        case RECEIVE_PROJECT:\n            return {\n                ...state,\n                actionError: null,\n                branch: action.branch,\n                fetchError: null,\n                isActive: false,\n                isFetching: false,\n                project: action.project,\n                resource: null,\n                workflow: action.workflow\n            };\n        case RECEIVE_PROJECT_RESOURCE:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                resource: action.resource\n\n            };\n        case UPDATE_BRANCH:\n            return {\n                ...state,\n                branch: action.branch,\n                isActive: false,\n                project: action.project\n            };\n        case UPDATE_NOTEBOOK:\n            return {...state, actionError: null, isActive: false};\n        case UPDATE_PROJECT:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                project: action.project\n            };\n        case UPDATE_RESOURCE:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                resource: action.resource\n            };\n        case UPDATE_WORKFLOW:\n            return {\n                ...state,\n                actionError: null,\n                isActive: false,\n                resource: action.resource,\n                workflow: action.workflow\n            };\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Set of commands that are supported by the workflow engine which is associated\n * with a curation project. Each command represents a module specification that\n * can be used to define modules in a workflow (-> cells in a notebook). We\n * sometimes refer to a command specification as module.\n *\n * Each command specification belongs to a package and has an indentifier that\n * is unique in the package. In the registry we use the combination of package\n * identifier and command identifier as module (spec.) identifier.\n *\n * The module registry has the following main components:\n *\n * .module: Associative array that provides access to modules by their id.\n * .package: Associative array that provides access to module packages. Each\n *   package in turn is an list of modules in that package.\n * .types: List pf package identifier\n */\n\nimport { sortByName } from '../util/Sort';\nimport {formatBytes} from \"../util/App\";\n\n\n/**\n * Constants for supported datatypes of command parameters in the command\n * specifications that are included in the module registry that is obtained\n * from the API..\n */\n\nexport const DT_BOOL = 'bool';\nexport const DT_CODE = 'code';\nexport const DT_COLUMN_ID = 'colid';\nexport const DT_DATASET_ID = 'dataset';\nexport const DT_ARTIFACT_ID = 'artifact';\nexport const DT_DECIMAL = 'decimal';\nexport const DT_FILE_ID = 'fileid';\nexport const DT_INT = 'int';\nexport const DT_LIST = 'list';\nexport const DT_RECORD = 'record';\nexport const DT_ROW_INDEX = 'rowidx';\nexport const DT_ROW_ID = 'rowid';\nexport const DT_SCALAR = 'scalar';\nexport const DT_STRING = 'string';\nexport const DT_URL = 'url'\n\n/**\n * Declaration of a command in a workflow package. The command maintains a\n * nested list of parameter declarations based on the defined parent-child\n * relationships in the parameter list.\n *\n * The command declaration also maintains a reference to a top-level parameter\n * of type DT_CODE (if it exist). We currently assume that there is at most\n * one code parameter for a command declaration.\n */\nclass CommandDeclaration {\n    constructor(packageId) {\n        this.packageId = packageId;\n    }\n    fromJson(obj) {\n        this.id = obj.id;\n        this.name = obj.name;\n        this.description = obj.description;\n        this.suggest = obj.suggest;\n        // Sort parameters by identifier to ensure that they will be rendered\n        // in the correct order. Then convert the flat list of parameters\n        // into a nested list based on parent-child relationships\n        obj.parameters.sort((a, b) => (a.index - b.index));\n        this.parameters = nestCommandParameters(obj.parameters);\n        // Set the code parameter property for faster access when rendering\n        // notebook cells\n        this.codeParameter = this.parameters.find((p) => (p.datatype === DT_CODE));\n        // Do the same for the file id property\n        this.fileParameter = this.parameters.find((p) => (p.datatype === DT_FILE_ID));\n        return this;\n    }\n}\n\n\n/**\n * The package declaration contains the declarations for all commands in a\n * package of workflow modules.\n */\nclass PackageDeclaration {\n    fromJson(json) {\n        this.id = json.id;\n        this.name = json.name;\n        this.category = json.category;\n        // Maintain a list of all commands sorted by their name\n        this.elements = [];\n        this.commands = {};\n        for (let i = 0; i < json.commands.length; i++) {\n            const cmd = new CommandDeclaration(json.id).fromJson(json.commands[i]);\n            this.commands[cmd.id] = cmd;\n            this.elements.push(cmd);\n        }\n        // Sort the command listing by name\n        sortByName(this.elements);\n        return this;\n    }\n    /**\n     * Get a listing of all commands in the package.\n     */\n    toList() {\n        return this.elements;\n    }\n}\n\n\n/**\n * The package registry contains a list of all packages. Each package contains\n * a list of all commands in the package. The registry also maintains a package\n * index that enables access to a package by its identifier.\n */\nexport class PackageRegistry {\n    fromJson(json) {\n        // Maintain a list of all packages\n        this.elements = [];\n        // Maintain an index of packages where packages are accessible by their\n        // identifier\n        this.packages = {};\n        for (let i = 0; i < json.length; i++) {\n            const pckg = new PackageDeclaration().fromJson(json[i]);\n            this.packages[pckg.id] = pckg;\n            this.elements.push(pckg);\n        }\n        // Sort package list by package name\n        sortByName(this.elements);\n        return this;\n    }\n    /**\n     * Get the specification for a given command.\n     */\n    getCommandSpec(packageId, commandId) {\n    \tif(packageId && commandId){\n            return this.packages[packageId].commands[commandId];\n    \t}\n    \telse return {name:'Create'}\n    }\n    /**\n     * Get a listing of package declarations in the registry.\n     */\n    toList() {\n        return this.elements;\n    }\n}\n\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Convert form values for the gien command specification into a format that is\n * expected by the API.\n *\n * The API expects a list of arguments that are id-value pairs. For rows and\n * lists the argument value may be nested.\n *\n * Returns an object that contains the request and a\n * potentially empty list of error messages for form values that failed to\n * validate.\n */\nexport const formValuesToRequestData = (values, parameters, serviceProperties) => {\n    const result = {data: [], errors: []};\n    for (let i = 0; i < parameters.length; i++) {\n        const para = parameters[i];\n        let val = values[para.id];\n        if (para.datatype === DT_RECORD) {\n            if (val != null) {\n                const recordResult = formValuesToRequestData(\n                    val,\n                    para.parameters\n                );\n                result.data.push({id: para.id, value: recordResult.data});\n                recordResult.errors.forEach((err) => (result.errors.push(err)))\n            } else if (para.required) {\n                result.errors.push('Missing value for ' + para.name);\n            }\n        } else if (para.datatype === DT_LIST) {\n            if ((val != null) && (val.length > 0)) {\n                const rows = [];\n                for (let r = 0; r < val.length; r++) {\n                    const rowResult = formValuesToRequestData(\n                        val[r],\n                        para.parameters\n                    );\n                    rows.push(rowResult.data);\n                    rowResult.errors.forEach((err) => (result.errors.push(err)))\n                }\n                result.data.push({id: para.id, value: rows});\n            } else if (para.required) {\n                result.errors.push('Missing value for ' + para.name);\n            }\n        } else {\n            const dt = para.datatype;\n            if ((dt === DT_INT)) {\n                val = parseInt(val, 10);\n            } else if (dt === DT_DECIMAL) {\n                val = parseFloat(val);\n            }\n            validateArgument(val, para, result.errors, serviceProperties);\n            result.data.push({id: para.id, value: val});\n        }\n    }\n    return result;\n}\n\n\n/**\n * Returns the selected dataset if the command specification has a top-level\n * argument of type 'dataset' and the value in the module form for this\n * argument is set.\n */\nexport const getSelectedDataset = (commandSpec, values, datasets) => {\n    // If values is undefined we can return immediately\n    if (values == null) {\n        return null;\n    }\n    for (let i = 0; i < commandSpec.parameters.length; i++) {\n        const arg = commandSpec.parameters[i];\n        if (arg.datatype === DT_DATASET_ID) {\n            const val = values[arg.id];\n            if (val != null) {\n                for (let j = 0; j < datasets.length; j++) {\n                    const ds = datasets[j];\n                    if (ds.name === val) {\n                        return ds;\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n/**\n * Create a nested object of command parameters based on parent-child\n * relationships of parameters in a command declaration.\n */\nconst nestCommandParameters = (parameters, parent) => {\n    const result = [];\n    for (let i = 0; i < parameters.length; i++) {\n        const para = parameters[i];\n        if ((para.parent === parent) || ((para.parent == null) && (parent == null))) {\n            if ((para.datatype === DT_RECORD) || (para.datatype === DT_LIST)) {\n                // Add nested parameters property for records and lists\n                para.parameters = nestCommandParameters(parameters, para.id);\n            }\n            result.push(para);\n        }\n    }\n    return result;\n}\n\n\n/**\n * Set the values of all column identifier arguments to null. This reset is\n * necessary when the user selects a new top-level dataset in the command input\n * form.\n */\nexport const resetColumnIds = (values, parameterSpecs) => {\n    for (let i = 0; i < parameterSpecs.length; i++) {\n        const para = parameterSpecs[i];\n        if (para.datatype === DT_COLUMN_ID) {\n            values[para.id] = null;\n        } else if (para.datatype === DT_RECORD) {\n            resetColumnIds(values[para.id], para.parameters);\n        } else if (para.datatype === DT_LIST) {\n            const rows = values[para.id];\n            for (let r = 0; r < rows.length; r++) {\n                resetColumnIds(rows[r], para.parameters);\n            }\n        }\n    }\n}\n\n\n/**\n * Create an object containing default values for each parameter in a given\n * command specification. Initialize values from the given module arguments,\n * where possible.\n */\nexport const toFormValues = (parameters, datasets, moduleArgs) => {\n    const values = {};\n    for (let i = 0; i < parameters.length; i++) {\n        const para = parameters[i];\n        const arg = (moduleArgs != null) ? moduleArgs.find((a) => (a.id === para.id)) : null;\n        let val = null;\n        if (para.datatype === DT_RECORD) {\n            // Get a list of parameter specifications for the children of\n            // the given record.\n            const recordVal = (arg != null) ? arg.value : [];\n            val = toFormValues(para.parameters, datasets, recordVal);\n        } else if (para.datatype === DT_LIST) {\n            // The argument value is a list of lists (one for each record\n            // in the list)\n            val = [];\n            if (arg != null) {\n                for (let r = 0; r < arg.value.length; r++) {\n                    val.push(toFormValues(para.parameters, datasets, arg.value[r]));\n                }\n            }\n        } else {\n            // Get the value for the parameter. We first try to get the\n            // value from the respective element in the module arguments\n            // array. If the argument does not exist we try to get a default\n            // value from the optional values enumeration in the command\n            // specification.\n            if (arg != null) {\n                val = arg.value;\n            } else if (para.values != null) {\n                // By default the first value in the list is used as the\n                // default value.\n                val = para.values[0].value;\n                if (para.values[0].isDefault !== true) {\n                    for (let j = 1; j < para.values.length; j++) {\n                        const opt = para.values[j];\n                        if (opt.isDefault === true) {\n                            val = opt.value;\n                            break;\n                        }\n                    }\n                }\n            } else if (para.defaultValue != null) {\n                // A parameter may have an optional default value specified\n                val = para.defaultValue;\n            } else {\n                // If the value is still undefined we set it to a defined\n                // default.\n                if (para.datatype === DT_BOOL) {\n                    val = false;\n                } else if (para.datatype === DT_DATASET_ID) {\n                    val = (datasets.length > 0) ? datasets[0].name : '';\n                } else if (para.datatype === DT_FILE_ID) {\n                    val = {fileid: null, filename: null, url: null};\n                }\n            }\n        }\n        values[para.id] = val;\n    }\n    return values;\n}\n\n\n/**\n * Validate a single argument in a module command specification. Append all\n * error messages to a given list.\n */\nconst validateArgument = (value, paraSpec, errors, serviceProperties) => {\n    const name = paraSpec.name;\n    if ((value === null) && (paraSpec.required)) {\n        errors.push('Missing value for ' + name);\n    } else if ((value !== null) && (paraSpec.datatype === DT_FILE_ID)) {\n        // For source file arguments there needs to be a filename/file or\n        // url combination.\n        const { file, fileid, filename, url } = value;\n        if ((file != null) && (filename != null)) {\n            if(file[\"size\"]>serviceProperties.maxFileSize){\n                errors.push('Filesize exceeds maximum limit: ' + formatBytes(serviceProperties.maxFileSize, 2))\n            }\n        } else if ((fileid != null) && (filename != null)) {\n        } else if (url != null) {\n        } else {\n            errors.push('No file selected for ' + name);\n        }\n    } else if (value != null) {\n        if ((value === '') && (paraSpec.required)) {\n            errors.push('Missing value for ' + name);\n        } else {\n            const dt = paraSpec.datatype;\n            if ((dt === DT_INT) || (dt === DT_ROW_ID)) {\n                if (isNaN(value)) {\n                    errors.push('Expected integer value for ' + name);\n                }\n            } else if (dt === DT_DECIMAL) {\n                if (isNaN(value)) {\n                    errors.push('Expected decimal value for ' + name);\n                }\n            }\n        }\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n\tMODAL_AUTH, REQUEST_SERVICE, RECEIVE_SERVICE, SERVICE_ERROR, REQUEST_AUTH, RECEIVE_AUTH\n} from '../../actions/main/Service'\nimport { PackageRegistry } from '../../resources/Engine';\nimport { HATEOASReferences } from '../../util/HATEOAS'\n\n/**\n* Reducer for actions that retrieve the Vizier DB Web Service API descriptor.\n*/\n\n/**\n * STATE:\n *\n * engine: INformation about the backend engine and the supported commands\n * error: Error while fetching service descriptor\n * isFetchig: Flag indicating whether fetching is in progress\n * links: HATEOAS references in service descriptor\n * name: Service name\n * links: List of HATEOAS references [rel, href]\n * properties: List of service properties (e.g., max. upload file size)\n * refetch: Flag indicating whether the service descriptor needs to be re-fetched\n *          after the user entered authentication information.\n */\n\n const INITIAL_STATE = {\n     error: null,\n     engine: null,\n     isFetchig: true,\n     links: null,\n     name: null,\n     properties: null,\n     refetch: false\n }\n\n\nexport const serviceApi = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n    \tcase REQUEST_SERVICE:\n\t        return {\n\t          ...state,\n\t          isFetching: true\n\t        }\n\t    case RECEIVE_SERVICE:\n\t        return {\n\t          ...state,\n              engine: {\n                  backend: action.environment.backend,\n                  name: action.environment.name,\n                  packages: new PackageRegistry().fromJson(action.environment.packages),\n                  serviceProperties: action.properties\n              },\n              error: null,\n              isFetching: false,\n              links: new HATEOASReferences(action.links),\n\t          name: action.name,\n\t          properties: action.properties,\n\t          refetch: false\n\t        }\n        case SERVICE_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error\n            }\n        case REQUEST_AUTH:\n        \treturn {...state, showModal: MODAL_AUTH}\n        case RECEIVE_AUTH:\n        \treturn {\n                ...state,\n    \t        showModal:null,\n                isFetching: false,\n                error: null,\n                refetch: true\n        \t}\n\t    default:\n\t      return state\n  }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    PROJECT_ACTION_ERROR, RECEIVE_PROJECT_RESOURCE, UPDATE_WORKFLOW\n} from '../../actions/project/Project';\nimport {\n    SET_ANNOTATIONS, SUBMIT_UPDATE_REQUEST, UPDATE_DATASET_ANNOTATIONS\n} from '../../actions/project/Spreadsheet';\nimport { NoAnnotation } from '../../resources/Annotation';\n\n/**\n* Reducer for spreadsheet.\n*/\n\n\n/**\n * STATE:\n *\n * annotations: CellAnnotations for a dataset cell\n * dataset: DatasetHandle\n * isUpdating: Flag indicating whether update is in progress\n * opError: ErrorObject in case of an update error\n */\n\nconst INITIAL_STATE = {\n    annotations: new NoAnnotation(),\n    dataset: null,\n    isUpdating: false\n}\n\n\nexport const spreadsheet = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case RECEIVE_PROJECT_RESOURCE:\n        case UPDATE_WORKFLOW:\n            const resource = action.resource;\n            if (resource != null) {\n                if (resource.isDataset()) {\n                    return {\n                        ...state,\n                        dataset: resource.content,\n                        annotations: new NoAnnotation(),\n                        isUpdating: false\n                    }\n                }\n            }\n            return state;\n        case PROJECT_ACTION_ERROR:\n            return {...state, isUpdating: false};\n        case SET_ANNOTATIONS:\n            return {...state, annotations: action.annotations};\n        case SUBMIT_UPDATE_REQUEST:\n            return {...state, isUpdating: true};\n        case UPDATE_DATASET_ANNOTATIONS:\n            return {...state, dataset: action.dataset};\n        default:\n            return state\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport { app } from './main/App';\nimport { mainPage } from './main/MainPage';\nimport { branchPage } from './project/BranchPage';\nimport { spreadsheetPage } from './project/SpreadsheetPage';\nimport { datasetErrorsPage } from './project/DatasetCaveatsPage';\nimport { notebookPage } from './project/NotebookPage';\nimport { projectListing } from './project/ProjectListing';\nimport { projectPage} from './project/ProjectPage';\nimport { serviceApi } from './main/Service';\nimport { spreadsheet } from './spreadsheet/Spreadsheet';\n\nconst rootReducer = combineReducers({\n    app,\n    branchPage,\n    mainPage,\n    notebookPage,\n    spreadsheetPage,\n    datasetErrorsPage,\n    projectListing,\n    projectPage,\n    serviceApi,\n    spreadsheet,\n    router: routerReducer\n})\n\nexport default rootReducer\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\nimport '../../css/App.css';\n\n\n/**\n * Show a spinner to indicate that content is being loaded. The size property\n * allows to specify the loader size. Currently, only medium or small are\n * suppoerted (the default is massive).\n */\nclass ContentSpinner extends React.Component {\n    static propTypes = {\n        size: PropTypes.string,\n        text: PropTypes.string\n    }\n    render() {\n        const { size, text } = this.props;\n        // Default layout is massive\n        let cssClass = 'spinner-padding-ms';\n        let loaderSize = 'massive';\n        if (size === 'medium') {\n            cssClass = 'spinner-padding-lg';\n            loaderSize = 'medium';\n        } else if (size === 'small') {\n            cssClass = 'spinner-padding-md';\n            loaderSize = 'small';\n        }\n        return (\n            <div className={cssClass}>\n                <Loader inline active size={loaderSize}>\n                    {text}\n                </Loader>\n            </div>\n        );\n    }\n}\n\nexport default ContentSpinner;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport ContentSpinner from './ContentSpinner';\nimport { HATEOAS_API_DOC } from '../util/HATEOAS';\nimport '../../css/App.css';\nimport '../../css/Connection.css'\n\n\n/**\n * Component that continuously sends polling requests to the API and\n * dispatches the result to a given callback handler.\n *\n * Displays a cancel button to activate a given callback handler.\n *\n * https://stackoverflow.com/questions/46140764/polling-api-every-x-seconds-with-react\n */\nexport class ApiPolling extends React.Component {\n    static propTypes = {\n        interval: PropTypes.number.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onFetch: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired,\n        text: PropTypes.string.isRequired\n    }\n    /**\n     * Start a timer to call the provided fetch function at the specified\n     * interval.\n     */\n    componentDidMount() {\n        const { interval, onFetch, resource } = this.props;\n        this.timer = setInterval(() => (onFetch(resource)), interval);\n    }\n    /**\n     * Cancel the fetch timer.\n     */\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n    /**\n     * Show a spinner with a cancel button.\n     */\n    render() {\n        const { onCancel, text } = this.props;\n        return (\n            <div>\n                <ContentSpinner text={ text } size='small' />\n                <div className='centered'>\n                    <Button\n                        content='Cancel'\n                        negative\n                        title='Cancel active task'\n                        onClick={onCancel}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\n\n/**\n * Show Web Service API Connection info and documentation link.\n */\nexport class ConnectionInfo extends React.Component {\n    static propTypes = {\n        links: PropTypes.object.isRequired,\n        name: PropTypes.string.isRequired\n    }\n    render() {\n        const { name, links } = this.props;\n        const url = links.getSelf();\n        return (\n            <div className='connection-info'>\n                <pre className='connection-info'>\n                    {'Connected to '}{name}{' @ '}\n                    <a className=\"connection-link\" target='_blank' href={url}>\n                        {url}\n                    </a>\n                    <span className=\"docu-icon\">\n                        <a\n                            href={links.get(HATEOAS_API_DOC)}\n                            className='docu-icon'\n                            target='_blank'\n                        >\n                            <i className='fa fa-book'/>\n                        </a>\n                    </span>\n                </pre>\n            </div>\n        );\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Message } from 'semantic-ui-react'\n\n\n/**\n * Display an error message.\n */\nexport const ErrorMessage = ({title, message, onDismiss}) => (\n    <Message\n        negative\n        icon='warning sign'\n        header={title}\n        onDismiss={onDismiss}\n        content={message.charAt(0).toUpperCase() + message.slice(1)}\n    />\n);\n\n\n/**\n * Display a list of error messages in a single message frame.\n */\nexport const ErrorListMessage = ({title, errors, onDismiss}) => (\n    <Message\n        negative\n        icon='warning sign'\n        header={title}\n        list={errors}\n        onDismiss={onDismiss}\n    />\n);\n\n\n/**\n * Display an error message generated by a fetch request. Depending on whether\n * the error is due to an unknown resource (404) or not the error message will\n * differ.\n */\nexport const FetchError = ({error}) => {\n    if (error.is404()) {\n        return (\n            <div className='not-found'>\n                <NotFoundMessage message={error.message} />\n            </div>\n        )\n    } else {\n        return (<ErrorMessage\n            title={error.title}\n            message={error.message}\n        />)\n    }\n}\n\n\n/**\n * Display an warning message.\n */\nexport const WarningMessage = ({title, message, onDismiss}) => (\n    <Message\n        warning\n        icon='warning circle'\n        header={title}\n        onDismiss={onDismiss}\n        content={(message != null) ? ( message.charAt(0).toUpperCase() + message.slice(1) ) : \"Unknown Error\"}\n    />\n);\n\n\n/**\n * Display an warning message.\n */\nexport const NotFoundMessage = ({message}) => (\n    <Message\n        floating\n        icon='frown'\n        header='Ooops ... 404'\n        size='massive'\n        content={(message != null) ? ( message.charAt(0).toUpperCase() + message.slice(1) ) : \"Unknown Error\" }\n    />\n);\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Input } from 'semantic-ui-react'\nimport '../../../../../css/ResourceListing.css';\n\n/**\n* Checkbox for boolean input\n*/\n\nexport class TextInput extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        onKeyDown: PropTypes.func.isRequired,\n    }\n    render() {\n        const { value, onKeyDown, onChange } = this.props\n        return (\n            <Input\n\t\t        autoFocus\n\t            className=\"resource-name-input\"\n\t            value={value}\n\t            onChange={onChange}\n\t            onKeyDown={onKeyDown}\n\t\t    />\n        );\n    }\n}\n\n\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport { TextInput } from '../notebook/input/form/TextInput'\nimport '../../../css/ResourceListing.css'\n\n/**\n * Modal to input (or modify) the name of a resource. The optional isValid\n * function is used to check whether the entered value is valid or not.\n */\nclass EditResourceNameModal extends React.Component {\n    static propTypes = {\n        isValid: PropTypes.func,\n        prompt: PropTypes.string,\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        inputComponent: PropTypes.object\n    }\n    /**\n     * Keep the new resource name in the local state.\n     */\n    constructor(props) {\n        super(props)\n        let { value } = props;\n        if (value == null) {\n            value = '';\n        }\n        this.state = {value: value};\n    }\n    /**\n     * Make sure the clear the internal state value on cancel.\n     */\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        this.setState({value: ''});\n        onCancel();\n    }\n    /**\n     * Handle changes in the input control.\n     */\n    handleChange = (event) => {\n        const val = event.target.value\n        this.setState({value: val})\n    }\n    /**\n     * Handle ESC and RETURN to cancel or submit the name update request.\n     */\n    handleKeyDown = (event) => {\n        const { onCancel } = this.props;\n        if (event.keyCode === 13) {\n            this.handleSubmit();\n        } else if (event.keyCode === 27) {\n            onCancel();\n        }\n    }\n    /**\n     * Call the provided onSubmit with the entered name. Use the optional\n     * isValid function to check if the entered value is valid or not.\n     */\n    handleSubmit = (event) => {\n        const { isValid, onSubmit } = this.props;\n        let { value } = this.state\n        if(!value && this.props.value){\n        \tvalue = this.props.value\n        }\n        // Return without submit if invalid value is given.\n        if (isValid != null) {\n            if (!isValid(value)) {\n                return;\n            }\n        }\n        onSubmit(value);\n    }\n    /**\n     * Show simple modal with input text box.\n     */\n    render() {\n        const { isValid, prompt, open, title, inputComponent } = this.props;\n        let { value } = this.state;\n        let message = null;\n        if(!value && this.props.value){\n        \tvalue = this.props.value\n        }\n        if (prompt != null) {\n            message = (<p>{prompt}</p>);\n        }\n        let validName = true;\n        if (isValid != null) {\n            validName = isValid(value);\n        }\n        let Tag = 'TextInput'\n        let inputProps = {}\n        if(!inputComponent){\n        \tlet ic = <TextInput\n                id=\"EditResourceNameModal\"\n\t\t        value={value}\n\t            onChange={this.handleChange}\n\t            onKeyDown={this.handleKeyDown}\n\t\t    />\n        \tTag = ic.type;\n            inputProps = Object.assign(inputProps, ic.props);\n        }\n        else {\n            Tag = inputComponent.type;\n            inputProps = Object.assign(inputProps, inputComponent.props);\n            delete this.props.inputComponent;\n        }\n        return (\n            <Modal open={open} size={'small'}>\n                <Modal.Header>{title}</Modal.Header>\n                <Modal.Content>\n                    <div className=\"resource-name\">\n                        {message}\n                        <Tag {...inputProps} />\n                    </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  onClick={this.handleCancel}>Cancel</Button>\n                    <Button\n                        primary\n                        icon='checkmark'\n                        labelPosition='right'\n                        content='Submit'\n                        disabled={!validName}\n                        onClick={this.handleSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\n\nexport default EditResourceNameModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport 'font-awesome/css/font-awesome.css';\nimport '../../css/Button.css';\nimport { Divider, Icon } from 'semantic-ui-react'\n\n/**\n * Module containing a collection of different button comonents for the UI.\n */\n\n/**\n * Clickable icon button using Font Awesome icons.\n */\nexport const IconButton = ({name, onClick, title}) => (\n    <FontAwesome className=\"icon-button\" name={name} onClick={onClick} title={title}/>\n)\n\nIconButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\n\n/**\n * Clickable icon button using Font Awesome icons.\n */\nexport const CloseButton = ({name, onClick}) => (\n    <FontAwesome className=\"close-button\" name={name} onClick={onClick} />\n)\n\nCloseButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\n\nexport const LargeMessageButton = ({message, icon, css, onClick, title, caption, captionIcon}) => {\n\n    let mainMessage = <div>\n        <p className='lg-message'>{message}</p>\n        <p className='lg-button'>\n            <IconButton name={icon + ' fa-4x'} title={title} onClick={onClick}/>\n        </p>\n    </div>;\n\n    let captionMessage = caption !== null ? <div>\n        <Divider horizontal>\n            <p className='lg-button'>\n                <Icon size=\"big\" name={captionIcon} style={{margin:0}}/>\n            </p>\n        </Divider>\n        <p className='lg-message'>{caption}</p>\n    </div> : null;\n\n    return(<div>\n            <div className={css}>\n              {mainMessage}\n            </div>\n            {captionMessage}\n    </div>)\n};\n\nLargeMessageButton.propTypes = {\n    css: PropTypes.string,\n    icon: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    caption: PropTypes.string,\n    captionIcon: PropTypes.string\n};\n\n\n/**\n * Text button shows a clickable text.\n */\n\nexport class TextButton extends React.Component {\n    static propTypes = {\n        css: PropTypes.string,\n        text: PropTypes.string.isRequired,\n        title: PropTypes.string,\n        onClick: PropTypes.func.isRequired\n    }\n    render() {\n        const { css, text, title, onClick } = this.props;\n        let linkCss = null;\n        if (css != null) {\n            linkCss = css;\n        } else {\n            linkCss = 'icon-button';\n        }\n        return (\n            <a className={linkCss} title={title} onClick={onClick}>\n                {text}\n            </a>\n        );\n    }\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\n\n\n/**\n * Generic modal dialog to confirm deleting a resource object.\n */\n\nclass DeleteResourceModal extends React.Component {\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        prompt: PropTypes.string,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.object.isRequired\n    }\n    /**\n     * Call the given submit method with the given object.\n     */\n    handleSubmit = () => {\n        const { onSubmit, value } = this.props;\n        onSubmit(value);\n    }\n    /**\n     * Show simple confirm dialog.\n     */\n    render() {\n        const { prompt, open, onCancel, title } = this.props;\n        return (\n            <Modal open={open} basic size='small'>\n                <Header icon='trash' content={title} />\n                <Modal.Content>\n                    {prompt}\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button basic color='red' inverted onClick={onCancel}>\n                        <Icon name='remove' /> No\n                    </Button>\n                    <Button\n                        color='green'\n                        inverted\n                        onClick={this.handleSubmit}\n                    >\n                        <Icon name='checkmark' /> Yes\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nDeleteResourceModal.defaultProps = {\n    open: false\n}\n\nexport default DeleteResourceModal;\n","import _ from 'lodash'\nimport React from 'react'\nimport { Search } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\n\n/**\n * To return a search bar that filters results on the calling component\n * */\nexport default class SearchBar extends React.Component {\n    static defaultProps = {\n        aligned: 'right'\n    }\n\n    static propTypes = {\n        aligned: PropTypes.string,\n        projects: PropTypes.array.isRequired,\n        filterProjectListing: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.initialState = { isLoading: false, results: [], value: ''}\n        this.state = this.initialState\n        this.projects = this.addTitleFieldToProjects(this.props.projects)\n    }\n\n    addTitleFieldToProjects = (projects) => {\n        if(projects !== null && projects.length > 0){\n            const projectsClone = [...projects]\n            for (let i = 0; i < projectsClone.length; i++) {\n                projectsClone[i][\"title\"] = projectsClone[i][\"name\"]\n            }\n            return projectsClone\n        }\n        return []\n    }\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, value })\n\n        setTimeout(() => {\n            if (this.state.value.length < 1) {\n                this.setState(this.initialState)\n                return this.props.filterProjectListing(this.projects, value)\n            }\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n            const isMatch = (result) => re.test(result.title)\n            this.setState({\n                isLoading: false,\n                results: _.filter(this.projects, isMatch),\n            }, ()=> this.props.filterProjectListing(this.state.results))\n        }, 300)\n    }\n\n    render(){\n        const { isLoading, value, results } = this.state\n\n        return (\n            <div align={this.props.aligned}>\n                <Search\n                    aligned={this.props.aligned}\n                    loading={isLoading}\n                    onSearchChange={this.handleSearchChange}\n                    results={results}\n                    value={value}\n                    open={false}\n                    />\n            </div>)\n    }\n}","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Icon, Table } from 'semantic-ui-react'\nimport { clearProjectActionError, deleteProject, fetchProjects } from '../../actions/project/ProjectListing'\nimport { ErrorMessage } from '../../components/Message';\nimport DeleteResourceModal from '../../components/modals/DeleteResourceModal'\nimport ContentSpinner from '../../components/ContentSpinner'\nimport { notebookPageUrl } from '../../util/App.js';\n// For history to work this link was helpful. Does not seem to be required\n// for all components (?).\n// https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/api/withRouter.md\nimport { withRouter } from 'react-router';\nimport SearchBar from \"../../components/SearchBar\";\n\nimport '../../../css/ResourceListing.css'\n\n\nclass ProjectListing extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        fetchError: PropTypes.string,\n        fetchMessage: PropTypes.string.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        projects: PropTypes.array,\n        links: PropTypes.object\n    }\n    constructor(props) {\n        super(props);\n        // The local state keeps track of the project that the user intends to\n        // delete. If the value is non-null the delete modal for confirmation\n        // is shown.\n        this.state = {deleteProject: null, filteredProjects: this.props.projects}\n        // Load the project listing\n        const { dispatch } = this.props;\n        dispatch(fetchProjects());\n    }\n    componentWillReceiveProps({projects}){\n        this.setState({filteredProjects:projects})\n    }\n    /**\n     * Clear create or delete project error message.\n     */\n    clearActionError = () => {\n        const { dispatch } = this.props\n        dispatch(clearProjectActionError());\n    }\n    /**\n     * Delete the project with the given Url.Delete\n     */\n    confirmDeleteProject = (project) => {\n        const { dispatch } = this.props\n        dispatch(deleteProject(project))\n        this.hideModal()\n    }\n    /**\n     * Show page for a selected project.\n     */\n    handleShowProjectPage = (project) => {\n        const { history } = this.props;\n        history.push(notebookPageUrl(project.id, project.defaultBranch));\n    }\n    /**\n     * Hide all modals by setting the respective state variables to null..\n     */\n    hideModal = () => {\n        this.setState({deleteProject: null})\n    }\n    /**\n     * Display search bar filtered project listing\n     **/\n    filterProjectListing = (results) => {\n        this.setState({\n            filteredProjects: results\n        })\n    }\n    /**\n     * Show a list of existing projects and the Create Project form. Optional, a\n     * 'Delete Project' dialog is being displayed.\n     */\n    render() {\n        const {\n            actionError,\n            fetchError,\n            fetchMessage,\n            isFetching,\n            projects\n        } = this.props;\n        let content = null;\n        if (isFetching) {\n            content = <ContentSpinner text={fetchMessage}/>;\n        } else if (fetchError) {\n            content = (<ErrorMessage\n                title=\"Error while loading project list\"\n                message={fetchError}\n            />)\n        } else if (projects != null) {\n            const tabHead = (\n                    <Table.Row>\n                        <Table.HeaderCell className=\"resource\">Project</Table.HeaderCell>\n                        <Table.HeaderCell className=\"resource\">Created</Table.HeaderCell>\n                        <Table.HeaderCell className=\"resource\">Last modified</Table.HeaderCell>\n                        <Table.HeaderCell className=\"resource\"></Table.HeaderCell>\n                    </Table.Row>\n            );\n            let {filteredProjects} = this.state;\n            let rows = [];\n            for (let i = 0; i < filteredProjects.length; i++) {\n                const pj = filteredProjects[i];\n                rows.push(<Table.Row key={pj.id}>\n                    <Table.Cell className='resource'>\n                        <a\n                            className='resource-link'\n                            onClick={() => (this.handleShowProjectPage(pj))}\n                        >\n                            {pj.name}\n                        </a>\n                    </Table.Cell>\n                    <Table.Cell className='resource-text'>{pj.createdAt}</Table.Cell>\n                    <Table.Cell className='resource-text'>{pj.lastModifiedAt}</Table.Cell>\n                    <Table.Cell className='resource-buttons'>\n                        <span className='button-wrapper'>\n                            <Icon\n                            name=\"trash\"\n                            link\n                            onClick={() => (this.showDeleteProjectModal(pj))} />\n                        </span>\n                    </Table.Cell>\n                </Table.Row>);\n            }\n            const noResults = (\n                <Table.Row>\n                    <Table.Cell className='resource-text'>\n                        No Results Found!\n                    </Table.Cell>\n                </Table.Row>);\n            if (filteredProjects.length < 1){\n                rows.push(noResults)\n            }\n            // Check if deleteProject is set. In that case display a modal\n            // dialog for the user to either confirm (or cancel) project\n            // deletion.\n            const { deleteProject } = this.state\n            let modal = null;\n            if (deleteProject) {\n                modal = (\n                    <DeleteResourceModal\n                        open={true}\n                        prompt={'Do you really want to delete ' + deleteProject.name + '?'}\n                        title='Delete Project'\n                        value={deleteProject}\n                        onCancel={this.hideModal}\n                        onSubmit={this.confirmDeleteProject}\n                    />\n                );\n            }\n            // Display an error message generated while deleting or updating a\n            // project. The message is shown at the bottom of the project\n            // listing\n            let projectActionErrorMessage = null\n            if (actionError) {\n                projectActionErrorMessage = (<ErrorMessage\n                    title={actionError.title}\n                    message={actionError.message}\n                    onDismiss={this.clearActionError}\n                />)\n            }\n            const searchBar = (\n                    <SearchBar\n                        projects={projects}\n                        filterProjectListing={this.filterProjectListing}\n                    />)\n\n            content = (\n                <div>\n                    { projectActionErrorMessage }\n                    { searchBar }\n                    <Table singleLine>\n                        <Table.Header>{tabHead}</Table.Header>\n                        <Table.Body>{rows}</Table.Body>\n                    </Table>\n                    { modal }\n                </div>\n            );\n        }\n        return content;\n    }\n    /**\n     * Show modal to confirm project deletion.\n     */\n    showDeleteProjectModal = (project) => {\n        this.setState({deleteProject: project})\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectListing.actionError,\n        fetchError: state.projectListing.fetchError,\n        fetchMessage: state.projectListing.fetchMessage,\n        isFetching: state.projectListing.isFetching,\n        projects: state.projectListing.projects,\n        links: state.projectListing.links\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(ProjectListing))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    projectActionError, requestProjectAction, updateResource\n} from '../project/Project';\nimport { ChartResource } from '../../util/App';\nimport { fetchResource } from '../../util/Api';\n\n/**\n * Load a chart view from the Web API. On success, update the content of the\n * project page to show the loaded chart.\n *\n * Parameters:\n *\n * chart: ChartDescriptor\n *\n */\nexport const showChartView = (chart) => (dispatch) => {\n    dispatch(\n        fetchResource(\n            // Url\n            chart.links.self,\n            // Success handler\n            (json) => {\n                return dispatch(\n                    updateResource(new ChartResource(chart.name, json))\n                );\n            },\n            // Error handler\n            (message) => (projectActionError(\n                'Error loading dataset chart view', message\n            )),\n            // Set busy flag\n            requestProjectAction\n        )\n    )\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\n\n/**\n * Branches Menu: Contains a list of project branches (to switch) and edit\n * options for the currently selected branch.\n */\n\nclass BranchMenuDropdown extends React.Component {\n    static propTypes = {\n        branches: PropTypes.array.isRequired,\n        isMostRecent: PropTypes.bool.isRequired,\n        onCreateBranch: PropTypes.func,\n        onDelete: PropTypes.func.isRequired,\n        onEdit: PropTypes.func.isRequired,\n        onGetMostRecent: PropTypes.func.isRequired,\n        onSelect: PropTypes.func,\n        onShowHistory: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired,\n        selectedBranch: PropTypes.object.isRequired\n    }\n    /**\n     * Call the create branch callback without an argument to create a new\n     * branch at the end of the current notebook workflow.\n     */\n    handleCreateBranch = () => {\n        this.props.onCreateBranch();\n    }\n    render() {\n        const {\n            branches,\n            isMostRecent,\n            onCreateBranch,\n            onDelete,\n            onEdit,\n            onGetMostRecent,\n            onSelect,\n            onShowHistory,\n            resource,\n            selectedBranch\n        } = this.props;\n        // List of items in the dropdown menu\n        let branchItems = [];\n        // List project branches (only if there is more than one branch)\n        if (branches.length > 1) {\n            branchItems.push(<Dropdown.Divider key='divider'/>);\n            branchItems.push(<Dropdown.Header key='header' content='Switch Branch' />);\n            for (let i = 0; i < branches.length; i++) {\n                const br = branches[i];\n                let iconName;\n                if (br.id === selectedBranch.id) {\n                    iconName = 'checkmark box';\n                } else {\n                    iconName = 'square outline';\n                }\n                branchItems.push(\n                    <Dropdown.Item\n                        key={br.id}\n                        icon={iconName}\n                        active={br.id === selectedBranch.id}\n                        text={br.name}\n                        value={br.id}\n                        onClick={() => (onSelect(br))}\n                    />);\n            }\n        }\n        if (onCreateBranch != null) {\n            branchItems.push(<Dropdown.Divider key='divider-new'/>);\n            branchItems.push(<Dropdown.Item\n                    key='createBranch'\n                    icon='plus'\n                    text='New Branch ...'\n                    onClick={this.handleCreateBranch}\n                />);\n        }\n        branchItems.push(<Dropdown.Divider key='divider-tm'/>);\n        branchItems.push(<Dropdown.Header content='Time Machine' key='header-tm' />);\n        branchItems.push(<Dropdown.Item\n                key='history'\n                icon='history'\n                disabled={resource.isBranch()}\n                text='History'\n                onClick={onShowHistory}\n            />);\n        branchItems.push(<Dropdown.Item\n                key='mostRecent'\n                icon='play'\n                disabled={(!resource.isBranch()) && (isMostRecent)}\n                text='Latest Version'\n                onClick={onGetMostRecent}\n            />);\n        // Add option to create a new branch from the end of the current\n        // notebook (if the onCreateBranch callback is given).\n        return (\n            <Dropdown item text='Branches'>\n                <Dropdown.Menu>\n                    <Dropdown.Header key='onBranch' icon='fork' content={selectedBranch.name} />\n                    <Dropdown.Item\n                        key='edit'\n                        icon='edit'\n                        text='Rename'\n                        onClick={onEdit}\n                    />\n                    <Dropdown.Item\n                        key='delete'\n                        icon='trash'\n                        disabled={selectedBranch.isDefault}\n                        text='Delete'\n                        onClick={onDelete}\n                    />\n                    { branchItems }\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default BranchMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Menu } from 'semantic-ui-react';\n\n/**\n * Chart Menu: Contains a list of all active datasets in the selected dataset\n * chart views version.\n */\n\nclass ChartMenuDropdown extends React.Component {\n    static propTypes = {\n        charts: PropTypes.array.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired\n    }\n    /**\n     * Find the chart with the given name when the user clicks on a menu\n     * item. The call onSelect method to show the chart.\n     */\n    handleSelect = (e, {value}) => {\n        const { charts, onSelect } = this.props;\n        for (let i = 0; i < charts.length; i++) {\n            const chart = charts[i];\n            if (chart.name === value) {\n                onSelect(chart);\n                break;\n            }\n        }\n    }\n    render() {\n        const { charts, resource } = this.props;\n        // Show nothing if the list of charts is empty\n        if (charts.length === 0) {\n            return null;\n        } else if (charts.length === 1) {\n            const chart = charts[0];\n            const disabled = resource.isChart();\n            // Set onClick handler to null if disabled\n            let onClickHandler = null;\n            if (!disabled) {\n                onClickHandler = this.handleSelect;\n            }\n            return (\n                <Menu.Item\n                    key={chart.name}\n                    icon='bar chart'\n                    name={chart.name}\n                    value={chart.name}\n                    disabled={disabled}\n                    onClick={onClickHandler}\n                />\n            );\n        } else {\n            // List of charts. Keep track whether there are any selectable items.\n            // Otherwise, disable the menu entry.\n            let hasSelectableItems = false;\n            let menuItems = [];\n            for (let i = 0; i < charts.length; i++) {\n                const chart = charts[i];\n                let disabled = false;\n                if (resource.isChart()) {\n                    disabled = resource.content.name === chart.name;\n                }\n                if (!disabled) {\n                    hasSelectableItems = true;\n                }\n                menuItems.push(\n                    <Dropdown.Item\n                        key={chart.name}\n                        icon='bar chart'\n                        text={chart.name}\n                        value={chart.name}\n                        disabled={disabled}\n                        onClick={this.handleSelect}\n                    />\n                );\n            }\n            return (\n                <Dropdown item text='Chart' disabled={!hasSelectableItems}>\n                    <Dropdown.Menu>\n                        { menuItems }\n                    </Dropdown.Menu>\n                </Dropdown>\n            );\n        }\n    }\n}\n\nexport default ChartMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Menu } from 'semantic-ui-react';\n\n/**\n * Dataset Menu: Contains a list of all active datasets in the selected\n * workflow version.\n */\n\nclass DatasetMenuDropdown extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired\n    }\n    /**\n     * Find selected dataset and call onSelect handler.\n     */\n    handleSelect = (e, { value }) => {\n        const { datasets, onSelect } = this.props;\n        for (let i = 0; i < datasets.length; i++) {\n            const ds = datasets[i];\n            if (ds.name === value) {\n                onSelect(ds);\n                break;\n            }\n        }\n    }\n    render() {\n        const { datasets, resource } = this.props;\n        // Show nothing if the list of datasets is empty\n        if (datasets.length === 0) {\n            return null;\n        } else if (datasets.length === 1) {\n            const ds = datasets[0];\n            const disabled = resource.isDataset();\n            // Set onClick handler to null if disabled\n            let onClickHandler = null;\n            if (!disabled) {\n                onClickHandler = this.handleSelect;\n            }\n            return (\n                <Menu.Item\n                    key={ds.name}\n                    icon='table'\n                    name={ds.name}\n                    value={ds.name}\n                    disabled={disabled}\n                    onClick={onClickHandler}\n                />\n            );\n        } else {\n            // List of datasets. Keep track whether there are any selectable\n            // items. Otherwise, disable the menu entry.\n            let hasSelectableItems = false;\n            let menuItems = [];\n            for (let i = 0; i < datasets.length; i++) {\n                const ds = datasets[i];\n                let disabled = false;\n                if (resource.isDataset()) {\n                    disabled = resource.content.name === ds.name;\n                }\n                if (!disabled) {\n                    hasSelectableItems = true;\n                }\n                menuItems.push(\n                    <Dropdown.Item\n                        key={ds.name}\n                        icon='table'\n                        text={ds.name}\n                        value={ds.name}\n                        disabled={disabled}\n                        onClick={this.handleSelect}\n                    />\n                );\n            }\n            return (\n                <Dropdown item text='Dataset' disabled={!hasSelectableItems}>\n                    <Dropdown.Menu>\n                        { menuItems }\n                    </Dropdown.Menu>\n                </Dropdown>\n            );\n        }\n    }\n}\n\nexport default DatasetMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Menu } from 'semantic-ui-react';\n\n/**\n * Dataset Menu: Contains a list of all active datasets in the selected\n * workflow version.\n */\n\nclass DatasetCaveatMenuDropdown extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        resource: PropTypes.object.isRequired\n    }\n    /**\n     * Find selected dataset and call onSelect handler.\n     */\n    handleSelect = (e, { value }) => {\n        const { datasets, onSelect } = this.props;\n        for (let i = 0; i < datasets.length; i++) {\n            const ds = datasets[i];\n            if (ds.name === value) {\n                onSelect(ds);\n                break;\n            }\n        }\n    }\n    render() {\n        const { datasets, resource } = this.props;\n        // Show nothing if the list of datasets is empty\n        if (datasets.length === 0) {\n            return null;\n        } else if (datasets.length === 1) {\n            const ds = datasets[0];\n            const disabled = resource.isDatasetCaveat();\n            // Set onClick handler to null if disabled\n            let onClickHandler = null;\n            if (!disabled) {\n                onClickHandler = this.handleSelect;\n            }\n            return (\n                <Menu.Item\n                    key={ds.name}\n                    icon='warning sign'\n                    name={ds.name}\n                    value={ds.name}\n                    disabled={disabled}\n                    onClick={onClickHandler}\n                />\n            );\n        } else {\n            // List of datasets. Keep track whether there are any selectable\n            // items. Otherwise, disable the menu entry.\n            let hasSelectableItems = false;\n            let menuItems = [];\n            for (let i = 0; i < datasets.length; i++) {\n                const ds = datasets[i];\n                let disabled = false;\n                if (resource.isDatasetCaveat()) {\n                    disabled = resource.content.name === ds.name;\n                }\n                if (!disabled) {\n                    hasSelectableItems = true;\n                }\n                menuItems.push(\n                    <Dropdown.Item\n                        key={ds.name}\n                        icon='warning sign'\n                        text={ds.name}\n                        value={ds.name}\n                        disabled={disabled}\n                        onClick={this.handleSelect}\n                    />\n                );\n            }\n            return (\n                <Dropdown item text='Caveats' disabled={!hasSelectableItems}>\n                    <Dropdown.Menu>\n                        { menuItems }\n                    </Dropdown.Menu>\n                </Dropdown>\n            );\n        }\n    }\n}\n\nexport default DatasetCaveatMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\n\n/**\n * Project Menu: The only menu item is for renaming the project.\n */\n\nclass ProjectMenuDropdown extends React.Component {\n    static propTypes = {\n        onCreate: PropTypes.func.isRequired,\n        onImport: PropTypes.func.isRequired,\n        onDelete: PropTypes.func,\n        onEdit: PropTypes.func.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n    }\n    /**\n     * handle project export\n     */\n    handleExportProject = (project) => () => {\n    \twindow.open(project.links.getSelf() + \"/export\")\n    }\n    render() {\n        const {\n            onCreate,\n            onImport,\n            onDelete,\n            onEdit,\n            //onSelect,\n            project,\n            //projectList\n        } = this.props;\n        const menuItems = [];\n        // Show the current project name, the rename option and the delete\n        // option if there is a current project\n        if (project != null) {\n            menuItems.push(<Dropdown.Header\n                key='header1'\n                icon='database'\n                content={project.name} />\n            );\n            menuItems.push(<Dropdown.Item\n                key='edit'\n                icon='edit'\n                text='Rename'\n                title='Edit project name'\n                onClick={onEdit}\n            />);\n            menuItems.push(<Dropdown.Item\n                key='delete'\n                icon='trash'\n                text='Delete'\n                title='Delete the current project'\n                onClick={onDelete}\n            />);\n        }\n        // todo: add funcationality to display the latest 5 projects (issue 169)\n        // Show project listing only if the variable is set and contains more\n        // than one project\n        // if ((projectList != null) && (projectList.length > 1)) {\n        //     if (menuItems.length > 0) {\n        //         menuItems.push(<Dropdown.Divider key='div1'/>);\n        //         menuItems.push(<Dropdown.Header\n        //             key='header2'\n        //             content='Projects'\n        //         />);\n        //     }\n        //     for (let i = 0; i < projectList.length; i++) {\n        //         let pj = projectList[i];\n        //         menuItems.push(<Dropdown.Item\n        //             key={pj.id}\n        //             disabled={(project != null) && (pj.id === project.id)}\n        //             icon='database'\n        //             text={pj.name}\n        //             title={'Switch to project ' + pj.name}\n        //             onClick={() => (onSelect(pj))}\n        //         />);\n        //     }\n        // }\n        // Show the add project option at the bottom of the menu\n        if (menuItems.length > 0) {\n            menuItems.push(<Dropdown.Divider key='div2'/>);\n        }\n        menuItems.push(<Dropdown.Item\n            key='create'\n            icon='plus'\n            text='New Project ...'\n            title='Create a new project'\n            onClick={onCreate}\n        />);\n        menuItems.push(<Dropdown.Item\n            key='import'\n            icon='plus'\n            text='Import Project ...'\n            title='Import a project from a export file'\n            onClick={onImport}\n        />);\n        if ( project != null ){\n        \tmenuItems.push(<Dropdown.Item\n                    key='export'\n                    disabled={(project == null)}\n                    icon='database'\n                    text={'Export Project'}\n                    title={'Export current project'}\n                    onClick={this.handleExportProject(project)}\n                />);\n        }\n        return (\n            <Dropdown item text='Projects'>\n                <Dropdown.Menu>\n                    { menuItems }\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default ProjectMenuDropdown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport '../../../css/ResourceListing.css'\n\n/**\n * Modal to input (or modify) the name of a resource. The optional isValid\n * function is used to check whether the entered value is valid or not.\n */\nclass FileUploadModal extends React.Component {\n    static propTypes = {\n        prompt: PropTypes.string,\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.string\n    }\n    /**\n     * Keep the new resource name in the local state.\n     */\n    constructor(props) {\n        super(props)\n        \n        this.state = {file: null};\n    }\n    /**\n     * Make sure the clear the internal state value on cancel.\n     */\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        this.setState({file: null});\n        onCancel();\n    }\n    onChange = (e) => {\n        this.setState({file:e.target.files[0]})\n      }\n    /**\n     * Call the provided onSubmit with the entered name. Use the optional\n     * isValid function to check if the entered value is valid or not.\n     */\n    handleSubmit = (event) => {\n        const { onSubmit } = this.props;\n        const { file } = this.state\n        // Return without submit if invalid value is given.\n        if (file != null) {\n        \tonSubmit(file);\n        }\n        else \n        \treturn;\n    }\n    /**\n     * Show simple modal with input text box.\n     */\n    render() {\n        const { prompt, open, title } = this.props;\n        const { file } = this.state;\n        let message = null;\n        if (prompt != null) {\n            message = (<p>{prompt}</p>);\n        }\n        let validFile = file != null;\n        \n        return (\n            <Modal open={open} size={'small'}>\n                <Modal.Header>{title}</Modal.Header>\n                <Modal.Content>\n                    <div className=\"resource-name\">\n                        {message}\n                        <input type=\"file\" onChange={this.onChange} />\n                     </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  negative onClick={this.handleCancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        positive\n                        icon='checkmark'\n                        labelPosition='right'\n                        content=\"Done\"\n                        disabled={!validFile}\n                        onClick={this.handleSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nexport default FileUploadModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { DEFAULT_FILTERED_COMMANDS } from '../../util/Settings';\n\n\n/**\n * Dropdown menu for the global user preferences. The menu allow the user to\n * reverse the order of notebook cells and to define the filter for shown/\n * hidden notebook cells (based on the package and command).\n */\n\nclass SettingsMenuDropdown extends React.Component {\n    static propTypes = {\n        onHideCells: PropTypes.func.isRequired,\n        onReverse: PropTypes.func.isRequired,\n        onSetFilter: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired\n    }\n    render() {\n        const { onHideCells, onReverse, onSetFilter, userSettings } = this.props;\n        return (\n            <Dropdown item text='Settings'>\n                <Dropdown.Menu>\n                    <Dropdown.Header key='head1' content='Notebook cells in ...' />\n                    <Dropdown.Item\n                        disabled={!userSettings.showNotebookReversed()}\n                        key='defaultOrder'\n                        icon='sort numeric ascending'\n                        text='Default order'\n                        title='List notebook cells in default order (first cell shown first)'\n                        onClick={onReverse}\n                    />\n                    <Dropdown.Item\n                        key='reverseOrder'\n                        disabled={userSettings.showNotebookReversed()}\n                        icon='sort numeric descending'\n                        text='Reverse order'\n                        title='List notebook cells in reverse order (last cell shown first)'\n                        onClick={onReverse}\n                    />\n                    <Dropdown.Divider key='div1' />\n                    <Dropdown.Header key='head2' content='Filter Modules' />\n                    <Dropdown.Item\n                        key='showAll'\n                        icon='remove circle'\n                        text='Remove Filter'\n                        title={'Clear module filter to show all notebook cells'}\n                        onClick={() => (onSetFilter())}\n                    />\n                    <Dropdown.Item\n                        key='defaultFilter'\n                        icon='th'\n                        text='Filter VizUAL'\n                        title={'Filter VizUAL commands by default'}\n                        onClick={() => (onSetFilter(DEFAULT_FILTERED_COMMANDS))}\n                    />\n                    <Dropdown.Item\n                        disabled={true}\n                        key='filter'\n                        icon='filter'\n                        text='Customized Filter'\n                        title={'Show form to specify filter for all modules'}\n                    />\n                    <Dropdown.Divider key='div2' />\n                    <Dropdown.Header key='head3' content='Show Filtered Modules as ...' />\n                    <Dropdown.Item\n                        disabled={!userSettings.hideFilteredCommands()}\n                        key='collapse'\n                        icon='compress'\n                        text='Collapsed'\n                        title='Collapse cells that contain filtered modules'\n                        onClick={onHideCells}\n                    />\n                    <Dropdown.Item\n                        disabled={userSettings.hideFilteredCommands()}\n                        key='hide'\n                        icon='hide'\n                        text='Hidden'\n                        title='Hide cells that contain filtered modules'\n                        onClick={onHideCells}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default SettingsMenuDropdown;\n","export default __webpack_public_path__ + \"static/media/vizier_tiny.f23e05e5.svg\";","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, Menu } from 'semantic-ui-react';\nimport BranchMenuDropdown from './BranchMenuDropdown';\nimport ChartMenuDropdown from './ChartMenuDropdown';\nimport DatasetMenuDropdown from './DatasetMenuDropdown';\nimport DatasetCaveatMenuDropdown from './DatasetCaveatMenuDropdown';\n// import NotebookMenuDropdown from './NotebookMenuDropdown';\nimport ProjectMenuDropdown from './ProjectMenuDropdown';\nimport DeleteResourceModal from '../modals/DeleteResourceModal';\nimport EditResourceNameModal from '../modals/EditResourceNameModal';\nimport FileUploadModal from '../modals/FileUploadModal';\nimport SettingsMenuDropdown from './SettingsMenuDropdown';\nimport { isNotEmptyString } from '../../util/App';\nimport '../../../css/ResourceListing.css';\nimport '../../../css/ProjectPage.css';\n\nimport logo from '../../../img/vizier_tiny.svg';\n\n/**\n * Component that allows to select the current branch. In addition to switching\n * between branches the component allows to edit the branch name and to delete\n * selected branch.\n */\n\n/*\n * Identify the different types of modals that may be displayed.\n */\nconst MODAL_CREATE_PROJECT = 'MODAL_CREATE_PROJECT';\nconst MODAL_IMPORT_PROJECT = 'MODAL_IMPORT_PROJECT';\nconst MODAL_DELETE_BRANCH = 'MODAL_DELETE_BRANCH';\nconst MODAL_DELETE_PROJECT = 'MODAL_DELETE_PROJECT';\nconst MODAL_EDIT_BRANCH_NAME = 'MODAL_EDIT_BRANCH_NAME';\nconst MODAL_EDIT_PROJECT_NAME = 'MODAL_EDIT_PROJECT_NAME';\n\nclass AppMenu extends React.Component {\n    static propTypes = {\n        branch: PropTypes.object,\n        notebook: PropTypes.object,\n        onCreateBranch: PropTypes.func,\n        onCreateProject: PropTypes.func.isRequired,\n        onImportProject: PropTypes.func.isRequired,\n        onDeleteBranch: PropTypes.func,\n        onDeleteProject: PropTypes.func.isRequired,\n        onEditBranch: PropTypes.func.isRequired,\n        onEditProject: PropTypes.func.isRequired,\n        onGoHome: PropTypes.func.isRequired,\n        onHideCells: PropTypes.func.isRequired,\n        onReverse: PropTypes.func.isRequired,\n        onSetFilter: PropTypes.func.isRequired,\n        onShowChart: PropTypes.func.isRequired,\n        onShowDataset: PropTypes.func.isRequired,\n        onShowDatasetCaveat: PropTypes.func.isRequired,\n        onShowHistory: PropTypes.func.isRequired,\n        onShowNotebook: PropTypes.func,\n        onShowProject: PropTypes.func.isRequired,\n        onSwitchBranch: PropTypes.func,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        resource: PropTypes.object.isRequired,\n        userSettings: PropTypes.object.isRequired\n    }\n    /**\n     * Initialize internal state to keep track of any modal that may be shown.\n     */\n    constructor(props) {\n        super(props);\n        // No modal shown initially\n        this.state = {modal: null};\n    }\n    /**\n     * Submit request to delete the current branch.\n     */\n    handleDeleteCurrentBranch = (branch) => {\n        const { onDeleteBranch } = this.props;\n        onDeleteBranch(branch);\n        this.hideModal();\n    }\n    /**\n     * Hide the modal and delete the current project using the given callback\n     * handler.\n     */\n    handleDeleteProject = () => {\n        const { onDeleteProject, project } = this.props;\n        this.hideModal();\n        onDeleteProject(project);\n    }\n    /**\n     * Hide any open modal.\n     */\n    hideModal = () => (this.setState({modal: null}));\n    /**\n     * Depending on the edit flag either show the name or the edit name form.\n     */\n    render() {\n        const {\n            branch,\n            notebook,\n            onCreateBranch,\n            onCreateProject,\n            onImportProject,\n            onGoHome,\n            onHideCells,\n            onReverse,\n            onSetFilter,\n            onShowChart,\n            onShowDataset,\n            onShowDatasetCaveat,\n            onShowHistory,\n            onShowNotebook,\n            onShowProject,\n            onSwitchBranch,\n            project,\n            projectList,\n            resource,\n            userSettings\n        } = this.props;\n        // The basic layout contains a menu bar and an optional modal or error\n        // message.\n        // Start by generating the list of elements in the menu bar.\n        let menuItems = [];\n        // Show the project logo as the first element. If not on the main page\n        // have the logo be clickable to get to the homepage.\n        if (!resource.isMainPage()) {\n            menuItems.push(\n                <Menu.Item key='logo' header onClick={onGoHome}>\n                    <Image src={logo}/>\n                </Menu.Item>\n            );\n        } else {\n            menuItems.push(\n                <Menu.Item key='logo' header><Image src={logo} /></Menu.Item>\n            );\n        }\n        // Show the project name if the project is set\n        if (project != null) {\n            menuItems.push(<Menu.Item key='name' header>{project.name}</Menu.Item>);\n        }\n        menuItems.push(\n            <ProjectMenuDropdown\n                key='project'\n                onCreate={this.showCreateProjecthModal}\n            \tonImport={this.showImportProjecthModal}\n            \tonDelete={this.showDeleteProjectModal}\n                onEdit={this.showEditProjectNameModal}\n                onSelect={onShowProject}\n                project={project}\n                projectList={projectList}\n            />\n        );\n        if (resource != null) {\n            // Show the branch menu if the branch is given\n            if (branch != null) {\n                let isMostRecentEnabled = false;\n                if (notebook != null) {\n                    isMostRecentEnabled = notebook.readOnly;\n                }\n                menuItems.push(\n                    <BranchMenuDropdown\n                        key='branches'\n                        branches={project.branches}\n                        isMostRecent={!isMostRecentEnabled}\n                        onCreateBranch={onCreateBranch}\n                        onDelete={this.showDeleteBranchModal}\n                        onEdit={this.showEditBranchNameModal}\n                        onGetMostRecent={this.switchToBranchHead}\n                        onSelect={onSwitchBranch}\n                        onShowHistory={onShowHistory}\n                        resource={resource}\n                        selectedBranch={branch}\n                    />\n                );\n            }\n            // Depending on whether the resource is a notebook or not the\n            // notebook menue is changed. If the resource is not a notebook the\n            // menu item is a button that allows to show the notebook. If the\n            // resource is a notebook the menu is a dropdown that allows th user\n            // to select properties of how the notebook is displayed.\n            if (!resource.isMainPage()) {\n                    menuItems.push(\n                        <Menu.Item\n                            key='notebook'\n                            icon='file alternate outline' \n                            name='Notebook'\n                            disabled={resource.isNotebook()}\n                            onClick={onShowNotebook}\n                        />\n                    );\n                \n                if(notebook){\n                \tconst modulesCount = notebook.workflow.modules.length;\n\t                if (modulesCount > 0 && Object.keys(notebook.workflow.datasets).length > 0) {\n\t                \tconst datasets = Array.from(new Map(notebook.workflow.modules.flatMap(function(module, index) {\n\t                \t\tif(module.datasets){\n\t                \t\t\treturn module.datasets;\n\t                \t\t}\n\t                \t\telse {\n\t                \t\t\treturn [];\n\t                \t\t}\n\t                \t}).map(ds => [ds.name, ds])).values());\n\t                \tmenuItems.push(\n\t\t                    <DatasetMenuDropdown\n\t\t                        key='datasets'\n\t\t                        datasets={datasets}\n\t\t                        onSelect={onShowDataset}\n\t\t                        resource={resource}\n\t\t                    />\n\t\t                );\n\t\t                menuItems.push(\n\t\t                    <DatasetCaveatMenuDropdown\n\t\t                        key='errors'\n\t\t                        datasets={datasets}\n\t\t                        onSelect={onShowDatasetCaveat}\n\t\t                        resource={resource}\n\t\t                    />\n\t\t                );\n\t                }\n\t                if (notebook.workflow.charts) {\n\t\t                menuItems.push(\n\t\t                    <ChartMenuDropdown\n\t\t                        key='charts'\n\t\t                        charts={notebook.workflow.charts}\n\t\t                        onSelect={onShowChart}\n\t\t                        resource={resource}\n\t\t                    />\n\t\t                );\n\t                }\n\t            }\n            }\n        }\n        // Menu options to modify global user settings\n        menuItems.push(\n            <SettingsMenuDropdown\n                key='settings'\n                onHideCells={onHideCells}\n                onReverse={onReverse}\n                onSetFilter={onSetFilter}\n                userSettings={userSettings}\n            />);\n        let menuBar = (\n            <Menu fixed='top' >\n                { menuItems }\n            </Menu>\n        );\n        // Show optional modal or error message.\n        let optionalModalOrMessage = null;\n        const { modal } = this.state;\n        if (modal !== null) {\n            if (modal === MODAL_CREATE_PROJECT) {\n                optionalModalOrMessage = (<EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={true}\n                    prompt='Enter a name for the new project'\n                    title={'Create project'}\n                    onCancel={this.hideModal}\n                    onSubmit={onCreateProject}\n                />);\n            } else if (modal === MODAL_IMPORT_PROJECT) {\n                optionalModalOrMessage = (<FileUploadModal\n                        open={true}\n                        prompt='Select a project export file to import'\n                        title={'Import project'}\n                        onCancel={this.hideModal}\n                        onSubmit={onImportProject}\n                    />);\n            } else if ((modal === MODAL_DELETE_BRANCH) && (branch != null)) {\n                optionalModalOrMessage = (<DeleteResourceModal\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.handleDeleteCurrentBranch}\n                    prompt={'Do you really want to delete the branch ' + branch.name + '?'}\n                    title={'Delete branch'}\n                    value={branch}\n                />)\n            } else if ((modal === MODAL_DELETE_PROJECT) && (project != null)) {\n                optionalModalOrMessage = (<DeleteResourceModal\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.handleDeleteProject}\n                    prompt={'Do you really want to delete the project ' + project.name + '?'}\n                    title={'Delete project'}\n                    value={branch}\n                />)\n            } else if ((modal === MODAL_EDIT_PROJECT_NAME) && (project != null)) {\n                optionalModalOrMessage = (<EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.submitUpdateProjectName}\n                    title={'Edit project name'}\n                    value={project.name}\n                />)\n            } else if ((modal === MODAL_EDIT_BRANCH_NAME) && (branch != null)) {\n                optionalModalOrMessage = (<EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={true}\n                    onCancel={this.hideModal}\n                    onSubmit={this.submitUpdateBranchName}\n                    title={'Edit branch name'}\n                    value={branch.name}\n                />)\n            }\n        }\n        return (\n            <div className='project-menu'>\n                { menuBar }\n                { optionalModalOrMessage }\n            </div>\n        );\n    }\n    /**\n     * Show modal dialog to enter a new project name.\n     */\n    showCreateProjecthModal = () => (this.setState({modal: MODAL_CREATE_PROJECT }));\n    /**\n     * Show modal dialog to upload a project export.\n     */\n    showImportProjecthModal = () => (this.setState({modal: MODAL_IMPORT_PROJECT }));\n    /**\n     * Show modal dialog to confirm branch delete.\n     */\n    showDeleteBranchModal = () => (this.setState({modal: MODAL_DELETE_BRANCH }));\n    /**\n     * Show modal dialog to confirm project delete.\n     */\n    showDeleteProjectModal = () => (this.setState({modal: MODAL_DELETE_PROJECT }));\n    /**\n     * Show modal to edit the current branch name.\n     */\n    showEditBranchNameModal = () => (this.setState({modal: MODAL_EDIT_BRANCH_NAME }));\n    /**\n     * Show modal to edit the project name.\n     */\n    showEditProjectNameModal = () => (this.setState({modal: MODAL_EDIT_PROJECT_NAME }));\n    /**\n     * Submit change to current branch name.\n     */\n    submitUpdateBranchName = (name) => {\n        const { onEditBranch, branch } = this.props;\n        this.hideModal();\n        if (name.trim() !== branch.name) {\n            onEditBranch(name);\n        }\n    }\n    /**\n     * Submit change to project name.\n     */\n    submitUpdateProjectName = (name) => {\n        const { onEditProject, project } = this.props;\n        this.hideModal();\n        if (name.trim() !== project.name) {\n            onEditProject(name);\n        }\n    }\n    /**\n     * Show workflow at branch head when user wants to return to the head - previously 'Go Live'\n     */\n    switchToBranchHead = () => {\n        const { onShowNotebook } = this.props;\n        onShowNotebook();\n    }\n}\n\nexport default AppMenu;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport {  Grid, Loader, Modal } from 'semantic-ui-react';\nimport { showChartView } from '../actions/chart/Chart';\nimport { reverseOrder, setModuleFilter, toggleHideCells } from '../actions/main/App';\nimport { updateBranch } from '../actions/project/Branch';\nimport { dismissProjectActionError, updateProject } from '../actions/project/Project';\nimport { createProject, deleteProject, uploadProject } from '../actions/project/ProjectListing';\nimport { showSpreadsheet, showDatasetCaveat, repairDatasetCaveat } from '../actions/project/Spreadsheet';\nimport AppMenu from './menu/AppMenu';\nimport { ErrorMessage } from './Message';\nimport { baseHref, branchPageUrl, notebookPageUrl, spreadsheetPageUrl, errorListPageUrl, valueOrDefault } from '../util/App';\nimport { HATEOAS_PROJECTS_CREATE, HATEOAS_PROJECTS_IMPORT }  from '../util/HATEOAS';\nimport { isCellOutputRequest } from '../actions/project/Notebook';\n\nclass ResourcePage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        branch: PropTypes.object,\n        content: PropTypes.object.isRequired,\n        contentCss: PropTypes.string.isRequired,\n        dispatch: PropTypes.func.isRequired,\n        history: PropTypes.object.isRequired,\n        isActive: PropTypes.bool.isRequired,\n        notebook: PropTypes.object,\n        onCreateBranch: PropTypes.func,\n        onDeleteBranch: PropTypes.func,\n        onShowNotebook: PropTypes.func,\n        onSwitchBranch: PropTypes.func,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        resource: PropTypes.object.isRequired,\n        serviceApi: PropTypes.object.isRequired,\n        userSettings: PropTypes.object.isRequired\n    }\n    /**\n     * Dismiss resource error message.\n     */\n    dismissResourceError = () => {\n        const { dispatch } = this.props;\n        dispatch(dismissProjectActionError(null));\n    }\n    handleCreateProject = (name) => {\n        const { dispatch, history, serviceApi } = this.props;\n        const url = serviceApi.links.get(HATEOAS_PROJECTS_CREATE);\n        dispatch(createProject(url, name, history));\n    }\n    handleImportProject = (file) => {\n        const { dispatch, history, serviceApi } = this.props;\n        const url = serviceApi.links.get(HATEOAS_PROJECTS_IMPORT);\n        dispatch(uploadProject(url, file, history));\n    }\n    /**\n     * Handle the deletion of the given project and switch to the home page.\n     */\n    handleDeleteProject = (project) => {\n        const { dispatch, history } = this.props;\n        dispatch(deleteProject(project))\n        history.push(baseHref)\n    }\n    /**\n     * Switch to the main page when the user presses the home button in the\n     * application menu.\n     */\n    handleGoHome = () => {\n        this.props.history.push(baseHref);\n    }\n    /**\n     * Set the object that contains the filtered module identifier. Expects an\n     * object where the properties are package identifier and the values are\n     * lists of command identifier.\n     */\n    handleSetFilter = (filter) => {\n        this.props.dispatch(setModuleFilter(filter));\n    }\n    /**\n     * Show branch history page.\n     */\n    handleShowBranch = () => {\n        const { branch, history, project } = this.props;\n        history.push(branchPageUrl(project.id, branch.id));\n    }\n    /**\n     * Show given project.\n     */\n    handleShowProject = (project) => {\n        const { history } = this.props;\n        history.push(notebookPageUrl(project.id, project.defaultBranch));\n    }\n    /**\n     * Dispatch action to toggle the value of the reversed property in the\n     * user settings.\n     */\n    handleToggleHideCells = () => {\n        const { dispatch } = this.props;\n        dispatch(toggleHideCells());\n    }\n    /**\n     * Dispatch action to toggle the value of the reversed property in the\n     * user settings.\n     */\n    handleToggleNotebookReverse = () => {\n        const { dispatch } = this.props;\n        dispatch(reverseOrder());\n    }\n    /**\n     * Load a chart view and dispaly it as the project page resource content.\n     */\n    loadChartView = (chart) => {\n        const { dispatch } = this.props;\n        dispatch(showChartView(chart));\n    }\n    /**\n     * Switch to spreadsheet view and load the selected dataset.\n     */\n    loadDataset = (dataset) => {\n        const { dispatch, history, notebook, branch, project } = this.props;\n        notebook.datasets[dataset.id].name = dataset.name\n        dispatch(showSpreadsheet(notebook.datasets[dataset.id]));  \n        history.push(spreadsheetPageUrl(project.id, branch.id, dataset.id));\n    }\n    /**\n     * Switch to error view and load the selected dataset.\n     */\n    loadDatasetCaveat = (dataset) => {\n        const { dispatch, history, notebook, branch, project } = this.props;\n        const datasetAnnoUrl = notebook.datasets[dataset.id].links.getSelf()+'/annotations';\n        notebook.datasets[dataset.id].name = dataset.name\n         //dispatch(fetchAnnotations(dataset));\n        dispatch(showDatasetCaveat(notebook.datasets[dataset.id], datasetAnnoUrl));\n        history.push(errorListPageUrl(project.id, branch.id, dataset.id));\n    }\n    /**\n     * Switch to spreadsheet view and load the selected to the page\n     * that has the source of a specific error.\n     */\n    loadDatasetToError = (dataset) => (reason) => {\n    \tconst { dispatch, serviceApi } = this.props;\n    \tconst fetch_url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '?rowid='+reason.args[reason.rowidarg]\n        dispatch(showSpreadsheet(dataset, fetch_url));\n    }\n    /**\n     * Repair a specific error.\n     */\n    loadDatasetRepair = (dataset) => (reason, repair, acknowledge) => {\n        const { dispatch, serviceApi } = this.props;\n        const url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '/feedback'\n        dispatch(repairDatasetCaveat(dataset, url, reason, repair, acknowledge));\n    }\n    render() {\n        const {\n            actionError,\n            branch,\n            content,\n            contentCss,\n            notebook,\n            onCreateBranch,\n            onDeleteBranch,\n            onShowNotebook,\n            onSwitchBranch,\n            project,\n            projectList,\n            resource,\n            userSettings\n        } = this.props\n\n        // Set window title to contain project name\n        if (project != null) {\n            document.title = 'Vizier DB - ' + valueOrDefault(project.name, 'undefined');\n        } else {\n            document.title = 'Vizier DB - Projects';\n        }\n        // A resource error may be present independently of the project\n        // resource, i.e., due to resource fetch error (-> no resource) or\n        // resource update error (-> we have a resource)\n        let optionalError = null;\n        if (actionError != null) {\n            optionalError = <ErrorMessage\n                title={actionError.title}\n                message={actionError.message}\n                onDismiss={this.dismissResourceError}\n            />;\n        }\n        // Show a modal with a loader that overlays the full screen if\n        // the page content is currently being fetched: open={isActive}\n        let pageContent = (\n            <div>\n                <Modal dimmer={true} open={false}>\n                    <Loader size='large' active={true}>Update in progress ...</Loader>\n                </Modal>\n                { optionalError }\n                { content }\n            </div>\n        )\n        let headerContent = null;\n        let contentCssClass = '';\n        const cellOutput = isCellOutputRequest();\n        if(cellOutput){\n        \tcontentCssClass = '';\n        }\n        else{\n        \tcontentCssClass = contentCss;\n        \theaderContent = (\n        \t\t<Grid>\n\t\t            <Grid.Row>\n\t\t            <Grid.Column className='project-menu-bar'>\n\t\t            <AppMenu\n\t\t                branch={branch}\n\t\t                notebook={notebook}\n\t\t                onCreateBranch={onCreateBranch}\n\t\t                onCreateProject={this.handleCreateProject}\n\t\t            \tonImportProject={this.handleImportProject}\n\t\t            \tonDeleteBranch={onDeleteBranch}\n\t\t                onDeleteProject={this.handleDeleteProject}\n\t\t                onEditBranch={this.submitEditBranch}\n\t\t                onEditProject={this.submitEditProject}\n\t\t                onGoHome={this.handleGoHome}\n\t\t                onHideCells={this.handleToggleHideCells}\n\t\t                onReverse={this.handleToggleNotebookReverse}\n\t\t                onSetFilter={this.handleSetFilter}\n\t\t                onShowChart={this.loadChartView}\n\t\t                onShowDataset={this.loadDataset}\n\t\t                onShowDatasetCaveat={this.loadDatasetCaveat}\n\t\t                onShowHistory={this.handleShowBranch}\n\t\t                onShowNotebook={onShowNotebook}\n\t\t                onShowProject={this.handleShowProject}\n\t\t                onSwitchBranch={onSwitchBranch}\n\t\t                project={project}\n\t\t                projectList={projectList}\n\t\t                resource={resource}\n\t\t                userSettings={userSettings}\n\t\t            />\n\t\t            </Grid.Column>\n\t\t        </Grid.Row>\n\t\t    </Grid>\n\t\t    );\n        }\n        return (\n            <div>\n                { headerContent }\n                <div className={'page-content ' + contentCssClass}>\n                    { pageContent }\n                </div>\n            </div>\n        );\n    }\n    /**\n     * Submit request to update the name of the current branch.\n     */\n    submitEditBranch = (name) => {\n        const { dispatch, project, branch } = this.props;\n        dispatch(updateBranch(project, branch, name));\n    }\n    /**\n     * Submit request to update the name of the project.\n     */\n    submitEditProject = (name) => {\n        const { dispatch, project } = this.props;\n        dispatch(updateProject(project, name))\n    }\n}\n\nexport default withRouter(ResourcePage);\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Icon } from 'semantic-ui-react'\nimport { createProject } from '../../actions/project/ProjectListing'\nimport EditResourceNameModal from '../../components/modals/EditResourceNameModal';\nimport { LargeMessageButton } from '../../components/Button';\nimport { MainPageResource } from '../../util/App.js';\nimport ProjectListing from '../project/ProjectListing'\nimport ResourcePage from '../../components/ResourcePage';\nimport { isNotEmptyString, notebookPageUrl } from '../../util/App.js';\nimport { HATEOAS_PROJECTS_CREATE } from '../../util/HATEOAS';\nimport '../../../css/App.css'\nimport '../../../css/ResourceListing.css'\n\n\nclass MainPage extends Component {\n    static propTypes = {\n        homePageContent: PropTypes.string,\n        projects: PropTypes.array,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired\n    }\n    constructor(props) {\n        super(props);\n        // Flag indicating if the create modal is being shown.\n        this.state = {showModal: false};\n    }\n    /**\n     * Submit a create new project request. If the name is empty it is set to\n     * 'undefined' by default.\n     */\n    handleCreateProject = (name) => {\n        const { dispatch, history, serviceApi } = this.props;\n        const url = serviceApi.links.get(HATEOAS_PROJECTS_CREATE);\n        this.hideModal();\n        dispatch(createProject(url, name, history));\n    }\n    /**\n     * Show page for a selected project.\n     */\n    handleShowProjectPage = (project) => {\n        const { history } = this.props;\n        history.push(notebookPageUrl(project.id, project.defaultBranch));\n    }\n    /**\n     * Set the show modal flag to false;\n     */\n    hideModal = () => (this.setState({showModal: false}));\n    /**\n     */\n    render() {\n        const {\n            dispatch,\n            homePageContent,\n            projects,\n            serviceApi,\n            userSettings\n        } = this.props;\n        // Headline and optional description contained in the service descriptor\n        let headline = null;\n        let description = null;\n        if (homePageContent != null) {\n            headline  = homePageContent.headline;\n            description = homePageContent.description;\n        } else {\n            headline = (\n                <span>\n                    Vizier\n                    <span className='headline-small'>\n                        Streamlined Data Curation\n                    </span>\n                </span>\n            );\n        }\n        // If the list of project is empty show a message and button to add a\n        // new project.\n        let listingContent = null;\n        if ((projects != null) && (projects.length === 0)) {\n            listingContent = (\n                <div className='empty-list-message'>\n                    <LargeMessageButton\n                        message='Your project list is empty. Start by creating a new project.'\n                        icon='plus'\n                        onClick={this.showCreateProjectModal}\n                    />\n                </div>\n            );\n        } else {\n            listingContent = (\n                <div>\n                    <div className='project-listing'>\n                        <ProjectListing />\n                    </div>\n                    <Button\n                        icon\n                        labelPosition='left'\n                        size='tiny'\n                        positive\n                        onClick={this.showCreateProjectModal}\n                    >\n                      <Icon name='plus' /> New Project ...\n                    </Button>\n                </div>\n            );\n        }\n        const content = (\n            <div className='home-content'>\n                <h1 className='home-headline'>{headline}</h1>\n                { description }\n                { listingContent }\n                <EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={this.state.showModal}\n                    prompt='Enter a name for the new project'\n                    title={'Create project'}\n                    onCancel={this.hideModal}\n                    onSubmit={this.handleCreateProject}\n                />\n            </div>\n        );\n        return (\n            <ResourcePage\n                content={content}\n                contentCss='wide'\n                dispatch={dispatch}\n                isActive={false}\n                projectList={projects}\n                resource={MainPageResource()}\n                serviceApi={serviceApi}\n                userSettings={userSettings}\n            />\n        );\n    }\n    /**\n     * Show the create project modal.\n     */\n    showCreateProjectModal = () => (this.setState({showModal: true}));\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        homePageContent: state.mainPage.homePageContent,\n        projects: state.projectListing.projects,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(MainPage))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport {  Icon } from 'semantic-ui-react';\nimport { deleteBranch, fetchBranch } from '../../actions/project/Branch';\nimport { fetchProject, setBranch } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\nimport ResourcePage from '../../components/ResourcePage';\nimport { BranchResource } from '../../util/App';\nimport { branchPageUrl, notebookPageUrl } from '../../util/App.js';\n\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/BranchHistory.css';\n\n\n/**\n * The branch history page displays the list of workflow versions that form the\n * history of a project branch. For each version the action that created the\n * workflow is shown together with the time of creation. The user can select\n * any of the workflow versions and display them in a different page.\n *\n */\n\nclass BranchPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        workflows: PropTypes.array\n    }\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        const { branch, dispatch, project, projectList, workflows } = this.props;\n        // Get project and branch identifier from the URL\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        // Fetch any resources that are currently missing. It is assumed that\n        // the branch is set if the project is set.\n        dispatch(fetchProject(projectId, branchId, fetchBranch));\n        if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        } else if (workflows == null) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        }\n        // Get project listing if not set\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. It appears that when the user\n     * uses the back and previous button in the browser the current state and\n     * the previous state are the same but the branch identifier in the URL\n     * is different.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Check if the location path has changed. The change may either be\n        // the result from a delete branch operation or the result of the user\n        // usingthe back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(fetchProject(projectId, branchId, fetchBranch));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(fetchBranch(project, project.findBranch(branchId)));\n            }\n        }\n    }\n    /**\n     * Delete the given branch. Switch to the project default branch on success.\n     */\n    handleDeleteBranch = (branch) => {\n        const { dispatch, history, project } = this.props;\n        // The delete branch method will delete the branch on the server, update\n        // the project and push the URL of the default branch onto the history\n        // stack. This should trigger the component to render that branch.\n        dispatch(deleteBranch(project, branch, branchPageUrl, history));\n    }\n    /**\n     * Push URL for notebook page onto history stack. This will render a new\n     * component.\n     */\n    handleShowWorkflow = (workflow, isHead) => {\n        const { branch, history, project } = this.props;\n        let workflowId = null;\n        if ((!isHead) && (workflow != null)) {\n            workflowId = workflow.id;\n        }\n        history.push(notebookPageUrl(project.id, branch.id, workflowId));\n    }\n    /**\n     * Dispatch actions to switch to a given branch and load the branch history.\n     */\n    handleSwitchBranch = (branch) => {\n        const { dispatch, history, project } = this.props;\n        history.push(branchPageUrl(project.id, branch.id));\n        dispatch(setBranch(project, branch.id, fetchBranch));\n    }\n    /**\n     * The branch history is rendered as a table with five columns: (1) the\n     * workflow version identifier, (2) an icon containing a link to display\n     * the workflow version in a web page, (3) an icon depicting the type of\n     * action that created the workflow version (i.e., CREATE BRANCH,\n     * INSERT/APPEND MODULE, DELETE MODULE, or REPLACE MODULE), (4) the short\n     * form of the command specification that was used to define the module\n     * that was affected by the action, and (5) the time of creation.\n     */\n    render() {\n        const {\n            actionError,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            project,\n            projectList,\n            serviceApi,\n            userSettings,\n            workflows\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (workflows == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading History ...' />;\n        } else if (workflows != null) {\n            // The branch history has been fetched successfully. Show a table\n            // containing the different workflow versions.\n            const rows = [];\n            for (let i = 0; i < workflows.length; i++) {\n                const wf = workflows[i];\n                let icon = null;\n                let action = null;\n                let command = null;\n                let color = 'black';\n                if (wf.actionIsCreate()) {\n                    icon = 'fork';\n                    color = 'grey';\n                    action = 'Create branch';\n                } else {\n                    if (wf.actionIsDelete()) {\n                        icon = 'trash';\n                        color = 'red';\n                        action = 'Delete cell';\n                    } else if (wf.actionIsAppend()) {\n                        icon = 'add square';\n                        color = 'green';\n                        action = 'Append cell';\n                    } else if  (wf.actionIsInsert()) {\n                        icon = 'add circle';\n                        color = 'olive';\n                        action = 'Insert cell';\n                    } else if (wf.actionIsReplace()) {\n                        icon = 'pencil';\n                        color = 'blue';\n                        action = 'Replace cell';\n                    }\n                    command = serviceApi\n                        .engine\n                        .packages\n                        .getCommandSpec(wf.packageId, wf.commandId)\n                        .name;\n                }\n                const isHead = (i === workflows.length - 1);\n                rows.push(\n                    <tr key={wf.id}>\n                        <td className='workflow-nr'>{wf.id}</td>\n                        <td className='workflow-icon'>\n                            <Icon\n                                title='Show notebook'\n                                link name={'eye'}\n                                onClick={() => (this.handleShowWorkflow(wf, isHead))}\n                            />\n                        </td>\n                        <td className='workflow-icon'><Icon title={action} name={icon} color={color}/></td>\n                        <td className='workflow-command'>{command}</td>\n                        <td className='version-timestamp'>{wf.createdAt}</td>\n                    </tr>\n                )\n            }\n            const pageContent = (\n                <div className='branch-history'>\n                    <h1 className='branch-history'>\n                        {'Notebooks in Branch '}\n                        <span className='branch-highlight'>{branch.name}</span>\n                    </h1>\n                    <p className='info-text'>This is a list of all notebook versions in the history of\n                        the branch {branch.name}. Click on the&nbsp; <Icon name='eye' /> to display a notebook.\n                    </p>\n                    <table><tbody>{rows}</tbody></table>\n                </div>\n            );\n            // Show branch history table as the main content in a project\n            // resource page\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    onDeleteBranch={this.handleDeleteBranch}\n                    onShowNotebook={this.handleShowWorkflow}\n                    onSwitchBranch={this.handleSwitchBranch}\n                    project={project}\n                    projectList={projectList}\n                    resource={new BranchResource()}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                />\n            );\n        }\n        return content;\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        branch: state.projectPage.branch,\n        fetchError: state.branchPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.branchPage.isFetching,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        workflows: state.branchPage.workflows\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(BranchPage))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Button, Dropdown, Grid, Icon, Input, List, Loader, Modal, Message } from 'semantic-ui-react';\nimport { IconButton } from '../Button'\nimport '../../../css/Annotation.css';\nimport '../../../css/App.css';\n\nclass AnnotationObject extends React.Component {\n    static propTypes = {\n        annotation: PropTypes.object.isRequired,\n        onDelete: PropTypes.func,\n        onDiscard: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func\n    }\n    constructor(props) {\n        super(props);\n        this.keys = [\n            { key: 'user:comment', text: 'Comment', value: 'user:comment' },\n            { key: 'user:issue', text: 'Issue', value: 'user:issue' },\n        ];\n        this.state = {key: 'user:comment', value: '', selectedAnnotation: -1};\n    }\n    handleDelete = () => {\n        const { annotation, onDelete } = this.props;\n        const { selectedAnnotation } = this.state;\n        onDelete(annotation, selectedAnnotation);\n        // Make sure to clear the selected item\n        this.setState({selectedAnnotation: -1});\n    }\n    /**\n     * Handle changes in the form control element by updating the internal state.\n     */\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n    /**\n     * Clear the selected items and text input when closing the modal.\n     */\n    handleClose = () => {\n        const { onDiscard } = this.props;\n        this.setState({key: 'user:comment', value: '', selectedAnnotation: -1});\n        onDiscard()\n    }\n    /**\n     * Detect RETURN key press to submit form.\n     */\n    handleKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            this.handleSubmit();\n        }\n    }\n    handleSelectAnnotation = (e, { id }) => {\n        const { selectedAnnotation } = this.state;\n        if (selectedAnnotation === id) {\n            this.setState({selectedAnnotation: -1});\n        } else {\n            this.setState({selectedAnnotation: id});\n        }\n    }\n    handleSelectKey = (e, { value }) => {\n        this.setState({key: value});\n    }\n    handleSubmit = () => {\n        const { annotation, onSubmit } = this.props;\n        const { key, value } = this.state;\n        if (value.trim() !== '') {\n            onSubmit(annotation, key, value);\n        }\n        this.setState({value: '', selectedAnnotation: -1});\n    }\n    render() {\n        const { annotation, onDelete, onSubmit } = this.props;\n        const { selectedAnnotation } = this.state;\n        if (annotation.content != null) {\n            let content = null;\n            if (annotation.content.isFetching()) {\n                content = (<Loader active inline='centered' />);\n            } else if (annotation.content.isError()) {\n                content = (\n                    <Message negative\n                      header={annotation.content.title}\n                      content={annotation.content.message}\n                    />\n                );\n            } else {\n                if (annotation.content.items.length > 0) {\n                    const rows = [];\n                    for (let i = 0; i < annotation.content.items.length; i++) {\n                        const anno = annotation.content.items[i];\n                        let color = null;\n                        let icon = null;\n                        let title = null;\n                        if (anno.key === 'mimir:uncertain') {\n                            icon = 'warning sign';\n                            title = 'Mimir';\n                            color = 'yellow';\n                            anno.value = anno.message;\n                        } else if (anno.key === 'user:issue') {\n                            icon = 'info circle';\n                            title = 'Issue';\n                        } else {\n                            icon = 'comment alternate outline';\n                            title = 'Comment';\n                            anno.value = anno.message;\n                        }\n                        let cssSuffix = '';\n                        if ((anno.key === 'mimir:uncertain') || (onSubmit == null)) {\n                            cssSuffix = ' disabled';\n                        }\n                        let annoIcon = null;\n                        if ((onDelete != null) && (anno.key !== 'mimir:uncertain') && (anno.id === selectedAnnotation)) {\n                            annoIcon = (\n                                <Icon\n                                    name='trash'\n                                    size='large'\n                                    onClick={this.handleDelete}\n                                />\n                            );\n                            cssSuffix = ' delete';\n                        } else {\n                            annoIcon = (<Icon name={icon} size='large' color={color}/>);\n                        }\n                        rows.push(\n                            <tr key={i}>\n                                <td className={'list-icon' + cssSuffix}>\n                                    { annoIcon }\n                                </td>\n                                <td className={'list-text' + cssSuffix}>\n                                    <List relaxed>\n                                        <List.Item id={anno.id} onClick={this.handleSelectAnnotation}>\n                                          <List.Content>\n                                            <List.Header>{title}</List.Header>\n                                            <List.Description>\n                                                {anno.value}\n                                                </List.Description>\n                                          </List.Content>\n                                        </List.Item>\n                                    </List>\n                                </td>\n                            </tr>\n                        );\n                    }\n                    content = (\n                        <table className='annotations'><tbody>\n                            { rows }\n                        </tbody></table>\n                    );\n                } else {\n                    content = (\n                        <p className='info-text'>\n                            There are currently no annotations for this cell\n                        </p>\n                    );\n                }\n            }\n            let inputForm = null;\n            if (onSubmit != null) {\n                inputForm = (\n                    <Modal.Actions>\n                        <Input\n                            fluid\n                            label={<Dropdown\n                                defaultValue='user:comment'\n                                options={this.keys}\n                                onChange={this.handleSelectKey}\n                            />}\n                            action={<Button\n                                color='green'\n                                icon='plus'\n                                onClick={this.handleSubmit}\n                            />}\n                            placeholder='Add a new comment...'\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            onKeyDown={this.handleKeyDown}\n                        />\n                    </Modal.Actions>\n                );\n            }\n            return (\n                <Modal open={true} dimmer={'inverted'} size={'small'}>\n                    <Modal.Header>\n                        <Grid columns={2}>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    Cell Annotations\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <div className='header-button'>\n                                        <IconButton name=\"close\" onClick={this.handleClose}/>\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Modal.Header>\n                    <Modal.Content>\n                        { content }\n                    </Modal.Content>\n                    {inputForm}\n                </Modal>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default AnnotationObject;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Modal, Input, Label } from 'semantic-ui-react'\nimport '../../../css/Modals.css'\n\n\n/**\n* Modal to display a shareable link for a notebook version\n*/\nclass ShareLinkModal extends React.Component {\n    static propTypes = {\n        onClose: PropTypes.func.isRequired,\n        open: PropTypes.bool.isRequired,\n        url: PropTypes.string.isRequired,\n        copySupport: PropTypes.bool.isRequired\n    }\n\n    state = {\n        copySuccess: false\n    }\n\n    copyToClipboard = () => {\n        this.textInput.select();\n        document.execCommand('copy');\n        this.setState({copySuccess : true})\n    }\n\n    /**\n     * Show notebook cell content. There are four different layouts depending on\n     * the values of the isExpanded and hasModule flags. The general layout is\n     * two columns: the first column contain the cell index and the second\n     * column the cell module.\n     */\n    render() {\n        const { onClose, open, url, copySupport } = this.props;\n        return (\n            <Modal open={open} dimmer={'inverted'} size={'small'}>\n                <Modal.Header>Share Link</Modal.Header>\n                <Modal.Content>\n                    <div>\n                        <p className='share-header'>\n                            Copy link below to share this notebook version\n                        </p>\n                        { // ensure copying to clipboard is supported by the browser else just display the link\n                        \tcopySupport ?\n                            <Input\n                                fluid\n                                readOnly\n                                action={{\n                                    icon: \"copy\",\n                                    onClick: () => this.copyToClipboard(),\n                                    content: this.state.copySuccess ? \"Copied!\" : \"Copy\"\n                                }}\n                                value = {url}\n                                ref={ref=>this.textInput=ref}\n                            /> :\n                                <Label readOnly>\n                                    <a href={url} target=\"_blank\">{url}</a>\n                                </Label>\n                        }\n                    </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  primary onClick={onClose}>Done</Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nexport default ShareLinkModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon } from 'semantic-ui-react';\nimport ShareLinkModal from '../modals/ShareLinkModal'\nimport { notebookPageUrl } from '../../util/App'\nimport '../../../css/App.css'\nimport '../../../css/ProjectPage.css'\n\n\n/**\n * Display a status header for the current resource workflow. Shows the workflow\n * branch and shareable link.\n */\nclass NotebookStatusHeader extends Component {\n    static propTypes = {\n        branch: PropTypes.object.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onShowHistory: PropTypes.func.isRequired,\n        onSwitchBranch: PropTypes.func.isRequired,\n        project: PropTypes.object.isRequired,\n        copySupport: PropTypes.bool.isRequired \n    }\n    constructor(props) {\n        super(props);\n        this.state = {showModal: false};\n    }\n    /**\n     * Close the shareable link modal.\n     */\n    closeModal = () => (this.setState({showModal: false}));\n    /**\n     * Show information about the current workflow version and a button to\n     * display the shareable link modal.\n     */\n    render() {\n        const {\n            branch,\n            notebook,\n            onShowHistory,\n            onSwitchBranch,\n            project,\n            copySupport\n        } = this.props;\n        const { showModal } = this.state;\n        let extraContent = null;\n        if (notebook.readOnly) {\n            extraContent = (\n                <span>\n                    <span className='right-padding-sm'>{'at '}</span>\n                    <span className='info-date'>{notebook.createdAt}</span>\n                    <span className='padding-sm'>\n                        <span className='clickable-icon'>\n                            <Icon\n                                name='play'\n                                title='Latest Version'\n                                onClick={() => (onSwitchBranch(branch))}\n                            />\n                        </span>\n                    </span>\n                </span>\n            );\n        } else {\n            extraContent = (\n                <span className='padding-sm'>\n                    <span className='clickable-icon'>\n                        <Icon\n                            name='history'\n                            title='Show history'\n                            onClick={onShowHistory}\n                        />\n                    </span>\n                </span>\n            );\n        }\n\n        const isAuth = window.env.API_ADV_AUTH;\n        let url = window.location.protocol + '//' + window.location.host;\n        url += notebookPageUrl(project.id, branch.id, notebook.id);\n        if( isAuth ){\n        \turl =  window.location.protocol + '//' + window.location.host +'/auth/public?workflow-url=' + url\n        }\n\n        return (\n            <div className='notebook-header status-header'>\n                <span>{<Icon name='fork' />}</span>\n                <span>{'On branch '}</span>\n                <span className='right-padding-sm'>\n                    <span className='info-bold'>{branch.name}</span>\n                </span>\n                { extraContent }\n                <span className='clickable-icon'>\n                    <Icon\n                        name='linkify'\n                        title='Get shareable link to this notebook'\n                        onClick={this.openModal}\n                    />\n                </span>\n                <ShareLinkModal\n                    url={url}\n                    onClose={this.closeModal}\n                    open={showModal}\n                    copySupport={copySupport}\n                />\n            </div>\n        );\n    }\n    openModal = () => (this.setState({showModal: true}));\n}\n\nexport default NotebookStatusHeader;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Icon, List, Segment, Header } from 'semantic-ui-react'\nimport '../../../../css/Commands.css'\n\n\n/**\n * Display a listing of all available module specifications (commands) as user\n * can chose from in a new notebook cell.\n */\nclass CommandsListing extends React.Component {\n    static propTypes = {\n        apiEngine: PropTypes.object.isRequired,\n        onDismiss: PropTypes.func.isRequired,\n        onPaste: PropTypes.func,\n        onSelect: PropTypes.func.isRequired,\n    }\n    \n    groupBy = (arr, property)  => {\n    \t  return arr.reduce((cat, x) => {\n    \t    if (!cat[x[property]]) { cat[x[property]] = []; }\n    \t    cat[x[property]].push(x);\n    \t    return cat;\n    \t  }, {});\n    \t}\n\n    \t\n    render() {\n        const { apiEngine, onDismiss, onPaste, onSelect} = this.props;\n        // Get a list of command types\n        const gridColumns = [];\n        // Get list of packages. The list is sorted by package name by default.\n        const knownCategories = ['data_m','code','data_v','vizualization','default'];\n        const columnOrg = {'MIMIR':0,'DATA':1,'R':2,'SAMPLING':1,'SCALA':2,'SQL':2,'MARKDOWN':2,'PLOT':2,'PYTHON':2,'VIZUAL':3};\n        const packages = apiEngine.packages.toList();//.sort((c1, c2) => (knownCategories.indexOf(c1.category)-knownCategories.indexOf(c2.category)));\n        //const groupedPackages = this.groupBy(packages, 'category');\n        const groupedPackages = [[],[],[],[]];\n        for (let pckg of packages) {\n        \tlet colIdx = (pckg.name.toUpperCase() in columnOrg) ? columnOrg[pckg.name.toUpperCase()] : 1;\n        \tgroupedPackages[colIdx].push(pckg);\n        }\n        const sortedKeys = [0,1,2,3]//Object.keys(groupedPackages).sort((c1, c2) => (knownCategories.indexOf(c1)-knownCategories.indexOf(c2)))\n        //groupedPackages[knownCategories[i]]\n        let listItems = [];\n        for (const packageCategory of sortedKeys) {\n        \tlistItems = [];\n        \tconst catPackages = groupedPackages[packageCategory];\n\t        for (let pckg of catPackages) {\n\t            // Get list of package commands. Elements in the list are sorted by\n\t            // the command name by default.\n\t            const commands = pckg.toList();\n\t            listItems.push(\n\t                <List.Item key={pckg.id}>\n\t                    <List.Header>{pckg.name.toUpperCase()}</List.Header>\n\t                </List.Item>\n\t            );\n\t            for (let i = 0; i < commands.length; i++) {\n\t                const cmd = commands[i];\n                    let item = cmd.suggest ? <List.Item key={listItems.length} onClick={() => (onSelect(pckg.id, cmd.id))}>\n                        <List.Content>\n                            <List.Header as='a' className='suggested-action' icon>\n                                <Header.Content>\n                                    <Icon name={'star'} color={'yellow'}/>\n                                    { cmd.name }\n                                </Header.Content>\n                            </List.Header>\n                        </List.Content>\n                    </List.Item> : <List.Item key={listItems.length} onClick={() => (onSelect(pckg.id, cmd.id))}>\n                        <List.Content>\n                            <List.Header as='a'>{'  ' + cmd.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                    listItems.push(item)\n\t            }\n\t        }\n\t        gridColumns.push(\n                    <Grid.Column className={packageCategory} width={4} key={gridColumns.length}>\n                        <List link>\n                            { listItems }\n                        </List>\n                    </Grid.Column>\n                );\n        }\n        // Show a paste command button in the title if the onPaste callback is\n        // given.\n        let title = null;\n        if (onPaste != null) {\n            title = (\n                <div>\n                    {'Select a module from the list below or paste '}\n                    <Icon\n                        name='paste'\n                        link\n                        onClick={onPaste}\n                        title='Paste from clipboard'\n                    />\n                    {'from clipboard.'}\n                </div>\n            );\n        } else {\n            title = 'Select a module from the list below.'\n        }\n        return (\n            <div className='commands-listing'>\n                <Segment>\n                    <div className='commands-listing-header'>\n                        { title }\n                        <span className='pull-right clickable-icon'>\n                            <Icon\n                                name='close'\n                                link\n                                onClick={onDismiss}\n                            />\n                        </span>\n                    </div>\n                    <Grid columns={packages.length} divided>\n                        <Grid.Row>\n                            { gridColumns }\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nexport default CommandsListing;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/mode/r/r';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\nimport '../../../../../css/CodeHighlight.css';\nimport Highlight from 'react-highlight'\n\nclass CodeCell extends React.Component {\n    static propTypes = {\n        cursorPosition: PropTypes.object.isRequired,\n        id: PropTypes.string.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        language: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        onCursor: PropTypes.func.isRequired,\n        onFocus: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        locked: PropTypes.bool\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1) {\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete') {\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n        let cursorPos = editor.getCursor();\n        this.props.onCursor(cursorPos);\n    }\n    \n    /**\n     * Handle keymap for codemirror to replace tab key with spaces\n     */\n    tabReplace = (cm) => {\n\t    const spaces = Array(cm.getOption(\"indentUnit\") + 1).join(\" \");\n\t    cm.replaceSelection(spaces);\n\t  }\n    \n    /**\n     * Handle click for inactive cell to map click to cursor position in codemirror\n     */\n    onClickInactiveCodeCell = (event) => {\n    \t const {\n             onFocus,\n             onCursor\n         } = this.props;\n         let div = document.getElementById(\"empxCalc\");\n         div.style.height = '1em';\n         const lineHeightInPx = div.offsetHeight * 1.4285;//because lineheight is 1.4285em\n         const chWidthInPx = div.offsetHeight / 1.6585;//because font size is 1em\n         const transCY = event.nativeEvent.layerY;\n         const transCX = event.nativeEvent.layerX;\n         const lineNo = (transCY/lineHeightInPx)\n         const lineSkew = lineNo * 0.03448; \n         let cursorPos = { line:Math.round(lineNo+lineSkew) , ch:Math.round(transCX/chWidthInPx)-1, sticky:\"before\", xRel: 0};\n         onFocus();\n         onCursor(cursorPos);\n\t  }\n    \n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const {\n            cursorPosition,\n            isActiveCell,\n            language,\n            onFocus,\n            readOnly,\n            value,\n            locked\n        } = this.props;\n        // The editor mode and the shown code snippet selector depends on the\n        // value of the language property. By now we support the following\n        // three languages: Python, Scala, SQL. It would be nice to have a more\n        // comprehensive mapping of language identifier to CodeMirror modes.\n        let mode = null;\n        if (language === 'python') {\n            mode = 'python';\n        } else if (language === 'scala') {\n            mode = 'text/x-scala';\n        } else if (language === 'r') {\n            mode = 'text/x-rsrc';\n        } else if (language === 'sql') {\n            mode = 'text/x-sql';\n        } else if (language === 'markdown') {\n            mode = 'markdown';\n        }\n        let codeEditor = null;\n        if(isActiveCell){\n        \tif(locked){\n        \t\tcodeEditor = <div className='editor-container'>{'Code Cell'}</div>\n        \t}\n        \telse{\n\t        \tcodeEditor = <div className='editor-container'>\n\t\t        \t<CodeMirror\n\t\t\t            value={value}\n\t\t\t            cursor={cursorPosition}\n\t\t\t            options={{\n\t\t\t                autofocus: isActiveCell,\n\t\t\t                lineNumbers: true,\n\t\t\t                mode: mode,\n\t\t\t                indentUnit: 4,\n\t\t\t                readOnly: ((!isActiveCell) || readOnly) ,\n\t\t\t                dragDrop: false,\n\t\t\t                extraKeys: { Tab: this.tabReplace }\n\t\t\t            }}\n\t\t\t            onBeforeChange={(editor, data, value) => {\n\t\t\t                this.handleChange(editor, value, data);\n\t\t\t            }}\n\t\t\t        \tonCursor={(editor, data) => {\n\t\t\t        \t\tthis.handleCursorActivity(editor, data)\n\t\t\t        \t}}\n\t\t\t            onFocus={onFocus}\n\t\t\t        />\n\t\t         </div>\n        \t}\n        }\n        else {\n        \tif(locked){\n        \t\tcodeEditor = <div className='editor-container'>{'Code Cell'}</div>\n        \t}\n        \telse{\n        \t\tif(!(language === 'markdown')){\n        \t      codeEditor = \n\t        \t    <div \n\t        \t      className='editor-container'\n\t        \t      onClick={this.onClickInactiveCodeCell} >\n\t\t        \t\t<Highlight className={ language }>\n\t\t        \t\t  { value }\n\t\t        \t\t</Highlight>\n\t\t            </div>\n\t            }\n        \t}\n        }\n        return (<div>\n        \t\t  <div id=\"empxCalc\" className=\"empxCalc\"></div>\n        \t\t  { codeEditor }\n        \t\t</div>);\n    }\n}\n\nexport default CodeCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\n\n\n/**\n * Simple text control to input a string.\n */\nclass TextControl extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        placeholder: PropTypes.string.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]),\n        onChange: PropTypes.func.isRequired\n    }\n    /**\n     * Change handler for text control. Update the state of the control in the\n     * component that maintains the state of the form that contains this text\n     * control.\n     */\n    handleChange = (event, { value }) => {\n        const { id, onChange } = this.props\n        onChange(id, value)\n    }\n    render() {\n        const { placeholder, value } = this.props;\n        // Get a string representation of the cell value. The value could be a\n        // number, boolean, string or null.\n        let strValue = null;\n        if (value == null) {\n            strValue = '';\n        } else {\n            strValue = value.toString();\n        }\n        return (\n            <Form.Input\n                placeholder={placeholder}\n                fluid\n                value={strValue}\n                onChange={this.handleChange}\n            />\n        );\n    }\n}\n\nexport default TextControl\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Checkbox } from 'semantic-ui-react'\nimport '../../../../../css/ModuleForm.css';\n\n/**\n* Checkbox for boolean input\n*/\n\nclass BoolInput extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.bool,\n        onChange: PropTypes.func.isRequired\n    }\n    handleChange = (e, { checked }) => {\n        const { id, onChange } = this.props\n        onChange(id, checked)\n    }\n    render() {\n        const { value } = this.props\n        return (\n            <span className='boolctrl'>\n                <Checkbox checked={value === undefined ? false : value} onChange={this.handleChange}/>\n            </span>\n        );\n    }\n}\n/*<Form.Checkbox\n    checked={value}\n    onChange={this.handleChange}\n/>*/\n\nexport default BoolInput\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n/**\n* Selector component for datasets.\n*/\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Convert column index into spreadsheet column label (letter).\n * Copied from:\n * https://stackoverflow.com/questions/21229180/convert-column-index-into-corresponding-column-letter\n *\n */\nconst COLUMN_2_LETTER = (column) => {\n    let temp, letter = '';\n    while (column > 0) {\n        temp = (column - 1) % 26;\n        letter = String.fromCharCode(temp + 65) + letter;\n        column = (column - temp - 1) / 26;\n    }\n    return letter;\n}\n\n\nclass ColumnSelector extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object,\n        id: PropTypes.string.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]),\n        onChange: PropTypes.func.isRequired,\n    }\n    handleChange = (e, { value }) => {\n        const { id, onChange } = this.props\n        onChange(id, value)\n    }\n    render() {\n        const { dataset, isRequired, value } = this.props\n        let options = [];\n        if (dataset != null) {\n            if (!isRequired) {\n                // Add entry to set value to empty if not required\n                options.push({\n                    key: '',\n                    text: '<none>',\n                    value: ''\n                })\n            }\n            for (let i = 0; i < dataset.columns.length; i++) {\n                const column = dataset.columns[i];\n                let name = '';\n                if (column.name !== '') {\n                    name = column.name;\n                } else {\n                    name = COLUMN_2_LETTER(i + 1);\n                }\n                options.push({\n                    key: column.id,\n                    text: name,\n                    value: column.id\n                })\n            }\n        }\n        return (\n            <Dropdown\n                value={value}\n                selection\n                fluid\n                scrolling\n                options={options}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nexport default ColumnSelector;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport ModuleFormControl from './ModuleFormControl';\nimport { toFormValues } from '../../../../resources/Engine';\nimport '../../../../../css/Notebook.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n// -----------------------------------------------------------------------------\n// Local helper functions\n// -----------------------------------------------------------------------------\n\n/**\n * A group of control elements. Allows user to insert a set of tuples.\n *\n * Expects a value which is a pair of .values and .tuplels. The .values element\n * is an object with a single entry per element in the group. The .tuples\n * element is an array of tuples, each representing a complete group element.\n *\n * TODO: Checking of valid arguments is also not implementd yet.\n */\nclass ControlGroup extends React.Component {\n    static propTypes = {\n        controlSpec: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        selectedDataset: PropTypes.object,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.array.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, controlSpec, datasets } = this.props;\n        const newRow = toFormValues(controlSpec.parameters, datasets, null, id)\n        this.state = ({addTuple: newRow});\n    }\n    /**\n     * Add the current values in the form controls as a tuple to the list of\n     * argument values.\n     */\n    handleAdd = (childId, childValue) => {\n        const { id, controlSpec, datasets, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value\n        const rows = []\n        for (let i = 0; i < formValue.length; i++) {\n            rows.push(formValue[i])\n        }\n        // Add a new row of default values to the modified row list\n        let newRow = toFormValues(controlSpec.parameters, datasets, null, id)\n        let blankRow = toFormValues(controlSpec.parameters, datasets, null, id)\n        this.setState({addTuple: blankRow});\n        newRow[childId] = childValue\n        rows.push(newRow);\n        onChange(id, rows);\n    }\n    /**\n     * Handle change in any of the group's input controls.\n     */\n    handleChange = (rowIdx, name, value) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the form values where the value of the tuple that\n        // is isentified by the row index is modified\n        const rows = [];\n        for (let i = 0; i < formValue.length; i++) {\n            if ((i === rowIdx) || (value === null)) {\n                const row = {...formValue[i]};\n                row[name] = value;\n                rows.push(row);\n            } else {\n                rows.push(formValue[i])\n            }\n        }\n        onChange(id, rows);\n    }\n    /**\n     * Remove an existing tuple from the list of argument values.\n     */\n    handleDelete = (e, { value }) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value that does not contain the\n        // row that is currently at position value\n        const rows = []\n        for (let i = 0; i < formValue.length; i++) {\n            if (i !== value) {\n                rows.push(formValue[i])\n            }\n            else {\n            \tthis.setState({addTuple: ''});//formValue[i]});\n            }\n        }\n        onChange(id, rows);\n    }\n    /**\n     * Move the row at the given position (value) one position down in the form\n     * value list.\n     */\n    handleMoveDown = (e, { value }) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value\n        const rows = [];\n        let row = null;\n        for (let i = 0; i < formValue.length; i++) {\n            if (i === value) {\n                row = formValue[i];\n            } else {\n                rows.push(formValue[i]);\n                if (i === (value + 1)) {\n                    rows.push(row);\n                }\n            }\n        }\n        onChange(id, rows);\n    }\n    /**\n     * Move the row at the given position (value) one position up in the form\n     * value list.\n     */\n    handleMoveUp = (e, { value }) => {\n        const { id, onChange } = this.props;\n        const formValue = this.props.value;\n        // Make a copy of the current form value\n        const rows = [];\n        let row = null;\n        for (let i = 0; i < formValue.length; i++) {\n            if (i === (value - 1)) {\n                row = formValue[i];\n            } else {\n                rows.push(formValue[i]);\n                if (i === value) {\n                    rows.push(row);\n                }\n            }\n        }\n        onChange(id, rows);\n    }\n    render() {\n        const {\n            controlSpec,\n            datasets,\n            artifacts,\n            id,\n            selectedDataset,\n            serviceProperties,\n            value\n        } = this.props;\n        const rows = [];\n        // Stat by generating the header for the elements in the control group.\n        const formLabels = [];\n        for (let i = 0; i < controlSpec.parameters.length; i++) {\n            const child = controlSpec.parameters[i]\n            formLabels.push(\n                <td key={'th_ctrl' + i} className='inner-form-header'>\n                    {child.name}\n                </td>\n            );\n        }\n        // Add columns for controll buttons\n        formLabels.push(<td key={'th_btn1'} className='inner-form-header'></td>);\n        formLabels.push(<td key={'th_btn2'} className='inner-form-header'></td>);\n        formLabels.push(<td key={'th_btn3'} className='inner-form-header'></td>);\n        rows.push(<tr key='header'>{formLabels}</tr>);\n        // Add a row of controls for each row in the form\n        for (let t = 0; t < value.length; t++) {\n            let tuple = value[t];\n            const key = 'r_' + t + '_' + id;\n            const rowControls = [];\n            for (let c = 0; c < controlSpec.parameters.length; c++) {\n                const child = controlSpec.parameters[c]\n                rowControls.push(\n                    <td key={key + '_ctrl_' + child.id} className='inner-form-control'>\n                        <ModuleFormControl\n                            key={child.id}\n                            controlSpec={child}\n                            datasets={datasets} \n                            artifacts={artifacts}\n                           onChange={(name, value) => (this.handleChange(t, name, value))}\n                            selectedDataset={selectedDataset}\n                            serviceProperties={serviceProperties}\n                            value={tuple[child.id]}\n                        />\n                    </td>\n                );\n            }\n            rowControls.push(\n                <td key={key + '_btn_del'} className='inner-form-button'>\n                    <Button\n                        icon='trash'\n                        value={t}\n                        negative\n                        onClick={this.handleDelete}\n                        title='Delete row from the list'\n                    />\n                </td>\n            );\n            rowControls.push(\n                <td key={key + '_btn_up'} className='inner-form-button'>\n                    <Button\n                        icon='chevron up'\n                        disabled={t === 0}\n                        onClick={this.handleMoveUp}\n                        title='Move row one position up'\n                        value={t}\n                    />\n                </td>\n            );\n            rowControls.push(\n                <td key={key + '_btn_dowm'} className='inner-form-button'>\n                    <Button\n                        icon='chevron down'\n                        disabled={t === (value.length - 1)}\n                        onClick={this.handleMoveDown}\n                        title='Move row one position down'\n                        value={t}\n                    />\n                </td>\n            );\n            rows.push(<tr key={key}>{rowControls}</tr>);\n        }\n        const lastRowControls = [];\n        const { addTuple } = this.state\n        const key = 'r_' + (value.length+1) + '_' + id;\n        for (let c = 0; c < controlSpec.parameters.length; c++) {\n            const child = controlSpec.parameters[c]\n            lastRowControls.push(\n                <td key={key + '_ctrl_' + child.id} className='inner-form-control'>\n                    <ModuleFormControl\n                        key={child.id}\n                        controlSpec={child}\n                        datasets={datasets}\n                        artifacts={artifacts}\n                        onChange={(name, value) => (this.handleAdd(child.id, value))}\n                        selectedDataset={selectedDataset}\n                        serviceProperties={serviceProperties}\n                        value={addTuple[child.id]}\n                    />\n                </td>\n            );\n        }\n        const lastRow = <tr key={key}>{lastRowControls}</tr>\n        // Add another row that contains the add button.\n        return (\n            <div>\n                <table className='inner-form'><tbody>{rows}{lastRow}</tbody></table>\n            </div>\n        );\n    }\n}\n\nexport default ControlGroup\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport ModuleFormControl from './ModuleFormControl'\nimport '../../../../../css/Notebook.css'\nimport '../../../../../css/ModuleForm.css'\n\n\n/**\n * A row of control elements. This is a style-element. All elements are shown in\n * a single row layout.\n *\n * Expects a value that is an object with a sigle element values which in turn\n * is an object with a single value for each element in the row.\n */\nclass ControlRow extends React.Component {\n    static propTypes = {\n        controlSpec: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        selectedDataset: PropTypes.object,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.object.isRequired\n    }\n    /**\n     * Handle change in any of the group's input controls.\n     */\n    handleChange = (name, value) => {\n        const { id, onChange } = this.props;\n        let formValue = {...this.props.value};\n        formValue[name] = value;\n        onChange(id, formValue)\n    }\n    render() {\n        const {\n            controlSpec,\n            datasets,\n            artifacts,\n            selectedDataset,\n            serviceProperties,\n            value\n        } = this.props;\n        const formLabels = []\n        const formControls = []\n        console.log(\"ROW\")\n        console.log(value)\n        for (let i = 0; i < controlSpec.parameters.length; i++) {\n            const child = controlSpec.parameters[i]\n            console.log(\"CHILD\")\n            console.log(child)\n            formLabels.push(\n                <td key={formLabels.length} className='inner-form-header'>\n                    {child.name}\n                </td>\n            )\n            formControls.push(\n                <td key={formControls.length} className='inner-form-control'>\n                    <ModuleFormControl\n                        key={child.id}\n                        controlSpec={child}\n                        datasets={datasets}\n                        artifacts={artifacts}\n                        onChange={this.handleChange}\n                        selectedDataset={selectedDataset}\n                        serviceProperties={serviceProperties}\n                        value={value[child.id]}\n                    />\n                </td>\n            );\n        }\n        return (\n            <table className='inner-form'>\n                <tbody>\n                    <tr key='row-header'>{ formLabels }</tr>\n                    <tr key='row-values'>{formControls}</tr>\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default ControlRow\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n/**\n* Selector component for datasets.\n*/\nclass DatasetSelector extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { value } = this.props;\n        this.state = {ctrlValue: value};\n    }\n    /**\n     * Handle change in the dropdown box. This event fires whenever the user\n     * clicks on the select box. We maintain the current value in the local\n     * state to avoid updating the form values if nothing has changed.\n     * This is important here since a change to the dataset selector will\n     * trigger all column id controls to reset.\n     */\n    handleChange = (e, { value }) => {\n        const { id, onChange } = this.props\n        const { ctrlValue } = this.state;\n        if (ctrlValue !== value) {\n            this.setState({ctrlValue: value});\n            onChange(id, value, null)\n        }\n    }\n    render() {\n        const { datasets, isRequired, value } = this.props\n        let options = [];\n        if (!isRequired) {\n            // Add entry to set value to empty if not required\n            options.push({\n                key: '',\n                text: '<none>',\n                value: ''\n            })\n        }\n        for (let i = 0; i < datasets.length; i++) {\n            const dataset = datasets[i];\n            options.push({\n                key: dataset.name,\n                text: dataset.name,\n                value: dataset.name\n            })\n        }\n        return (\n            <Dropdown\n                value={value}\n                selection\n                fluid\n                scrolling\n                options={options}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nexport default DatasetSelector\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n/**\n* Selector component for datasets.\n*/\nclass ArtifactSelector extends React.Component {\n    static propTypes = {\n        artifacts: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        artifactType: PropTypes.string,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { value } = this.props;\n        this.state = {ctrlValue: value};\n    }\n    /**\n     * Handle change in the dropdown box. This event fires whenever the user\n     * clicks on the select box. We maintain the current value in the local\n     * state to avoid updating the form values if nothing has changed.\n     * This is important here since a change to the dataset selector will\n     * trigger all column id controls to reset.\n     */\n    handleChange = (e, { value }) => {\n        const { id, onChange } = this.props\n        const { ctrlValue } = this.state;\n        if (ctrlValue !== value) {\n            this.setState({ctrlValue: value});\n            onChange(id, value, null)\n        }\n    }\n    render() {\n        const { artifacts, artifactType, isRequired, value } = this.props\n        let options = [];\n        if (!isRequired) {\n            // Add entry to set value to empty if not required\n            options.push({\n                key: '',\n                text: '<none>',\n                value: ''\n            })\n        }\n        for (let i = 0; i < artifacts.length; i++) {\n            const artifact = artifacts[i];\n            if(artifactType == null || artifactType == artifact.artifact_type){\n                options.push({\n                    key: artifact.name,\n                    text: artifact.name,\n                    value: artifact.name\n                })\n            }\n        }\n        return (\n            <Dropdown\n                value={value}\n                selection\n                fluid\n                scrolling\n                options={options}\n                onChange={this.handleChange}\n            />\n        )\n    }\n}\n\nexport default ArtifactSelector\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\nimport Dropzone from 'react-dropzone';\nimport { formatBytes } from '../../../../util/App';\n\n/**\n * Dropdown selector for uploaded files. The value is an object that contains\n * the following fields: fileid, oneOf(filename, url). The fileid is the unique\n * identifier of the selected file. If null, no file has been selected. The\n * filename is the name of a file that was uploaded from disk. The url is\n * the Url of a file that has been uploaded from the Web.\n *\n */\nclass FileSelector extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.object.isRequired,\n        onChange: PropTypes.func.isRequired\n    }\n    /**\n     * Clear the currently selected source file.\n     */\n    clearSourceFile = () => {\n        const { id, onChange } = this.props\n        onChange(id, {fileid: null, filename: null, url: null});\n    }\n    /**\n     * Dispatch upload file action when a file is dropped in the Dropzone.\n     */\n    handleFileDrop = (files) => {\n        const { id, onChange } = this.props\n        // Submit new value with additional file information\n        onChange(id, {fileid: null, filename: files[0].name, file: files[0], url: null});\n    }\n    render() {\n        const { serviceProperties } = this.props;\n        const { fileid, filename } = this.props.value;\n        let content = null;\n        let css = null;\n        if ((filename != null)) {\n            let action = null;\n            if (fileid != null) {\n                action = 'Uploaded';\n            } else {\n                action = 'Upload';\n            }\n            let name = null;\n            let text = null;\n            if (filename != null) {\n                text = action + ' file from local disk'\n                name = filename;\n            } else {\n                name = 'unknown';\n            }\n            css = 'file-content';\n            content = (\n                <div>\n                    <p className='info-text'>{text}</p>\n                    <p className='file-name'>{name}</p>\n                    <Button\n                        icon='trash'\n                        title='Clear source file'\n                        size='large'\n                        negative\n                        onClick={this.clearSourceFile}\n                    />\n                </div>\n            );\n        } else {\n            let uploadInfo = null\n            if (serviceProperties.maxFileSize) {\n                uploadInfo = (\n                    <p className='upload-info'>\n                        <Icon name='info circle' />\n                        <span>\n                            The size for file uploads is limited to\n                        </span>\n                        <span className='upload-size'>\n                            {' ' + formatBytes(serviceProperties.maxFileSize, 2)}\n                        </span>\n                    </p>\n                )\n            }\n            css = 'file-selector';\n            content = (\n                <div>\n                    <p className='info-text md-top'>Upload file from local disk</p>\n                    <div className='dropzone-container'>\n                        <div className='dropzone'>\n                            <Dropzone onDrop={this.handleFileDrop} multiple={false}>\n                                <p className='p-dropzone'>Drop file here or click to select file to upload.</p>\n                            </Dropzone>\n                        </div>\n                    </div>\n                    { uploadInfo }\n                </div>\n            );\n        }\n        return (\n            <div className={css}>\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default FileSelector\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\n\n\n/**\n* Dropdown selector for uploaded files\n*/\nclass TextSelector extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        options: PropTypes.array.isRequired,\n        isRequired: PropTypes.bool.isRequired,\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { options, isRequired } = props;\n        const listItems = [];\n        if (!isRequired) {\n            // Add entry to set value to empty if not required\n            listItems.push({\n                key: '',\n                text: '<none>',\n                value: ''\n            })\n        }\n        for (let i = 0; i < options.length; i++) {\n            const entry = options[i];\n            // Check whether the entry is a structired value or a string\n            if (typeof entry === 'object') {\n                // A structured value is expected to have at least a .value\n                // element. Other optional elements are .key and .isDefault\n                let entryKey = null;\n                if (entry.key) {\n                    entryKey = entry.key;\n                } else {\n                    entryKey = entry.value;\n                }\n                listItems.push({\n                    key: entryKey,\n                    text: entry.text,\n                    value: entryKey\n                })\n            } else {\n                // Assumes entry to be a scalar (string) value\n                listItems.push({\n                    key: entry,\n                    text: entry,\n                    value: entry\n                })\n            }\n        }\n        this.state ={listItems};\n    }\n    handleChange = (event, { value }) => {\n        const { id, onChange } = this.props\n        onChange(id, value)\n    }\n    render() {\n        const { id, value } = this.props;\n        const { listItems } = this.state;\n        return (\n            <Dropdown\n                name={id}\n                selection\n                scrolling\n                fluid\n                options={listItems}\n                value={value}\n                onChange={this.handleChange}\n            />\n        );\n    }\n}\n\nexport default TextSelector\n","import {Button, Form} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport {KEY} from \"../../../../util/App\";\nimport PropTypes from 'prop-types'\n\nURLSelector.propTypes = {\n    id: PropTypes.string.isRequired,\n    value: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default function URLSelector(props) {\n    const [downloadUrl, setDownloadUrl] = useState('');\n\n    /**\n     * Submit upload request from a given Url.\n     */\n    const uploadFromUrl = () => {\n        const {id, onChange} = props\n        if (downloadUrl.trim() !== '') {\n            onChange(id, {fileid: null, filename: null, url: downloadUrl});\n            setDownloadUrl('');\n        }\n    }\n\n    /**\n     * Handle changes in the Url form control.\n     */\n    const handleUrlChange = (event) => {\n        setDownloadUrl(event.target.value);\n    }\n\n    /**\n     * Detect RETURN key press in the Url control to submit form.\n     */\n    const handleUrlKeyDown = (event) => {\n        if (event.keyCode === KEY.ENTER) {\n            uploadFromUrl();\n        }\n    }\n\n    /**\n     * Clear the currently selected source file.\n     */\n    const clearSourceFile = () => {\n        const { id, onChange } = props\n        onChange(id, {fileid: null, filename: null, url: null});\n    }\n\n    const {fileid, url} = props.value;\n    let content = null;\n    let css = null;\n    if ((url != null)) {\n        let action = null;\n        if (fileid != null) {\n            action = 'Downloaded';\n        } else {\n            action = 'Download';\n        }\n        let name = url;\n        let text = action + ' file from URL'\n        css = 'file-content';\n        content = (\n            <div>\n                <p className='info-text'>{text}</p>\n                <p className='file-name'>{name}</p>\n                <Button\n                    icon='trash'\n                    title='Clear source file'\n                    size='large'\n                    negative\n                    onClick={clearSourceFile}\n                />\n            </div>\n        );\n    } else {\n        css = \"file-selector\"\n        content = (<div>\n            <p className='info-text md-top'>Download file from URL</p>\n            <Form.Input\n                type='text'\n                value={downloadUrl}\n                placeholder={'Upload File from Url'}\n                icon='world'\n                iconPosition='left'\n                fluid\n                action={<Button\n                    icon='upload'\n                    onClick={uploadFromUrl}\n                />}\n                onChange={handleUrlChange}\n                onKeyDown={handleUrlKeyDown}\n                onBlur={uploadFromUrl}\n            />\n        </div>)\n    }\n    return ( <div className={css}>\n                {content}\n            </div>)\n}","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport BoolInput from './BoolInput';\nimport ColumnSelector from './ColumnSelector';\nimport ControlGroup from './ControlGroup';\nimport ControlRow from './ControlRow';\nimport DatasetSelector from './DatasetSelector';\nimport ArtifactSelector from './ArtifactSelector';\nimport FileSelector from './FileSelector';\nimport TextControl from './TextControl';\nimport TextSelector from './TextSelector';\nimport {\n    DT_BOOL, DT_COLUMN_ID, DT_DATASET_ID, DT_DECIMAL, DT_FILE_ID, DT_INT,\n    DT_LIST, DT_RECORD, DT_ROW_ID, DT_ROW_INDEX, DT_SCALAR, DT_STRING, DT_URL,\n    DT_ARTIFACT_ID\n} from '../../../../resources/Engine';\nimport URLSelector from \"./URLSelector\";\n\n\n/**\n * Generic form control. Generates a module form control instance from a given\n * specification.\n */\nclass ModuleFormControl extends React.Component {\n    static propTypes = {\n        controlSpec: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        selectedDataset: PropTypes.object,\n        serviceProperties: PropTypes.object.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool,\n            PropTypes.object,\n            PropTypes.array\n        ]),\n        onChange: PropTypes.func.isRequired\n    }\n    render() {\n        const {\n            controlSpec,\n            datasets,\n            artifacts,\n            selectedDataset,\n            serviceProperties,\n            value,\n            onChange\n        } = this.props;\n        if (controlSpec.datatype === DT_COLUMN_ID) {\n             return (\n                <ColumnSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    dataset={selectedDataset}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_ARTIFACT_ID) {\n            return (\n                <ArtifactSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    artifactType={controlSpec.artifactType}\n                    artifacts={artifacts}\n                    datasets={datasets}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_DATASET_ID) {\n            return (\n                <DatasetSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    value={value}\n                    onChange={onChange}\n                    artifacts={artifacts}\n                    datasets={datasets}\n                />\n            )\n        } else if ((controlSpec.datatype === DT_STRING) && (controlSpec.values)) {\n            return (\n                <TextSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    options={controlSpec.values}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (\n            (controlSpec.datatype === DT_DECIMAL) ||\n            (controlSpec.datatype === DT_INT) ||\n            (controlSpec.datatype === DT_ROW_ID) ||\n            (controlSpec.datatype === DT_ROW_INDEX) ||\n            (controlSpec.datatype === DT_SCALAR) ||\n            (controlSpec.datatype === DT_STRING)\n        ) {\n            return (\n                <TextControl\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    placeholder={controlSpec.name}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_BOOL) {\n            return (\n                <BoolInput\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_FILE_ID) {\n            return (\n                <FileSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    serviceProperties={serviceProperties}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_URL) {\n            return (\n                <URLSelector\n                    key={controlSpec.id}\n                    id={controlSpec.id}\n                    isRequired={controlSpec.required ? true : false}\n                    name={controlSpec.id}\n                    serviceProperties={serviceProperties}\n                    value={value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_LIST) {\n            return (\n                <ControlGroup\n                    key={controlSpec.id}\n                    controlSpec={controlSpec}\n                    datasets={datasets}\n                    artifacts={artifacts}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    value={value === undefined ? [] : value}\n                    onChange={onChange}\n                />\n            )\n        } else if (controlSpec.datatype === DT_RECORD) {\n            return (\n                <ControlRow\n                    key={controlSpec.id}\n                    controlSpec={controlSpec}\n                    datasets={datasets}\n                    artifacts={artifacts}\n                    id={controlSpec.id}\n                    name={controlSpec.id}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    value={value === undefined ? {} : value}\n                    onChange={onChange}\n                />\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default ModuleFormControl;\n","import React from 'react'\n\nconst ProgressContext = React.createContext({\n    moduleProgress: 0\n})\n\n\nexport const ProgressConsumer = ProgressContext.Consumer\n\nexport default ProgressContext","import React, {useState, useEffect, useContext} from \"react\"\nimport {Tab, Button, Label} from \"semantic-ui-react\";\nimport ModuleFormControl from \"./form/ModuleFormControl\";\nimport {DT_CODE, DT_FILE_ID} from \"../../../resources/Engine\";\nimport PropTypes from 'prop-types';\nimport ProgressContext from \"../../ProgressContext\";\nimport Progress from \"semantic-ui-react/dist/commonjs/modules/Progress\";\n\nLoadDatasetForm.propTypes = {\n    selectedCommand: PropTypes.object.isRequired,\n    datasets: PropTypes.array.isRequired,\n    artifacts: PropTypes.array.isRequired,\n    selectedDataset:PropTypes.object,\n    serviceProperties: PropTypes.object.isRequired,\n    values: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\n/**\n * Creates a Load Dataset Form with internal state management per tab/source type\n */\nexport default function LoadDatasetForm(props) {\n    const {selectedCommand, datasets, artifacts, selectedDataset, serviceProperties, values, onChange} = props;\n\n    const initialState = {\n        \"name\":null,\n        \"file\":{\"fileid\":null,\"filename\":null,\"url\":null},\n        \"loadFormat\":\"csv\",\n        \"schema\":[],\n        \"loadInferTypes\":false,\n        \"loadDetectHeaders\":false,\n        \"loadDataSourceErrors\":false,\n        \"loadOptions\":[]\n    };\n\n    const [localSourceState, setLocalSourceState] = useState(initialState);\n    const [remoteSourceState, setRemoteSourceState] = useState(initialState);\n    const [activeIndexValue,setActiveIndex] = useState(null);\n\n    const state = [localSourceState, remoteSourceState];\n    const setState = [setLocalSourceState, setRemoteSourceState];\n\n    /**\n     * Load cell state values into the form when rendering an existing cell\n     */\n    useEffect(()=> {\n        console.log(values[\"file\"])\n        if(values[\"file\"][\"url\"] == null){\n            setState[0](values);\n            setActiveIndex(0);\n        }else{\n            setState[1](values);\n            setActiveIndex(1);\n        }\n    },[]);\n\n    /**\n     * Update local tab state and cell state on form update\n     */\n    const handleValueChange = (id, value) => {\n        setState[activeIndexValue]({\n            ...state[activeIndexValue],\n            [id]:value,\n        });\n        onChange(id, value)\n    };\n\n    /**\n     * Overwrite cell state with new tab state when tab switched\n     */\n    useEffect(()=>{\n        onChange(\"bulk\", state[activeIndexValue])\n    },[activeIndexValue]);\n\n    const panes = [\n        { menuItem:<Label size=\"large\" content=\"From Local Machine\" icon='computer' />, render: ()=> <Tab.Pane>{\n                <LoadFormPane\n                    datasets = {datasets}\n                    artifacts = {[]}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    selectedCommand={selectedCommand}\n                    tabState={localSourceState}\n                    isUrlPane={false}\n                    onChange={handleValueChange}\n                />}</Tab.Pane>},\n        { menuItem: <Label size=\"large\" content='From the Internet' icon='world' />, render: ()=> <Tab.Pane>{\n                <LoadFormPane\n                    datasets = {datasets}\n                    artifacts = {[]}\n                    selectedDataset={selectedDataset}\n                    serviceProperties={serviceProperties}\n                    selectedCommand={selectedCommand}\n                    tabState={remoteSourceState}\n                    isUrlPane={true}\n                    onChange={handleValueChange}\n                />}</Tab.Pane>}\n    ];\n    const progress = useContext(ProgressContext);\n    return (progress.moduleProgress && 0 < progress.moduleProgress < 100 ? <Progress percent={progress.moduleProgress} autoSuccess indicating progress>\n        Uploading\n    </Progress>:<Tab\n        activeIndex={activeIndexValue}\n        onTabChange={(e, {activeIndex}) => setActiveIndex(activeIndex)}\n        panes={panes} />)\n}\n\n/**\n * Internal component to create panes for Local and Remote Sources\n */\nconst LoadFormPane = (props) => {\n    const {datasets,\n        artifacts,\n        selectedDataset,\n        serviceProperties,\n        selectedCommand,\n        tabState,\n        isUrlPane,\n        onChange} = props;\n\n    let cssTable = 'form-table wide';\n    let components = [];\n\n    const [showingAdvancedOptions, setShowingAdvancedOptions] = useState(false);\n\n    const toggleAdvanced = () => setShowingAdvancedOptions(prevState => !prevState);\n\n    const toggleAdvancedOptionsButton = () => <Button\n        onClick={toggleAdvanced}\n        basic\n        content={`${showingAdvancedOptions?'Hide':'Show'} Advanced Options`}\n    />;\n\n    for (let i = 0; i < selectedCommand.parameters.length; i++) {\n        let para = selectedCommand.parameters[i];\n\n        // create a url selector instead of a file selector when required\n        if (isUrlPane === true && para.datatype === DT_FILE_ID){\n            para = { \"datatype\": \"url\", \"hidden\": false, \"id\": \"file\", \"index\": 1, \"name\": \"URL\",\"required\": true }\n        }\n\n        let cssAdvancedOption = 'form-options';\n        if(!(['name','file','loadFormat'].includes(para.id))){\n            !showingAdvancedOptions ? cssAdvancedOption += '-advanced-hidden':cssAdvancedOption += '-advanced'\n        }\n\n        if ((para.parent == null) && (para.hidden !== true) && (para.datatype !== DT_CODE)) {\n            components.push(\n                <tr key={para.id} className={cssAdvancedOption}>\n                    <td className='form-label'>{para.name}</td>\n                    <td className='form-control'>\n                        <ModuleFormControl\n                            key={para.id}\n                            controlSpec={para}\n                            datasets={datasets}\n                            artifacts={artifacts}\n                            selectedDataset={selectedDataset}\n                            serviceProperties={serviceProperties}\n                            value={tabState[para.id]}\n                            onChange={onChange}\n                        />\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    return <React.Fragment><table className={cssTable}>\n        <tbody>{components}</tbody>\n    </table>\n        <div className=\"form-add-button\">{toggleAdvancedOptionsButton()}</div>\n    </React.Fragment>\n};\n","import React from \"react\"\nimport PropTypes from 'prop-types'\nimport LoadDatasetForm from \"./LoadDatasetForm\";\n\nModuleInputFormDecorator.propTypes = {\n    components:PropTypes.array.isRequired,\n    selectedCommand: PropTypes.object.isRequired,\n    cssTable:PropTypes.string,\n    datasets: PropTypes.array.isRequired,\n    artifacts: PropTypes.array.isRequired,\n    selectedDataset:PropTypes.object,\n    serviceProperties: PropTypes.object.isRequired,\n    values: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default function ModuleInputFormDecorator(props) {\n    const { components,\n        selectedCommand,\n        cssTable,\n        datasets,\n        artifacts,\n        selectedDataset,\n        serviceProperties,\n        values,\n        onChange} = props;\n\n    const undecorated = (\n        <table className={cssTable}>\n            <tbody>\n            {components}\n            </tbody>\n        </table>);\n\n    switch (selectedCommand.id) {\n        case \"load\": return <LoadDatasetForm\n            selectedCommand={selectedCommand}\n            datasets={datasets}\n            artifacts={artifacts}\n            selectedDataset={selectedDataset}\n            serviceProperties={serviceProperties}\n            values = {values}\n            onChange = {onChange}\n        />\n        default: return undecorated\n    }\n\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ModuleFormControl from './form/ModuleFormControl';\nimport { DT_CODE, DT_FILE_ID, getSelectedDataset } from '../../../resources/Engine';\nimport '../../../../css/ModuleForm.css';\nimport ModuleInputFormDecorator from \"./ModuleInputFormDecorator\";\n\n\nclass ModuleInputForm extends React.Component {\n    static propTypes = {\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        selectedCommand: PropTypes.object.isRequired,\n        serviceProperties: PropTypes.object.isRequired,\n        values: PropTypes.object.isRequired,\n        onChange: PropTypes.func.isRequired\n    }\n    render() {\n        const {\n            datasets,\n            artifacts,\n            selectedCommand,\n            serviceProperties,\n            onChange,\n            values\n        } = this.props;\n        // Check if the command specification contains a dataset column. If so,\n        // try to find the dataset that is being selected.\n        const selectedDataset = getSelectedDataset(selectedCommand, values, datasets);\n        // If the command contains a file parameter then the style of the table\n        // should be wide.\n        let cssTable = 'form-table';\n        let components = [];\n        for (let i = 0; i < selectedCommand.parameters.length; i++) {\n            const para = selectedCommand.parameters[i];\n            // Skip elements that are part of a group, hidden or are of type\n            // code\n            if ((para.parent == null) && (para.hidden !== true) && (para.datatype !== DT_CODE)) {\n                // Values may be undefined\n                //let val = null;\n                //if (values != null) {\n                //    val = values[para.id];\n                //}\n                components.push(\n                    <tr key={para.id}>\n                        <td className='form-label'>{para.name}</td>\n                        <td className='form-control'>\n                            <ModuleFormControl\n                                key={para.id}\n                                controlSpec={para}\n                                datasets={datasets}\n                                artifacts={artifacts}\n                                selectedDataset={selectedDataset}\n                                serviceProperties={serviceProperties}\n                                value={values[para.id]}\n                                onChange={onChange}\n                            />\n                        </td>\n                    </tr>\n                );\n                if (para.datatype === DT_FILE_ID) {\n                    cssTable += ' wide';\n                }\n            }\n        }\n        return (\n            <ModuleInputFormDecorator\n                components={ components }\n                selectedCommand={ selectedCommand }\n                cssTable = {cssTable}\n                datasets = { datasets }\n                artifacts = { artifacts }\n                selectedDataset = { selectedDataset }\n                serviceProperties = { serviceProperties }\n                values = { values }\n                onChange = { onChange }\n            />\n        );\n    }\n}\n\nexport default ModuleInputForm;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n/**\n* A Python command cell contains a text field for the command content and a\n* submit button.\n*/\n\nconst ADD_ANNOTATION = 'ADD_ANNOTATION';\nconst CREATE_DATASET = 'CREATE_DATASET';\nconst DELETE_ANNOTATION = 'DELETE_ANNOTATION';\nconst DELETE_COLUMN = 'DELETE_COLUMN';\nconst DELETE_DATASET = 'DELETE_DATASET';\nconst DELETE_ROW = 'DELETE_ROW';\nconst GET_DATASET = 'GET_DATASET';\nconst GET_DATASET_FRAME = 'GET_DATASET_FRAME';\nconst INSERT_COLUMN = 'INSERT_COLUMN';\nconst INSERT_ROW = 'INSERT_ROW';\nconst NEW_DATASET_OBJECT = 'NEW_DATASET_OBJECT';\nconst OUTPUT_ANNOTATIONS = 'OUTPUT_ANNOTATIONS';\nconst OUTPUT_COLUMN_NAMES = 'OUTPUT_COLUMN_NAMES';\nconst OUTPUT_CELL_VALUES = 'OUTPUT_CELL_VALUES';\nconst OUTPUT_D3_PLOT = 'OUTPUT_D3_PLOT';\nconst OUTPUT_BOKEH_PLOT = 'OUTPUT_BOKEH_PLOT';\nconst OUTPUT_MAP = 'OUTPUT_MAP';\nconst EXPORT_MODULE = 'EXPORT_MODULE';\nconst RENAME_DATASET = 'RENAME_DATASET';\nconst UPDATE_CELL_VALUE = 'UPDATE_CELL_VALUE';\nconst UPDATE_ANNOTATION = 'UPDATE_ANNOTATION';\nconst UPDATE_DATASET = 'UPDATE_DATASET';\n\n\nexport class CodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === ADD_ANNOTATION) {\n            lines.push('# Add new annotation for dataset cells. Note that rows');\n            lines.push('# and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    if not annos.contains(\\'some:key\\'):');\n            lines.push('        annos.add(\\'some:key\\', \\'some-value\\')');\n        } else if (value === CREATE_DATASET) {\n            lines.push('# Create a new dataset in the data store. Expects a');\n            lines.push('# dataset object and a unique dataset name.');\n            lines.push('vizierdb.create_dataset(\\'unique-ds-name\\', ds)')\n        } else if (value === DELETE_ANNOTATION) {\n            lines.push('# Delete annotations for dataset cell. Delete is similar to');\n            lines.push('# update. Delete an annotation by setting its value to None.');\n            lines.push('# Rows and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    for a in annos.find_all(\\'some:key\\'):');\n            lines.push('        annos.update(identifier=a.identifier, value=None)');\n        } else if (value === DELETE_COLUMN) {\n            lines.push('# Delete dataset column by name (only if column names');\n            lines.push('# are unique), spreadsheet label (\\'A\\', \\'B\\', ...), or');\n            lines.push('# column index (0, 1, ...).');\n            lines.push('ds.delete_column(\\'name-label-or-index\\')');\n        } else if (value === DELETE_DATASET) {\n            lines.push('# Delete dataset with the given name from data store.')\n            lines.push('vizierdb.drop_dataset(\\'unique-ds-name\\')');\n        } else if (value === DELETE_ROW) {\n            lines.push('# Delete dataset rows by removing them from the list of');\n            lines.push('# rows using the row index.');\n            lines.push('del ds.rows[index]');\n        } else if (value === GET_DATASET) {\n            lines.push('# Get object for dataset with given name.');\n            lines.push('ds = vizierdb.get_dataset(\\'unique-ds-name\\')');\n        } else if (value === GET_DATASET_FRAME) {\n            lines.push('# Get read-only pandas dataframe object for dataset with given name.');\n            lines.push('df = vizierdb.get_dataset_frame(\\'unique-ds-name\\')');\n        } else if (value === INSERT_COLUMN) {\n            lines.push('# Create a new column with a given name. The column');\n            lines.push('# position is optional.');\n            lines.push('ds.insert_column(\\'column-name\\', position=0)');\n        } else if (value === INSERT_ROW) {\n            lines.push('# When inserting a row the list of values and the row');\n            lines.push('# position are optional. By default row cells are None.');\n            lines.push('ds.insert_row(values=[\\'list-of-values-for-each-column\\'], position=0)');\n        } else if (value === NEW_DATASET_OBJECT) {\n            lines.push('# Get object containing an empty dataset.');\n            lines.push('ds = vizierdb.new_dataset()');\n        } else if (value === OUTPUT_ANNOTATIONS) {\n            lines.push('# Print all annotations for dataset column. Note that');\n            lines.push('# rows and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    for key in annos.keys():');\n            lines.push('        for a in annos.find_all(key):');\n            lines.push('            print(a.key + \\' = \\' + str(a.value))');\n        } else if (value === OUTPUT_COLUMN_NAMES) {\n            lines.push('# Iterate over list of dataset columns and print column name');\n            lines.push('for col in ds.columns:');\n            lines.push('    print(col.name)');\n        } else if (value === OUTPUT_CELL_VALUES) {\n            lines.push('# Iterate over list of dataset rows and print cell value.')\n            lines.push('# Reference column by name, label (\\'A\\', \\'B\\', ...), or');\n            lines.push('# column index (0, 1, ...).');\n            lines.push('for row in ds.rows:');\n            lines.push('    print(row.get_value(\\'name-label-or-index\\'))');\n        } else if (value === OUTPUT_D3_PLOT) {\n            lines.push('# Generate a plot using Vizier\\'s internal D3-based engine.')\n            lines.push('# (Expects a dataset named `ds`)')\n            lines.push('ds.show_d3_plot(\\'bar_cluster\\', ')\n            lines.push('  labels_inner= [ \\'LINE 1\\',  \\'LINE 2\\',  \\'LINE 3\\'],')\n            lines.push('  keys        = [ \\'VALUE-1\\', \\'VALUE-2\\', \\'VALUE-3\\'],')\n            lines.push('  key_col     = \\'KEY-COLUMN-NAME\\',')\n            lines.push('  value_cols  = [ \\'VALUE-COL-1\\', \\'VALUE-COL-2\\', \\'VALUE-COL-3\\'],')\n            lines.push('  title       = \\'My Plot\\',')\n            lines.push('  legend_title=\\'Legend\\'')\n            lines.push(')')\n        } else if (value === OUTPUT_BOKEH_PLOT) {\n            lines.push('# Generate a plot using Bokeh')\n            lines.push('# (Expects a dataset named `ds`)')\n            lines.push('# See https://bokeh.pydata.org/en/latest/docs/reference.html')\n            lines.push('from bokeh.io import show')\n            lines.push('from bokeh.plotting import figure')\n            lines.push('plot = figure(title = \\'MyFigure\\')')\n            lines.push('plot.line(')\n            lines.push('  x = \\'X-COLUMN-NAME\\', ')\n            lines.push('  y = \\'Y-COLUMN-NAME\\', ')\n            lines.push('  source = ds.to_bokeh()')\n            lines.push(')')\n            lines.push('show(plot)')\n        } else if (value === OUTPUT_MAP) {\n            lines.push('# Render an interactive OpenStreetMap with points marked')\n            lines.push('# (Expects a dataset named `ds`)')\n            lines.push('ds.show_map(')\n            lines.push('  lat_col = \\'LATITUDE-COLUMN-NAME\\',')\n            lines.push('  lon_col = \\'LONGITUDE-COLUMN-NAME\\',')\n            lines.push('  label_col = \\'LABEL-COLUMN-NAME\\' # Optional')\n            lines.push(')')\n        } else if (value === EXPORT_MODULE) {\n            lines.push('# Export a variable, a function or a class for use in subsequent cells')\n            lines.push('def add_numbers(number_1, number_2):')\n            lines.push('    print(\\'adding \\' + str(number_1) + \\' + \\' +str(number_2))')\n            lines.push('    return number_1 + number_2')\n            lines.push('vizierdb.export_module(')\n            lines.push('    add_numbers')\n            lines.push(')')\n            lines.push('#  Use it in a subsequent like normal: add_numbers(1,2)')\n        } else if (value === RENAME_DATASET) {\n            lines.push('# Rename given dataset to a new (unique) name.');\n            lines.push('vizierdb.rename_dataset(\\'unique-ds-name\\', \\'new-unique-ds-name\\')');\n        } else if (value === UPDATE_CELL_VALUE) {\n            lines.push('# Iterate over list of dataset rows and update cell value.')\n            lines.push('# Reference column by name, label (\\'A\\', \\'B\\', ...), or');\n            lines.push('# column index (0, 1, ...).');\n            lines.push('for row in ds.rows:');\n            lines.push('    row.set_value(\\'name-label-or-index\\', value)');\n        } else if (value === UPDATE_ANNOTATION) {\n            lines.push('# Update all annotations for dataset cell. Note that');\n            lines.push('# rows and columns are referenced by their unique identifiers.')\n            lines.push('col = ds.columns[ds.column_index(\\'name-label-or-index\\')]');\n            lines.push('for row in ds.rows:');\n            lines.push('    annos = ds.annotations.for_cell(col.identifier, row.identifier)');\n            lines.push('    for a in annos.find_all(\\'some:key\\'):');\n            lines.push('        annos.update(identifier=a.identifier, value=\\'some-value\\')');\n        } else if (value === UPDATE_DATASET) {\n            lines.push('# Update existing dataset with given name.');\n            lines.push('vizierdb.update_dataset(\\'unique-ds-name\\', ds)');\n        }\n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={GET_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Get Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={GET_DATASET_FRAME} onClick={this.handleSelect}>\n\t                                <List.Content as='a'>Get Dataset Dataframe</List.Content>\n\t                            </List.Item>\n                                <List.Item value={OUTPUT_COLUMN_NAMES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Column Names</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_CELL_VALUES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_ANNOTATIONS} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Annotations</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_D3_PLOT} onClick={this.handleSelect}>\n\t                                <List.Content as='a'>Output Plot (D3)</List.Content>\n\t                            </List.Item>\n                                <List.Item value={OUTPUT_BOKEH_PLOT} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Output Plot (Bokeh)</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_MAP} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Output Map</List.Content>\n                                </List.Item>\n                                <List.Item value={EXPORT_MODULE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Export Module</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> New</List.Header>\n                                </List.Item>\n                                <List.Item value={NEW_DATASET_OBJECT} onClick={this.handleSelect}>\n                                    <List.Content as='a'>New Dataset Object</List.Content>\n                                </List.Item>\n                                <List.Item value={INSERT_COLUMN} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Insert Column</List.Content>\n                                </List.Item>\n                                <List.Item value={INSERT_ROW} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Insert Row</List.Content>\n                                </List.Item>\n                                <List.Item value={ADD_ANNOTATION} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Annotate Cell Value</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='update'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='edit' /> Update</List.Header>\n                                </List.Item>\n                                <List.Item value={UPDATE_CELL_VALUE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Edit Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={UPDATE_ANNOTATION} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Update Cell Annotations</List.Content>\n                                </List.Item>\n                                <List.Item value={UPDATE_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Save Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={CREATE_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Save Dataset As ...</List.Content>\n                                </List.Item>\n                                <List.Item value={RENAME_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Rename Dataset</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='delete'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='trash' /> Delete</List.Header>\n                                </List.Item>\n                                <List.Item value={DELETE_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={DELETE_COLUMN} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Dataset Column</List.Content>\n                                </List.Item>\n                                <List.Item value={DELETE_ROW} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Dataset Row</List.Content>\n                                </List.Item>\n                                <List.Item value={DELETE_ANNOTATION} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Delete Cell Annotations</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nclass PythonCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, cursorPosition, newLines, onChange } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (id === window.activeCodeCell || window.activeCodeCell == null);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines};\n        if(addLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line in the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n        const { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1) {\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete') {\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  {\n            editorValue,\n            snippetSelectorVisible,\n            editing,\n            active,\n            cursorPosition\n        } = this.state;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        let editorContainerCss = active ? '' : ' collapsed'\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <CodeSnippetsSelector onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel =\n            \t<div className='python-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n        }\n        return (\n            <div>\n                {examplePanel}\n                <div className={'editor-container' + editorContainerCss }>\n                    <CodeMirror\n                        value={editorValue}\n\t                    cursor={cursorPosition}\n                        options={{\n                            lineNumbers: true,\n                            mode: 'python',\n                            indentUnit: 4\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.handleChange(editor, value, data);\n                        }}\n                        editorDidMount={(editor) => {\n\t                    \tthis.handleEditorDidMount(editor)\n\t                    }}\n                    \tonCursor={(editor, data) => {\n                    \t\tthis.handleCursorActivity(editor, data)\n                    \t}}\n                    />\n                </div>\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default PythonCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/clike/clike';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n/**\n* A Scala command cell contains a text field for the command content and a\n* submit button.\n*/\n\n\nconst WITH_DATASET = 'WITH_DATASET';\nconst OUTPUT_ANNOTATIONS = 'OUTPUT_ANNOTATIONS';\nconst OUTPUT_COLUMN_NAMES = 'OUTPUT_COLUMN_NAMES';\nconst OUTPUT_CELL_VALUES = 'OUTPUT_CELL_VALUES';\n\n\nexport class ScalaCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === WITH_DATASET) {\n            lines.push('// do something with a dataset with given name.');\n            lines.push('VizierDB.withDataset(\"unique-ds-name\", ds => { //do things with ds here })');\n        } else if (value === OUTPUT_ANNOTATIONS) {\n            lines.push('VizierDB.outputAnnotations(\"unique-ds-name\")');\n        } else if (value === OUTPUT_COLUMN_NAMES) {\n            lines.push('//Iterate over list of dataset columns and print column name');\n            lines.push('ds.schema.map(se => se._1).mkString(\"<br>\")');\n        } else if (value === OUTPUT_CELL_VALUES) {\n            lines.push('//Iterate over list of dataset rows and print cell value.')\n            lines.push('ds.toList.map(row => row.tuple.mkString(\",\")).mkString(\"<br>\")');\n        }\n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={WITH_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Get Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_COLUMN_NAMES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Column Names</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_CELL_VALUES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_ANNOTATIONS} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Annotations</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> New</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='update'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='edit' /> Update</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='delete'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='trash' /> Delete</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nclass ScalaCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        sequenceIndex: PropTypes.number.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, sequenceIndex, cursorPosition, newLines, onChange } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (sequenceIndex === window.activeCodeCell);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines};\n        if(newLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line tin the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n    \tconst { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1){\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete'){\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  {\n            editorValue,\n            snippetSelectorVisible,\n            editing,\n            cursorPosition\n        } = this.state;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <ScalaCodeSnippetsSelector onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel =\n            \t<div className='scala-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n        }\n        return (\n            <div>\n\t            {examplePanel}\n\t            <div className='editor-container'>\n                    <CodeMirror\n                        value={editorValue}\n\t                    cursor={cursorPosition}\n\t                    options={{\n                            lineNumbers: true,\n                            mode: 'text/x-scala',\n                            indentUnit: 4\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                        \tthis.handleChange(editor, value, data);\n                        }}\n                        editorDidMount={(editor) => {\n\t                    \tthis.handleEditorDidMount(editor)\n\t                    }}\n\t                \tonCursor={(editor, data) => {\n\t                \t\tthis.handleCursorActivity(editor, data)\n\t                \t}}\n                    />\n                </div>\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default ScalaCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n/**\n* A Scala command cell contains a text field for the command content and a\n* submit button.\n*/\n\n\nconst WITH_DATASET = 'WITH_DATASET';\nconst OUTPUT_ANNOTATIONS = 'OUTPUT_ANNOTATIONS';\nconst OUTPUT_COLUMN_NAMES = 'OUTPUT_COLUMN_NAMES';\nconst OUTPUT_CELL_VALUES = 'OUTPUT_CELL_VALUES';\n\n\nexport class RCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === WITH_DATASET) {\n            lines.push('// do something with a dataset with given name.');\n            lines.push('vizierdb.withDataset(\"unique-ds-name\", ds => { //do things with ds here })');\n        } else if (value === OUTPUT_ANNOTATIONS) {\n            lines.push('vizierdb.outputAnnotations(\"unique-ds-name\")');\n        } else if (value === OUTPUT_COLUMN_NAMES) {\n            lines.push('//Iterate over list of dataset columns and print column name');\n            lines.push('ds.schema.map(se => se._1).mkString(\"<br>\")');\n        } else if (value === OUTPUT_CELL_VALUES) {\n            lines.push('//Iterate over list of dataset rows and print cell value.')\n            lines.push('ds.toList.map(row => row.tuple.mkString(\",\")).mkString(\"<br>\")');\n        }\n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={WITH_DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Get Dataset</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_COLUMN_NAMES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Column Names</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_CELL_VALUES} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Values</List.Content>\n                                </List.Item>\n                                <List.Item value={OUTPUT_ANNOTATIONS} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Print Cell Annotations</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> New</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='update'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='edit' /> Update</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='delete'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='trash' /> Delete</List.Header>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport DatasetSelector from './DatasetSelector';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/sql/sql';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\nimport TextControl from './TextControl';\n\n\n/**\n* A Python command cell contains a text field for the command content and a\n* submit button.\n*/\n\nconst SELECT_TABLE = 'SELECT_TABLE';\nconst JOIN_TABLES = 'JOIN_TABLES';\nconst UNION_TABLES = 'UNION_TABLES';\nconst DATASET = 'DATASET';\n\n\n\nexport class SQLCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        this.state = {secondaryDatasetValue: \"\"}\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n    \tconst { onSelect } = this.props;\n    \tconst { secondaryDatasetValue, primaryDatasetValue } = this.state\n    \tlet lines = [];\n        if (value === SELECT_TABLE) {\n            lines.push('SELECT * FROM '+primaryDatasetValue);\n        } else if (value === JOIN_TABLES) {\n        \tlines.push('SELECT * FROM '+primaryDatasetValue+' JOIN '+secondaryDatasetValue);\n        } else if (value === UNION_TABLES) {\n        \tlines.push('(SELECT * FROM '+primaryDatasetValue+') UNION ALL (SELECT * FROM '+secondaryDatasetValue+')');\n        } else if (value === DATASET) {\n            lines.push(' '+primaryDatasetValue+' ');\n        }\n        onSelect(lines);\n    }\n    handleSecondaryDatasetChange = (value) => {\n        this.setState({secondaryDatasetValue: value});\n    }\n    handlePrimaryDatasetChange = (value) => {\n        this.setState({primaryDatasetValue: value});\n    }\n    \n    render() {\n    \tconst { id, datasets } = this.props;\n    \tconst { secondaryDatasetValue, primaryDatasetValue } = this.state;\n    \treturn (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item className='sql-example-list-item' value={SELECT_TABLE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>\n                                       <span className='sql-example-a-span'>Select from</span>\n                                       <div className='sql-example-ds-selector'>\n\t\t                \t\t        \t<DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={primaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t\t                                        }}\n\t\t                \t\t        \t/>\n\t\t                                </div>\n\t\t                \t\t        <Icon name='plus' />\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item className='sql-example-list-item' value={JOIN_TABLES} onClick={this.handleSelect}>\n\t                                <List.Content as='a'>\n\t                                    <div className='sql-example-ds-selector'>\n\t\t                \t\t        \t<DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={primaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t\t                                        }}\n\t\t                \t\t        \t/>\n\t\t                \t\t        </div>\n\t\t                \t\t        <span className='sql-example-a-span'>Join</span>\n\t\t                \t\t        <div className='sql-example-ds-selector'>\n\t                                        <DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={secondaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handleSecondaryDatasetChange(value)\n\t\t                                        }}\n\t                \t\t        \t    />\n\t\t                \t\t        </div>\n\t                                    <Icon name='plus' />\n\t                                </List.Content>\n\t                            </List.Item>\n\t                            <List.Item className='sql-example-list-item' value={UNION_TABLES} onClick={this.handleSelect}>\n                                <List.Content as='a'>\n                                    <div className='sql-example-ds-selector'>\n\t                \t\t        \t<DatasetSelector\n\t                \t\t                key={id}\n\t                \t\t                id={id}\n\t                \t\t                isRequired={false}\n\t                \t\t                name={id}\n\t                \t\t                datasets={datasets}\n\t                \t\t                value={primaryDatasetValue}\n\t                \t\t                onChange={(dsselector, value) => {\n\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t                                        }}\n\t                \t\t        \t/>\n\t                \t\t        </div>\n\t                \t\t        <span className='sql-example-a-span'>Union</span>\n\t                \t\t        <div className='sql-example-ds-selector'>\n\t                \t\t        \t<DatasetSelector\n\t                \t\t                key={id}\n\t                \t\t                id={id}\n\t                \t\t                isRequired={false}\n\t                \t\t                name={id}\n\t                \t\t                datasets={datasets}\n\t                \t\t                value={secondaryDatasetValue}\n\t                \t\t                onChange={(dsselector, value) => {\n\t                \t\t                \tthis.handleSecondaryDatasetChange(value)\n\t                                        }}\n                \t\t        \t    />\n\t                \t\t        </div>\n\t                \t\t        <Icon name='plus' />\n                                </List.Content>\n                            </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={4} key='new'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='plus' /> Dataset</List.Header>\n                                </List.Item>\n                                <List.Item className='sql-example-list-item' value={DATASET} onClick={this.handleSelect}>\n                                    <List.Content as='a'>\n                                        <span className='sql-example-a-span'>Dataset</span>\n\t                                    <div className='sql-example-ds-selector'>\n\t\t                \t\t        \t<DatasetSelector\n\t\t                \t\t                key={id}\n\t\t                \t\t                id={id}\n\t\t                \t\t                isRequired={false}\n\t\t                \t\t                name={id}\n\t\t                \t\t                datasets={datasets}\n\t\t                \t\t                value={primaryDatasetValue}\n\t\t                \t\t                onChange={(dsselector, value) => {\n\t\t                \t\t                \tthis.handlePrimaryDatasetChange(value)\n\t\t                                        }}\n\t\t                \t\t        \t/>\n\t\t                                </div>\n\t\t                \t\t        <Icon name='plus' />\n                                    </List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\nclass SQLCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        otputDataset: PropTypes.string,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        sequenceIndex: PropTypes.number.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, sequenceIndex, cursorPosition, newLines, onChange, outputDataset } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (sequenceIndex === window.activeCodeCell);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines, outputDataset:outputDataset };\n        if(newLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line tin the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n    \tconst { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n    \tconst { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1){\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete'){\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Handle change of dataset\n     */\n    handleDatasetChange = (value) => {\n        this.setState({datasetValue: value});\n    }\n    /**\n     * Handle change of output dataset\n     */\n    handleOutputDatasetChange = (value) => {\n        const { onChange } = this.props;\n        this.setState({outputDataset: value});\n        onChange('output_dataset', value);\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  {\n            // datasetValue,\n            editorValue,\n            snippetSelectorVisible,\n            outputDataset,\n            editing,\n            cursorPosition\n        } = this.state;\n        const { id, datasets } = this.props;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <SQLCodeSnippetsSelector datasets={datasets} onDatasetChange={this.handleDatasetChange} onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel =\n            \t<div className='sql-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n        }\n        return (\n            <div>\n\t            {examplePanel}\n\t            <div className='editor-container'>\n                    <CodeMirror\n                        value={editorValue}\n\t                    cursor={cursorPosition}\n\t                    options={{\n                            lineNumbers: true,\n                            mode: 'text/x-sql',\n                            indentUnit: 4\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                        \tthis.handleChange(editor, value, data);\n                        }}\n                        editorDidMount={(editor) => {\n                        \tthis.handleEditorDidMount(editor)\n                        }}\n\t                \tonCursor={(editor, data) => {\n\t                \t\tthis.handleCursorActivity(editor, data)\n\t                \t}}\n                    />\n                </div>\n                <div class=\"ui labeled input\">\n\t                <div class=\"ui label\">\n\t                \tOutput Dataset\n\t                </div>\n                    <TextControl\n\t                    key={id}\n\t                    id={id}\n\t                    name={'Output Dataset'}\n\t                    placeholder={'Output Dataset (optional)'}\n\t                    isRequired={false}\n\t                    value={outputDataset}\n\t                    onChange={(dstext, value) => {\n\t\t                \tthis.handleOutputDatasetChange(value)\n\t                    }}\n\t                />\n\t            </div>\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default SQLCell\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Grid, List } from 'semantic-ui-react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/markdown/markdown';\nimport '../../../../../css/App.css';\nimport '../../../../../css/ModuleForm.css';\n\n\n\n/**\n* A Python command cell contains a text field for the command content and a\n* submit button.\n*/\n\nconst TABLE = 'TABLE';\n\n\n\nexport class MarkdownCodeSnippetsSelector extends React.Component {\n    static propTypes = {\n        onSelect: PropTypes.func.isRequired\n    }\n    /**\n     * Depending on the selected list item pass code snippet to controlling\n     * elements. Assumes the the .onSelect() method expects a list of code\n     * lines.\n     */\n    handleSelect = (e, { value }) => {\n        const { onSelect } = this.props;\n        let lines = [];\n        if (value === TABLE) {\n            lines.push('| header1 | header2 |');\n            lines.push('| ------- | ------- |');\n            lines.push('| | |');\n        } \n        onSelect(lines);\n    }\n    render() {\n        return (\n            <div className='snippet-selector'>\n                <Grid columns={4} divided>\n                    <Grid.Row>\n                        <Grid.Column width={4} key='output'>\n                            <List link>\n                                <List.Item>\n                                    <List.Header><Icon name='desktop' /> Access & Output</List.Header>\n                                </List.Item>\n                                <List.Item value={TABLE} onClick={this.handleSelect}>\n                                    <List.Content as='a'>Table</List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nclass MarkdownCell extends React.Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        value: PropTypes.string,\n        editing: PropTypes.bool.isRequired,\n        sequenceIndex: PropTypes.number.isRequired,\n        cursorPosition: PropTypes.object.isRequired,\n        newLines: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { id, value, editing, sequenceIndex, cursorPosition, newLines, onChange } = props;\n        let evalue = value;\n        let addLines = false;\n        let newCursorPos = cursorPosition;\n        let active = (sequenceIndex === window.activeCodeCell || sequenceIndex === -1);\n        if(newLines){\n        \taddLines = true;\n        \tevalue = newLines;\n        }\n        else if(active && window.cursorPosition){\n        \tnewCursorPos = window.cursorPosition;\n        }\n        this.state = {editorValue: evalue, snippetSelectorVisible: false, editing: editing, active:active, cursorPosition: newCursorPos, addLines:addLines};\n        if(addLines){\n        \tonChange(id, evalue);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line tin the current\n     * editor value.\n     */\n    appendCode = (lines) => {\n        const { id, onChange } = this.props;\n        const  { editorValue, cursorPosition } = this.state;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n        \n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.setState({editorValue: value});\n        onChange(id, value);\n        // Hide the snippet selector\n        this.toggleSnippetSelector();\n    }\n    /**\n     * Handle changes in the code mirror editor. Keep track of the editor value\n     * locally and propagate the state change to the conrolling notebook cell\n     * input form..\n     */\n    handleChange = (editor, value, data) => {\n        const { id, onChange } = this.props;\n        let cursorp = editor.getCursor();\n        this.setState({editorValue: value, cursorPosition: cursorp});\n        if(data.to &&  data.from && data.origin){\n        \tif(data.origin === '+input' || data.origin === 'paste'){\n        \t\tlet newLines = data.text;\n        \t\tlet newLineCount =  newLines.length -1;\n        \t\tlet lastLineLength = newLines[newLineCount].length;\n        \t\tlet newLine = data.from.line + newLineCount;\n        \t    let newCh = lastLineLength;\n        \t    if(newLines.length === 1){\n        \t    \tnewCh = data.from.ch + lastLineLength;\n        \t    }\n        \t\tcursorp = {line:newLine, ch:newCh};\n        \t}\n        \telse if(data.origin === '+delete'){\n        \t\tcursorp = {line:data.from.line, ch:data.from.ch};\n        \t}\n        }\n        window.cursorPosition = cursorp;\n        onChange(id, value, cursorp);\n    }\n    /**\n     * Handle cursor changes in the code mirror editor. Keep track of the cursor position\n     * locally so that it sets properly on render.\n     */\n    handleCursorActivity = (editor, data) => {\n    \tconst { active } = this.state;\n        let cursorp = editor.getCursor();\n        this.setState({cursorPosition: cursorp});\n        if(active){\n        \twindow.cursorPosition = cursorp;\n        }\n    }\n    /**\n     * after the component mounts set the focus if it is the active cell.\n     */\n    handleEditorDidMount = (editor) => {\n    \tconst { active } = this.state;\n        if(active){\n        \teditor.focus();\n        }\n    }\n    /**\n     * Show the code editor and optionally the code snippet selector.\n     */\n    render() {\n        const  { editorValue, snippetSelectorVisible, editing, active, cursorPosition } = this.state;\n        let headerCss = '';\n        let selectorPanel = null;\n        let examplePanel = null;\n        let editorPanel = null;\n        let editorContainerCss = active ? '' : ' collapsed'\n        if (snippetSelectorVisible) {\n            headerCss = ' expanded';\n            selectorPanel = <MarkdownCodeSnippetsSelector onSelect={this.appendCode}/>\n        }\n        if (editing) {\n            examplePanel = \n            \t<div className='python-examples'>\n\t\t\t        <div className={'snippet-header' + headerCss}>\n\t\t\t            <Icon name='help circle' color='blue' onClick={this.toggleSnippetSelector} />\n\t\t\t            <span className='left-padding-sm' onClick={this.toggleSnippetSelector}>\n\t\t\t                Code examples for dataset manipulation\n\t\t\t            </span>\n\t\t\t        </div>\n\t\t\t        { selectorPanel }\n\t\t\t    </div>\n\t\t\t    \n\t\t    editorPanel = \n\t\t    \t<div className={'editor-container' + editorContainerCss }>\n\t\t            <CodeMirror\n\t\t                value={editorValue}\n\t\t                cursor={cursorPosition}\n\t\t                options={{\n\t\t                    lineNumbers: true,\n\t\t                    mode: 'markdown',\n\t\t                    indentUnit: 4\n\t\t                }}\n\t\t                onBeforeChange={(editor, data, value) => {\n\t\t                    this.handleChange(editor, value, data);\n\t\t                }}\n\t\t                editorDidMount={(editor) => {\n\t\t                \tthis.handleEditorDidMount(editor)\n\t\t                }}\n\t\t            \tonCursor={(editor, data) => {\n\t\t            \t\tthis.handleCursorActivity(editor, data)\n\t\t            \t}}\n\t\t            />\n\t\t        </div>\n        }\n        return (\n            <div>\n                {examplePanel}\n                {editorPanel}\n            </div>\n        );\n    }\n    toggleSnippetSelector = () => {\n        const  { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n}\n\nexport default MarkdownCell\n","/**\n * Copyright (C) 2018-2019 New York University\n *                         University at Buffalo,\n *                         Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { HotKeys } from 'react-hotkeys';\nimport { Button, Form } from 'semantic-ui-react';\nimport CommandsListing from './CommandsListing';\nimport ContentSpinner from '../../ContentSpinner';\nimport CodeCell from './form/CodeCell'\nimport TextControl from './form/TextControl';\nimport { ErrorListMessage } from '../../Message';\nimport ModuleInputForm from './ModuleInputForm';\nimport { CodeSnippetsSelector as PythonSnippets } from './form/PythonCell';\nimport { ScalaCodeSnippetsSelector as ScalaSnippets } from './form/ScalaCell';\nimport { RCodeSnippetsSelector as RSnippets } from './form/RCell';\nimport { SQLCodeSnippetsSelector as SQLSnippets } from './form/SQLCell';\nimport { MarkdownCodeSnippetsSelector as MarkdownSnippets } from './form/MarkdownCell';\nimport { DT_DATASET_ID, formValuesToRequestData, toFormValues,\n    resetColumnIds } from '../../../resources/Engine';\nimport '../../../../css/App.css';\nimport '../../../../css/ModuleForm.css';\n\n/**\n * The moule input area is divided into three parts: (i) a header that contains\n * a dropdown menu to select one of the available module commands, (2) the\n * command input form, and (3) buttons to sumbit or dismiss the module changes.\n */\nclass CellCommandArea extends React.Component {\n    static propTypes = {\n        apiEngine: PropTypes.object.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        cell: PropTypes.object.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        onClick: PropTypes.func.isRequired,\n        onDismiss: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func,\n        userSettings: PropTypes.object.isRequired,\n        onResetRecommendations: PropTypes.func,\n        onUpdateProgress: PropTypes.func\n    }\n    constructor(props) {\n        super(props);\n        const { cell, datasets } = props;\n        // Keep track of the command specification that is currently being\n        // selected. For an existing cell the specification initially is the one\n        // that is contained in the workflow module handle. For new cells the\n        // command specification is undefined or null. If the user selects a\n        // new command from the command menu the local state will be updated\n        // accordingly.\n        // If the cell contains a code editor maintain information about the\n        // cursor position and a list of new lines that are being pasted from\n        // a code-snippet selector\n        let values = null;\n        if (!cell.isNewCell()) {\n            values = toFormValues(\n                cell.commandSpec.parameters,\n                datasets,\n                cell.module.command.arguments\n            );\n        }\n        this.state = {\n            codeEditorProps: {\n                cursorPosition: { line: 0, ch: 0 },\n                newLines: \"\"\n            },\n            errors: null,\n            formValues: values,\n            hasErrors: false,\n            selectedCommand: cell.commandSpec,\n            showCommandsListing: (cell.commandSpec == null),\n            snippetSelectorVisible: false,\n            upstreamFormValues: false,\n            submitted: false\n        }\n    }\n    /**\n     * Set this as the active cell (if it isn't yet). This method is intended\n     * when a rebdered code editor receives the focus.\n     */\n    handleActivateCell = () => {\n        const { cell, isActiveCell, onSelectCell } = this.props;\n        if (!isActiveCell) {\n            onSelectCell(cell);\n        }\n    }\n    /**\n     * Append a code snippet to the current editor value. The code snippet is\n     * expected to be a list of strings (code lines).\n     *\n     * Tries to determine the current indent from the last line in the current\n     * editor value.\n     */\n    handleAppendCode = (lines) => {\n        const  { codeEditorProps, formValues, selectedCommand } = this.state;\n        const paraCode = selectedCommand.codeParameter;\n        const editorValue = formValues[paraCode.id] == null ? '' : formValues[paraCode.id];\n        const cursorPosition = codeEditorProps.cursorPosition;\n        // Get the current indent from the last line of the editor value\n        let indent = '';\n        let script = editorValue.split('\\n');\n        if (script.length > 0 && editorValue !== '') {\n            const refLine = script[cursorPosition.line];\n            let i = 0;\n            while (i < refLine.length) {\n                const c = refLine.charAt(i);\n                if ((c === ' ') || (c === '\\t')) {\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            indent = refLine.substring(0, i);\n        }\n        // Append the given lines to the current value of the editor (indentent\n        // based on the indent of the current last line).\n        for (let i = 0; i < lines.length; i++) {\n            // If the current editor value is empty do not append a new line at\n            // the start.\n            script.splice(cursorPosition.line+i, 0, indent + lines[i]);\n        }\n        // Insert an empty line for readability if the current script is not\n        // empty.\n        if (editorValue !== '') {\n        \tscript.splice(cursorPosition.line, 0, \"\");\n        }\n\n        let value = script.join(\"\\n\");\n        // Update the local state and propagate the change to the conrolling\n        // notebook cell\n        this.handleFormValueChange(paraCode.id, value);\n        // Hide the snippet selector\n        this.handleToggleSnippetSelector();\n    }\n    /**\n     * Handle change in one of the elements in a displayed module input form.\n     * If the cell displays a code editor the optional cursorPosition specifies\n     * the new position of the cursor in the editor.\n     */\n    handleFormValueChange = (id, value, cursorPosition) => {\n        if(id===\"bulk\"){\n            this.handleBulkFormValueChange(value)\n            return\n        }\n        const { codeEditorProps, formValues, selectedCommand } = this.state;\n        const modifiedValues = {...formValues};\n        modifiedValues[id] = value;\n        // If the modified control is a dataset selector we need to reset all\n        // column identifier controls.\n        const cntrlSpec = selectedCommand.parameters.find((p) => (p.id === id));\n        if (cntrlSpec.datatype === DT_DATASET_ID) {\n            resetColumnIds(modifiedValues, selectedCommand.parameters);\n        }\n        let modifiedEditorProps = null;\n        if (cursorPosition != null) {\n            modifiedEditorProps = { cursorPosition: cursorPosition };\n        } else {\n            modifiedEditorProps = codeEditorProps;\n        }\n        this.setState({\n            upstreamFormValues: true,\n            formValues: modifiedValues,\n            codeEditorProps: modifiedEditorProps\n        });\n    }\n\n    /**\n    * Bulk update the cell state - necessary when multiple values need to be updated quickly in succession\n    * (e.g. when changing tabs in the load dataset form, all properties will be updated). Individually updating\n    * each attribute in a loop does not guarantee a synchronous operation as calls maybe batched for for performance\n    * gains. Read More: https://reactjs.org/docs/react-component.html#setstate\n    */\n    handleBulkFormValueChange = (values) => {\n        const modifiedValues = {...values}\n        this.setState({\n            formValues: modifiedValues,\n            upstreamFormValues: true\n        })\n    }\n    /**\n     * Keep track of the cursor position of a displayed code cell.\n\n     */\n    handleCursorChange = (cursorPos) => {\n        this.setState({ codeEditorProps: { cursorPosition: cursorPos } });\n    }\n    /**\n     * Dismiss changes to the cell when the user presses the Dismiss button.\n     * If this is a new cell the dismissal will remove the cell from the\n     * notebook. Otherwise we need to adjust some of the internal state settings\n     * for a fresh start when the cell becomes the active cell again.\n     */\n    handleDismiss = () => {\n        const { cell, datasets, onDismiss } = this.props;\n        // Clean up for fresh start when cell becomes active again\n        if (!cell.isNewCell()) {\n            this.setState({\n                upstreamFormValues: false,\n                formValues: toFormValues(\n                    cell.commandSpec.parameters,\n                    datasets,\n                    cell.module.command.arguments\n                ),\n                selectedCommand: cell.commandSpec,\n                snippetSelectorVisible: false\n            });\n        }\n        onDismiss(cell);\n    }\n    /**\n     * Event handler for dismissing a shown command listing. The result depends\n     * on whether the cell currently has a selected command or not. In the\n     * latter case this is a new cell that is empty and we call the cell dismiss\n     * method.\n     */\n    handleDismissCommandsListing = () => {\n        const { selectedCommand } = this.state;\n        const { onResetRecommendations } = this.props;\n        if (selectedCommand != null) {\n            this.setState({showCommandsListing: false});\n        } else {\n            this.handleDismiss();\n        }\n        onResetRecommendations()\n    }\n    /**\n     * Clear the list of error messages.\n     */\n    handleDismissErrors = () => {\n        this.setState({errors: null});\n    }\n    /**\n     * Set the command in the user settings clipboard as the selected command.\n     */\n    handlePasteCommand = () => {\n        const { datasets, userSettings, onResetRecommendations} = this.props;\n        this.setState({\n            formValues: toFormValues(\n                userSettings.clipboard.commandSpec.parameters,\n                datasets,\n                userSettings.clipboard.arguments\n            ),\n            selectedCommand: userSettings.clipboard.commandSpec,\n            showCommandsListing: false\n        });\n        onResetRecommendations()\n    }\n    /**\n     * Update the selected command to the command that is identified by the\n     * given pair of package and command identifier.\n     */\n    handleSelectCommand = (packageId, commandId) => {\n        const { apiEngine, datasets, onResetRecommendations} = this.props;\n        const cmd = apiEngine.packages.getCommandSpec(packageId, commandId);\n        this.setState({\n            formValues: toFormValues(cmd.parameters, datasets),\n            selectedCommand: cmd,\n            showCommandsListing: false\n        });\n        onResetRecommendations()\n    }\n    /**\n     * Set the showCommandsListing to true to show a list of available commands.\n     */\n    handleShowCommandsListing = () => {\n        this.setState({showCommandsListing: true});\n    }\n    /**\n     * Submit the values in the module input form. This method first converts\n     * the forma values into the representation that is expected by the API.\n     * During this conversion the input values are validated against the\n     * constraints in the command specification. If any of the values are not\n     * valid the form is not submitted but a list of validation errors will be\n     * shown instead.\n     */\n    handleSubmitForm = () => {\n        const { cell, onSubmit, apiEngine, onUpdateProgress } = this.props;\n        // The onSubmit function may be none if submission is not permitted for\n        // an active notebook. Show an alert for the user.\n        if (onSubmit == null) {\n            alert('Cannot submit cell in an active notebook');\n            return;\n        }\n        const { formValues, selectedCommand } = this.state;\n        // Convert form values into format expected by the API. During the\n        // conversion validate the form values.\n        const req = formValuesToRequestData(formValues, selectedCommand.parameters, apiEngine.serviceProperties);\n        if (req.errors.length > 0) {\n            // Show list of error messages if validation of form values failed\n            this.setState({errors: req.errors, hasErrors: true});\n        } else {\n            // Clear the error state and submit the cell, command specification\n            // and form values to update the underlying workflow.\n            this.setState({errors: null, hasErrors: false, submitted:true});\n            onSubmit(cell, selectedCommand, req.data, onUpdateProgress);\n        }\n        this.setState({upstreamFormValues:false})\n    }\n    /**\n     * Toggle visibility of an optional code snippet selector.\n     */\n    handleToggleSnippetSelector = () => {\n        const { snippetSelectorVisible } = this.state;\n        this.setState({snippetSelectorVisible: !snippetSelectorVisible});\n    }\n\n    /**\n     * Catches F5 (page refresh) and executes the cell\n     */\n    handleF5Press = (event) => {\n        event.preventDefault()\n        this.handleSubmitForm()\n    }\n\n    /**\n     * To let arguments be modified by cell execution\n     */\n    static getDerivedStateFromProps(props, state){\n        const moduleArguments = (typeof props.cell.module !== \"undefined\") ? props.cell.module.command.arguments : null;\n        if(typeof moduleArguments !== \"undefined\" && moduleArguments !== null && state.upstreamFormValues === false){\n            let formattedModuleArguments = toFormValues(props.cell.commandSpec.parameters, props.datasets, moduleArguments)\n            return {\n                ...state,\n                formValues : formattedModuleArguments\n            };\n        }\n        return null;\n    }\n\n    render() {\n        const {\n            apiEngine,\n            cell,\n            datasets,\n            artifacts,\n            isActiveCell,\n            onClick,\n            onSubmit,\n            userSettings,\n        } = this.props;\n        const {\n            errors,\n            formValues,\n            hasErrors,\n            selectedCommand,\n            showCommandsListing,\n            snippetSelectorVisible,\n            submitted\n        } = this.state;\n        // Show an list of error messages if the form did not validate\n        let errorMessage = null;\n        if (errors != null) {\n            errorMessage = (\n                <ErrorListMessage\n                    title='There are errors in the form'\n                    errors={errors}\n                    onDismiss={this.handleDismissErrors}\n                />\n            );\n        }\n        // The main content depends on whether a command specification is\n        // defined for the associated notebook cell or not.\n        let mainContent = null;\n        // For code cells with additional parameters\n        let additionalParams = null;\n        // For code cells an additional button is shown to toggle vizibility of\n        // a code snippet selector.\n        let codeSnippetButton = null;\n        if ((isActiveCell) && ((selectedCommand == null) || (showCommandsListing))) {\n            let onPaste = null;\n            if (userSettings.clipboard != null) {\n                onPaste = this.handlePasteCommand;\n            }\n            // If the command specification is undefined or the show command listing\n            // flag is true then a listing of all available commands is shown to allow\n            // the user to select a command.\n            mainContent = (\n                <CommandsListing\n                    apiEngine={apiEngine}\n                    onDismiss={this.handleDismissCommandsListing}\n                    onPaste={onPaste}\n                    onSelect={this.handleSelectCommand} />\n            );\n        } else {\n            // If there is a command specification defined for this component\n            // the output depends on whether (i) the command is a code cell\n            // command and (2) the cell is in edit state or not.\n            let paraCode = null;\n            if (isActiveCell) {\n                paraCode = selectedCommand.codeParameter;\n            } else if (!cell.isNewCell()) {\n                paraCode = cell.commandSpec.codeParameter;\n            }\n            if (paraCode != null) {\n            \tif (submitted) {\n                    // cell has been submitted but not put/post not done yet\n                    mainContent = (\n                        <div className={'module-form'}>\n                           <ContentSpinner text=\"Submitting Cell\" size='small' />\n                        </div>\n                    );\n                }\n            \telse{\n\t            \t// Show (optional) code snippet selector for different code cell\n\t                // types. The snippet selector is only visible if this is the\n\t                // active cell and the show snippet flag is true.\n\t                let codeSnippetPanel = null;\n\t                if ((isActiveCell) && (snippetSelectorVisible)) {\n\t                    if (paraCode.language === 'python') {\n\t                        codeSnippetPanel = (\n\t                            <PythonSnippets onSelect={this.handleAppendCode}/>\n\t                        );\n\t                    } else if (paraCode.language === 'scala') {\n\t                        codeSnippetPanel = (\n\t                            <ScalaSnippets onSelect={this.handleAppendCode}/>\n\t                        );\n\t                    } else if (paraCode.language === 'r') {\n\t                    \tcodeSnippetPanel = (\n\t                            <RSnippets onSelect={this.handleAppendCode}/>\n\t                        );\n\t                    } else if (paraCode.language === 'sql') {\n\t                        // let outputDataset = formValues['output_dataset'];\n\t                    \tcodeSnippetPanel = (\n\t                                <SQLSnippets datasets={datasets} onSelect={this.handleAppendCode}/>\n\t                            );\n\t                    }\n\t                    else if (paraCode.language === 'markdown') {\n\t                        codeSnippetPanel = (\n\t                                <MarkdownSnippets onSelect={this.handleAppendCode}/>\n\t                            );\n\t                    }\n\t\n\t                }\n\t                const { codeEditorProps } = this.state;\n\t                const lockedCell = cell && cell.module ? cell.module.locked : false;\n\t                if((isActiveCell) && (paraCode.language === 'sql')) {\n\t                \tlet outputDataset = formValues['output_dataset'];\n\t                \tadditionalParams = (\n\t                    \t\t<div className=\"ui labeled input\">\n\t\t\t\t\t                <div className=\"ui label\">\n\t\t\t\t\t                \tOutput Dataset\n\t\t\t\t\t                </div>\n\t\t\t\t                    <TextControl\n\t\t\t\t\t                    key={paraCode.id}\n\t\t\t\t\t                    id={paraCode.id}\n\t\t\t\t\t                    name={'Output Dataset'}\n\t\t\t\t\t                    placeholder={'Output Dataset (optional)'}\n\t\t\t\t\t                    isRequired={false}\n\t\t\t\t\t                    value={outputDataset}\n\t\t\t\t\t                    onChange={(dstext, value) => {\n\t\t\t\t\t                    \tthis.handleFormValueChange('output_dataset', value, codeEditorProps.cursorPosition)\n\t\t\t\t\t                    }}\n\t\t\t\t\t                />\n\t\t\t\t\t            </div>\n\t\t                    );\n\t                }\n\t                mainContent = (\n\t                    <div>\n\t                        <Form>\n\t                            <CodeCell\n\t                                cursorPosition={codeEditorProps.cursorPosition}\n\t                                editing={false}\n\t                                id={paraCode.id}\n\t                                isActiveCell={isActiveCell}\n\t                                key={paraCode.id}\n\t                                language={paraCode.language}\n\t                                onChange={this.handleFormValueChange}\n\t                                onCursor={this.handleCursorChange}\n\t                                onFocus={this.handleActivateCell}\n\t                                readOnly={onSubmit == null}\n\t                                value={formValues[paraCode.id]}\n\t                                locked={lockedCell}\n\t                            />\n\t                        </Form>\n\t                    { additionalParams }\n\t                    { codeSnippetPanel }\n\t                    </div>\n\t                );\n\t                // The snippet toggle button text depends on whether the snippet\n\t                // selector is vizible or not\n\t                const buttonTitle = (snippetSelectorVisible) ? 'Hide' : 'Show';\n\t                codeSnippetButton = (\n\t                    <Button\n\t                        content={ buttonTitle + '  Code Examples' }\n\t                        icon='info'\n\t                        labelPosition='left'\n\t                        primary\n\t                        onClick={this.handleToggleSnippetSelector}\n\t                    />\n\t                );\n                }\n            } else if (isActiveCell) {\n            \tconst errorCss = (hasErrors) ? ' error' : '';\n                if (submitted) {\n                    // cell has been submitted but not put/post not done yet\n                    mainContent = (\n                        <div className={'module-form' + errorCss}>\n                           <ContentSpinner text=\"Submitting Cell\" size='small' />\n                        </div>\n                    );\n                }\n            \telse{\n\t            \tmainContent = (\n\t                    <div className={'module-form' + errorCss}>\n\t                        <p className={'module-form-header' + errorCss}>\n\t                            {selectedCommand.name}\n\t                        </p>\n\t                        <ModuleInputForm\n                                datasets={datasets}\n                                artifacts={artifacts}\n\t                            onChange={this.handleFormValueChange}\n\t                            selectedCommand={selectedCommand}\n\t                            serviceProperties={apiEngine.serviceProperties}\n\t                            values={formValues}\n\t                        />\n\t                    </div>\n\t                );\n            \t}\n            } else if ((cell.isNewCell())  && (selectedCommand != null)) {\n                mainContent = (\n                    <pre className='cell-cmd-text' onClick={onClick}>\n                        {selectedCommand.name}\n                    </pre>\n                );\n            } else if (cell.module != null) {\n                // If the cell is not a code cell, it is not being edited, and\n                // it is not a new cell then the cell has to have an associated\n                // workflow module. In this case we show the command text.\n                mainContent = (\n                    <pre className='cell-cmd-text' onClick={onClick}>\n                        {cell.module.text}\n                    </pre>\n                );\n            } \n        }\n        // Wrap main content in hotkey handler if submission of the form is\n        // allowed\n        let wrappedContent = null;\n        if (onSubmit != null) {\n            // Set hotkey handler to submit and dismiss a shown command input\n            // form.\n            const handlers = {\n              'runCell': this.handleSubmitForm,\n              'dismiss': this.handleDismiss,\n              'catchF5': this.handleF5Press\n            };\n            const keyMap = { runCell: 'ctrl+enter', dismiss: 'esc', catchF5: 'f5' };\n            wrappedContent = (\n                <HotKeys keyMap={keyMap} handlers={handlers}>\n                    { mainContent }\n                </HotKeys>\n            );\n        } else {\n            wrappedContent = mainContent;\n        }\n        // Add a list of action buttons if the cell is the active cell.\n        let buttons = null;\n        if ((isActiveCell) && (!showCommandsListing) && (!submitted)) {\n            buttons = (\n                <div className='module-form-buttons'>\n                    { codeSnippetButton }\n                    <span className='padding-lg'>\n                        <Button\n                            content='Change Command'\n                            icon='wrench'\n                            labelPosition='left'\n                            onClick={this.handleShowCommandsListing}\n                        />\n                    </span>\n                    <Button\n                        content='Dismiss'\n                        icon='close'\n                        labelPosition='left'\n                        negative\n                        onClick={this.handleDismiss}\n                    />\n                    <Button\n                        content='Submit'\n                        disabled={onSubmit == null}\n                        icon='paper plane outline'\n                        labelPosition='left'\n                        positive\n                        onClick={this.handleSubmitForm}\n                    />\n                </div>\n            );\n        }\n        return (\n            <div className='cell-command-area'>\n                { errorMessage }\n                { wrappedContent }\n                { buttons }\n            </div>\n        );\n    }\n}\n\n// -----------------------------------------------------------------------------\n// Helper Methods\n// -----------------------------------------------------------------------------\n\n\nexport default CellCommandArea;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, Icon } from 'semantic-ui-react';\nimport { INSERT_AFTER, INSERT_BEFORE } from '../../resources/Notebook';\nimport '../../../css/Notebook.css'\nimport { HATEOAS_MODULE_FREEZE, HATEOAS_MODULE_THAW } from '../../util/HATEOAS'\n\n/**\n * Dropdown menu for a notebook cell. Displays two icons with dropdown menus.\n * The first menu contains operations that are available for the cell. The\n * second menu allows to change the content that is being displayed in the cell\n * output area.\n */\nclass CellDropDownMenu extends React.Component {\n    static propTypes = {\n        cell: PropTypes.object.isRequired,\n        cellNumber: PropTypes.number.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        isNewNext: PropTypes.bool.isRequired,\n        isNewPrevious: PropTypes.bool.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onAddFilteredCommand: PropTypes.func.isRequired,\n        onCopyCell: PropTypes.func.isRequired,\n        onCreateBranch: PropTypes.func.isRequired,\n        onDeleteCell: PropTypes.func.isRequired,\n        onInsertCell: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        onFreezeCell: PropTypes.func.isRequired,\n        onThawCell: PropTypes.func.isRequired,\n    }\n    /**\n     * Insert new cell before the notebook cell that is associated with the\n     * menu.\n     */\n    handleInsertBefore = () => {\n        this.props.onInsertCell(INSERT_BEFORE);\n    }\n    /**\n     * Insert new cell after the notebook cell that is associated with the menu.\n     */\n    handleInsertAfter = () => {\n        this.props.onInsertCell(INSERT_AFTER);\n    }\n    render() {\n        const {\n            cell,\n            cellNumber,\n            isActiveCell,\n            isNewNext,\n            isNewPrevious,\n            notebook,\n            onAddFilteredCommand,\n            onCopyCell,\n            onCreateBranch,\n            onDeleteCell,\n            onSelectCell,\n            onFreezeCell,\n            onThawCell\n        } = this.props;\n        // If the cell is in pending or running state no menu is displayed. We\n        // only show an icon that depicts the cell status.\n        if (cell.isActive()) {\n            let icon = null;\n            if (cell.isPending()) {\n                icon = (<Icon name='hourglass half' title='Pending' />);\n            } else if (cell.isRunning()) {\n                icon = (<Icon name='circle notch' title='Running' />);\n            }\n            return (\n                <div className='cell-menu'>\n                { icon }\n                </div>\n            );\n        }\n        // Create list of dropdon menu items. The first section contains the\n        // cell actions edit, delete, insert cell (above/below) create new\n        // branch at this cell, and hide commands like this. If the notebook is\n        // read-only only the last teo items are shown\n        const dropdownItems = [];\n        //dropdownItems.push(<Dropdown.Header key='cell' content={'Cell (#' + cellNumber + ')'} />);\n        //dropdownItems.push(<Dropdown.Divider key='div1'/>);\n        if (!notebook.readOnly) {\n            dropdownItems.push(<Dropdown.Header key='header-cell' content=\"Cell\"/>);\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='edit'\n                    disabled={isActiveCell}\n                    icon='pencil'\n                    text='Edit'\n                    title={'Edit notebook cell #' + cellNumber}\n                    onClick={onSelectCell}\n                />\n            );\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='copy'\n                    disabled={isActiveCell}\n                    icon='copy'\n                    text='Copy'\n                    title={'Copy command from notebook cell #' + cellNumber}\n                    onClick={onCopyCell}\n                />\n            );\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='delete'\n                    disabled={notebook.hasActiveCells()}\n                    icon='trash'\n                    text='Delete'\n                    title={'Delete notebook cell #' + cellNumber}\n                    onClick={onDeleteCell}\n                />\n            );\n            dropdownItems.push(<Dropdown.Divider key='div-notebook'/>);\n            dropdownItems.push(<Dropdown.Header key='header-notebook' content=\"Notebook\"/>);\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='insert-above'\n                    disabled={isNewPrevious}\n                    icon='arrow circle up'\n                    text='Insert cell above'\n                    title={'Insert new notebook cell before cell #' + cellNumber}\n                    onClick={this.handleInsertBefore}\n                />\n            );\n            dropdownItems.push(\n                <Dropdown.Item\n                    key='insert-below'\n                    disabled={isNewNext}\n                    icon='arrow circle down'\n                    text='Insert cell below'\n                    title={'Insert new notebook cell after cell #' + cellNumber}\n                    onClick={this.handleInsertAfter}\n                />\n            );\n            if(cell.module.links.has(HATEOAS_MODULE_FREEZE)){\n                dropdownItems.push(\n                    <Dropdown.Item\n                        key='freeze-below'\n                        disabled={false}\n                        icon='snowflake'\n                        text='Freeze cells from here'\n                        title={'Freeze cell #' + cellNumber + ' and subsequent cells and keep them from executing'}\n                        onClick={onFreezeCell}\n                    />\n                );\n            };\n            if(cell.module.links.has(HATEOAS_MODULE_THAW)){\n                dropdownItems.push(\n                    <Dropdown.Item\n                        key='thaw-above'\n                        disabled={false}\n                        icon='sun'\n                        text='Thaw cells up to here'\n                        title={'Thaw cell #' + cellNumber + ' and preceding cells and update their outputs'}\n                        onClick={onThawCell}\n                    />\n                );\n            };\n            dropdownItems.push(<Dropdown.Divider key='div-branch'/>);\n        }\n        // Have a descriptive title that shows the user which cells will be\n        // included in the new branch\n        dropdownItems.push(<Dropdown.Header key='header-branch' content=\"Branch\"/>);\n        let branchRange = '1';\n        if (cellNumber > 1) {\n            branchRange += '-' + cellNumber;\n        }\n        dropdownItems.push(\n            <Dropdown.Item\n                key='branch'\n                disabled={notebook.hasActiveCells()}\n                icon='fork'\n                text='Create branch'\n                title={'Create new branch containing notebook cells [' + branchRange + ']'}\n                onClick={onCreateBranch}\n            />\n        );\n        dropdownItems.push(<Dropdown.Divider key='div-filter'/>);\n        dropdownItems.push(<Dropdown.Header key='header-filter' content=\"Filter\"/>);\n        dropdownItems.push(\n            <Dropdown.Item\n                key='hide-cmd'\n                icon='filter'\n                text={'Hide ' + cell.commandSpec.name}\n                title={'Hide all cells with command of type ' + cell.commandSpec.name + ' in the notebook'}\n                onClick={onAddFilteredCommand}\n            />\n        );\n        // If the cell is in an error state we show an additional icon that\n        // depicts the cell status\n        let cellStatusIcon = null;\n        if (cell.isErrorOrCanceled()) {\n            if (cell.isCanceled()) {\n                cellStatusIcon = (<Icon name='cancel' color='red' title='Canceled'/>);\n            } else if (cell.isError()) {\n                cellStatusIcon = (<Icon name='warning circle' color='red' title='Error' />);\n            }\n            cellStatusIcon = (\n                <div className='cell-status-icon'>{ cellStatusIcon }</div>\n            );\n        }\n        return (\n            <div>\n                <div className='cell-menu'>\n                    <Dropdown icon='bars' title='Cell actions'>\n                        <Dropdown.Menu>{dropdownItems}</Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                { cellStatusIcon }\n            </div>\n        );\n    }\n}\n\nexport default CellDropDownMenu;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent }  from 'react'\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types'\nimport {scaleOrdinal} from 'd3-scale';\n// ResponsiveContainer\nimport {BarChart, LineChart, AreaChart, ScatterChart, PieChart, RadarChart,\n    Line, Area, Bar, Scatter, Treemap, Pie, Cell, Radar, PolarGrid,\n    PolarAngleAxis, PolarRadiusAxis, RadialBarChart, RadialBar, XAxis, YAxis,\n    CartesianGrid, Tooltip, Legend, Brush} from 'recharts';\nimport { GridList, GridTile} from 'material-ui/GridList';\nimport { Checkbox, Dropdown } from 'semantic-ui-react';\nimport '../../../css/Chart.css'\n\nclass Plots extends React.Component {\n\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        identifier: PropTypes.string.isRequired,\n        onSelectCell: PropTypes.func\n    }\n\n    constructor(props){\n        super(props);\n        const dataset = props.dataset;\n        // Set grouped to true if only one data series is given (in this case\n        // the grouped checkbox is hidden) and grouped layout should be\n        // default.\n        this.state = {\n            chartType: dataset.chart.type,\n            grouped: (dataset.chart.grouped || (dataset.series.length === 1)),\n            width: 400\n        };\n        // Get list of series labels and set global color scale\n        this.labels = [];\n        for (let i = 0; i < dataset.series.length; i++) {\n            this.labels.push(dataset.series[i].label)\n        }\n        this.listColors = [\n            \"#1f77b4\", \"#ff7f0e\", \"#2ca02c\",\n            \"#d62728\", \"#c5b0d5\", \"#c49c94\",\n            \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\",\n            \"#9edae5\", \"#aec7e8\", \"#ffbb78\", \"#d62728\",\n            \"#9467bd\", \"#8c564b\", \"#e377c2\",\n            \"#7f7f7f\", \"#bcbd22\", \"#17becf\"\n        ];\n        this.colorScale = scaleOrdinal()\n            .domain(this.labels)\n            .range(this.listColors);\n    }\n    /**\n     * Add event handler to keep track of the container width.\n     */\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n    /**\n     * Keep track of the elements width to adjust charts on resize.\n     */\n    handleResize = (e) => {\n        // This seems to fail in some situations.\n        try {\n            let elem = ReactDOM.findDOMNode(this);\n            this.setState({\n                width: elem.offsetWidth\n            });\n        } catch (err) {\n        }\n    }\n    /**\n     * Handle selection of a chart type.\n     */\n    handleSelectChart = (event, { value }) => {\n        this.setState({'chartType': value});\n    }\n    /**\n     * Handle change of the grouped checkbox.\n     */\n    handleToggleGrouped = (e, { checked }) => {\n        this.setState({'grouped': checked});\n    }\n\n    /*\n     * Load data on the format:\n     *   data = [\n     *     { label: 'somethingA', values: [{x: 'SomethingA', y: 10}, {x: 'SomethingB', y: 4}, {x: 'SomethingC', y: 3}] },\n     *     { label: 'somethingB', values: [{x: 'SomethingA', y: 6}, {x: 'SomethingB', y: 8}, {x: 'SomethingC', y: 5}]  }\n     *  ];\n     *\n     * The format of the dataset object is expected to be:\n     * {\n     *     \"series\": [{\n     *         \"label\": \"string\",\n     *         \"data\": [0]\n     *     }],\n     *     \"xAxis\": {\n     *         \"data\": [0]\n     *    }\n     * }\n     */\n\n    fetchData(dataset) {\n        // Check if a data series for x-axis is given. If not we use 1-n as\n        // x-axis labels.\n        let xAxisName = 'x';\n        let xAxis = null;\n        if (dataset.xAxis !== undefined) {\n            xAxis = dataset.xAxis.data;\n        } else {\n            xAxis = [];\n            for (let i = 0; i < dataset.series[0].data.length; i++) {\n                xAxis.push(i + 1);\n            }\n        }\n        let values = [];\n        let global_data = {};\n        //let total_data = [];\n        let columnsNames = [];\n        columnsNames.push(xAxisName);\n        for (let j=0; j<dataset.series.length; j++) {\n          columnsNames.push(dataset.series[j].label.toString());\n        }\n        for (let i=0; i<xAxis.length; i++){\n            let data_i = {};\n            data_i[xAxisName] = xAxis[i];\n            for (let j=0; j<dataset.series.length; j++) {\n                const series = dataset.series[j];\n                let nameSerie = series.label.toString();\n                data_i[nameSerie] = series.data[i];\n                data_i[nameSerie+'_caveat'] = series.caveats ? series.caveats[i] : true;\n            }\n            values.push(data_i);\n            //\n        }\n        let sort_values = values.sort(function(a, b){return a.x - b.x});\n        //total_data = sort_values;\n        global_data['labels'] = columnsNames;\n        global_data['values'] = sort_values; //values;\n        return global_data;\n    }\n\n    /**\n     * Render a single chart or a GridList of charts (if grouped is true).\n     */\n    selectedReCharts = (nameChart, data_temp, grouped, width) => {\n        // Get function to plot chart of specified type. The result is undefined\n        // if the chartName is unknown.\n        const data = data_temp.values;\n        const labels = data_temp.labels; // array\n        const chart = this.selectedReChart(nameChart, labels, data);\n        if (chart === undefined) {\n            return null;\n        }\n        // grouped =false;\n        if (grouped) {\n            // If grouped we just plot one chart with the all the data series\n            return chart(data, width, grouped, '');\n        } else {\n            // Display a flex grids of individual charts for each data series.\n            const charts = [];\n            for (let i=1; i<data_temp.labels.length; i++) { //ignore xAxis\n                let yAxisName = data_temp.labels[i];\n                let data_ = data;\n                //data_.push(data[i]);\n                charts.push(<GridTile key={i}>{chart(data_, 400, grouped, yAxisName)}</GridTile>);\n            }\n            return <GridList\n                    cellHeight={this.props.gridList_cellHeight}\n                    cols={Math.floor(width / 400)}\n                    style={{width: {width}, height: this.props.gridList_height, overflowY: this.props.gridLis_overflowY,}}>\n                    {charts}\n                </GridList>;\n        }\n    }\n    \n    caveatDot = (props) => {\n    \t  const {\n    \t\t    cx, cy, payload, dataKey\n    \t\t  } = props;\n\n    \t\t  if (payload[dataKey + \"_caveat\"] === false) {\n    \t\t    return (\n    \t\t      /*<svg x={cx - 2} y={cy - 2} width={4} height={4} fill=\"red\" viewBox=\"0 0 4 4\">\n    \t\t        <path d=\"M 2 2 m -2 0 a 2 2 0 1 0 4 0 a 2 2 0 1 0 -4 0\"/> \n    \t\t      </svg>*/\n\t\t    \t  <svg x={cx - 10} y={cy - 10} width={18} height={18} fill=\"red\" viewBox=\"0 0 18 18\">\n\t\t            <text x={0} y={0} dy={18} fontSize={16} >{\"*\"}</text>\n\t\t          </svg>\n    \t\t    );\n    \t\t  }\n\n    \t\t  return (\n    \t\t    <svg x={cx} y={cy} width={0} height={0} fill=\"green\" viewBox=\"0 0 0 0\">\n    \t\t    </svg>\n    \t\t  );\n    \t\t};\n\n    \t\t\n    caveatLabels = (labels, idx) => { \n    \treturn (d) => d[labels[idx] + '_caveat']\n    }\n    /**\n     * Return a function that takes a list of data series and width as parameter\n     * and renders a chart of the type that is specified in chartName.\n     */\n    selectedReChart = (nameChart, labels, data) => {\n        var list = [];\n        var i=0;\n        if (nameChart === 'Area Chart') { // area chart\n            for (i=1; i<labels.length; i++) {\n              list.push(<Area key={'id_'+i} name={labels[i]} type=\"monotone\" dataKey={labels[i]} stackId=\"1\" connectNulls={false} stroke={this.listColors[i-1]} fillOpacity={1} fill={this.listColors[i-1]} />);\n            }\n            return (data, width, grouped, yAxisName) => (\n              <AreaChart width={width} height={400} data={data} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n                <XAxis dataKey=\"x\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend verticalAlign=\"top\" height={36} />\n                {\n                  grouped ?\n                  list\n                  : <Area type=\"monotone\" dataKey={yAxisName} stroke={this.listColors[0]} fillOpacity={1} fill={this.listColors[0]} />\n                }\n                <Brush />\n              </AreaChart>\n            );\n        } else if (nameChart==='Bar Chart') { // bar chart\n          for (i=1; i<labels.length; i++) {\n            list.push(<Bar key={'id_'+i} name={labels[i]} dataKey={labels[i]} fill={this.listColors[i-1]} label={<CaveatLabel caveats={data.map(this.caveatLabels(labels,i))} /> } /> );\n          }\n          return (data, width, grouped, yAxisName) => (\n            <BarChart width={width} height={400} data={data} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"x\" />\n              <YAxis />\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n              {\n                grouped ?\n                list\n                : <Bar id='id_' dataKey={yAxisName} fill={this.listColors[0]} label={<CaveatLabel caveats={data.map(d => d[yAxisName + '_caveat'])} />} />\n              }\n              <Brush />\n            </BarChart>\n          );\n        } else if (nameChart==='Line Chart') { // line chart\n          for (i=1; i<labels.length; i++) {\n            list.push(<Line key={'id_'+i} type=\"monotone\" name={labels[i]} dataKey={labels[i]} stroke={this.listColors[i-1]} dot={this.caveatDot} />);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <LineChart width={width} height={400} data={data} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"x\" />\n              <YAxis />\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n              {\n                grouped ?\n                list\n                : <Line type=\"monotone\" name={yAxisName} dataKey={yAxisName} stroke={this.listColors[0]} dot={this.caveatDot} />\n              }\n              <Brush />\n            </LineChart>\n          );\n        } else if (nameChart==='Scatter Plot') { // scatter plot\n          var dataScatterChart = []; // Creating array of object [{'x': , 'y':}, {'x': , 'y':}, ..., {'x': , 'y':}]\n          for (var index=1; index<labels.length; index++) {\n            var dataTemp = [];\n            for (i = 0; i < data.length; i++){\n                var instanceSP = { 'x':data[i][\"x\"], 'y':data[i][labels[index]] };\n                dataTemp.push(instanceSP);\n            }\n            dataScatterChart.push(dataTemp);\n          }\n          // Creating a scatter plot for each sub dataset\n          for (i=1; i<labels.length; i++) {\n            list.push(<Scatter key={'id_'+i} name={labels[i]} data={dataScatterChart[i-1]} fill={this.listColors[i-1]} /> );\n          }\n          return (data, width, grouped, yAxisName) => (\n            <ScatterChart width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis type=\"number\" dataKey={'x'} />\n      \t      <YAxis type=\"number\" dataKey={'y'} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Legend verticalAlign=\"top\" height={36} />\n              {\n                grouped ?\n                list\n                : <Scatter name={yAxisName} data={dataScatterChart[labels.indexOf(yAxisName)-1]} fill={this.listColors[0]} />\n              }\n            </ScatterChart>\n          );\n        } else if (nameChart==='Pie Chart') { // Pie Chart\n          for (i=1; i<labels.length; i++) {\n            list.push(<Pie key={'id_'+i} nameKey='x' data={data} dataKey={labels[i]} cx=\"50%\" cy=\"50%\" innerRadius={0} fill=\"#8884d8\" label >\n                      {\n                        data.map((entry, index) => (\n                          <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                        ))\n                      }\n                      </Pie>);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <PieChart width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              {\n                grouped ?\n                list\n                : <Pie nameKey='x' data={data} dataKey={yAxisName} cx=\"50%\" cy=\"50%\" innerRadius={0} fill=\"#8884d8\" label >\n                    {\n                      data.map((entry, index) => (\n                        <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                      ))\n                    }\n                  </Pie>\n              }\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n            </PieChart>\n          );\n        } else if (nameChart==='Donut Chart') { // Donut Chart\n          for (i=1; i<labels.length; i++) {\n            list.push(<Pie key={'id_'+i} nameKey='x' data={data} dataKey={labels[i]} cx=\"50%\" cy=\"50%\" innerRadius={\"20%\"} outerRadius={80}  fill=\"#8884d8\" label >\n                      {\n                        data.map((entry, index) => (\n                          <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                        ))\n                      }\n                      </Pie>);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <PieChart width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              {\n                grouped ?\n                list\n                : <Pie nameKey='x' data={data} dataKey={yAxisName} cx=\"50%\" cy=\"50%\" innerRadius={\"20%\"} outerRadius={80} fill=\"#8884d8\" label >\n                    {\n                      data.map((entry, index) => (\n                        <Cell key={index} fill={this.listColors[index % this.listColors.length]}  />\n                      ))\n                    }\n                  </Pie>\n              }\n              <Tooltip />\n              <Legend verticalAlign=\"top\" height={36} />\n            </PieChart>\n          );\n        }else if (nameChart==='Radar Chart') { // Radar Chart\n          var dataRadarChart = []; // Adding unique id for each record\n            for (i = 0; i < data.length; i++){\n              var instanceRC = {};\n              instanceRC['id']='id'+i+'_'+data[i][\"x\"];\n              for (var indexRC=0; indexRC<labels.length; indexRC++) {\n                  instanceRC[labels[indexRC]]=data[i][labels[indexRC]];\n              }\n              dataRadarChart.push(instanceRC);\n            }\n          for (i=1; i<labels.length; i++) {\n            list.push(<Radar key={'id_'+i} name={labels[i]} dataKey={labels[i]} stroke={this.listColors[i-1]} fill={this.listColors[i-1]} fillOpacity={0.6} />);\n          }\n          return (data, width, grouped, yAxisName) => (\n            <RadarChart outerRadius={90} width={400} height={400} data={dataRadarChart} margin={{top: 10, bottom: 50, left: 50, right: 10}}>\n              <PolarGrid />\n              <PolarAngleAxis dataKey=\"id\" />\n              <PolarRadiusAxis/>\n              {\n                grouped ?\n                list\n                :\n                <Radar name={yAxisName} dataKey={yAxisName} stroke={this.listColors[0]} fill={this.listColors[0]} fillOpacity={0.6} />\n              }\n              <Tooltip/>\n              <Legend onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} />\n            </RadarChart>\n          );\n        } else if (nameChart==='Radial Bar Chart') { // Radial Bar Chart\n          return (data, width, grouped, yAxisName) => (\n            // add a column 'name' in the data.\n            <RadialBarChart width={width} height={400} data={data} cx={150} cy={150} innerRadius={20} outerRadius={140} barSize={10}>\n              <RadialBar minAngle={15} label={{ position: 'insideStart', fill: '#fff' }} background clockWise={true} dataKey={yAxisName}/>\n              <Legend iconSize={10} width={120} height={140} layout='vertical' verticalAlign='middle' wrapperStyle={{top: 0, left: 350, lineHeight: '24px'}} />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            </RadialBarChart>\n          );\n        } else if (nameChart==='Treemap') { // Treemap\n          return (data, width, grouped, yAxisName) => (\n            <Treemap width={width} height={400} margin={{top: 10, bottom: 50, left: 50, right: 10}}\n              data={data}\n              dataKey={yAxisName}\n              ratio={4 / 3}\n              stroke=\"#fff\"\n              fill=\"#8884d8\"\n            >\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            </Treemap>\n          );\n        }\n    }\n    render() {\n\n        const { dataset, identifier, onSelectCell } = this.props;\n        // Return null if the dataset is empty\n        if (dataset.series.length === 0) {\n            return null;\n        }\n        const { chartType, grouped, width } = this.state;\n\n        //var data = this.loadData(dataset);\n        var data = this.fetchData(dataset);\n        //var chart = this.selectedCharts(chartType, data, grouped, width);\n        var chart = this.selectedReCharts(chartType, data, grouped, width);\n\n        const options = [];\n        for (let i = 0; i < this.props.charts.length; i++) {\n          options.push({\n              key: i,\n              text: this.props.charts[i],\n              value: this.props.charts[i]\n          })\n        }\n        // Show a 'grouped' checkbox if the dataset has more than one data\n        // series.\n        let groupedCheckbox = null;\n        if (dataset.series.length > 1) {\n            groupedCheckbox = (\n                <td className='plot-form-check'>\n                    <Checkbox\n                        checked={grouped}\n                        label='Grouped'\n                        onChange={this.handleToggleGrouped}\n                    />\n                </td>\n            );\n        }\n        return (\n            <div>\n                <div className='plot-menu'>\n                    <table className='plot-form-table'><tbody><tr>\n                        <td className='plot-form-label' onClick={onSelectCell}>{\"Charts\"}</td>\n                        <td className='plot-form-dropdown'>\n                            <Dropdown\n                                text={chartType}\n                                selection\n                                fluid\n                                scrolling\n                                options={options}\n                                onChange={this.handleSelectChart}\n                            />\n                        </td>\n                        { groupedCheckbox }\n                    </tr></tbody></table>\n                </div>\n                  <div id={identifier} className='plot-view' onClick={onSelectCell}>\n                  <div>\n                      {chart}\n                  </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass CaveatLabel extends PureComponent {\n\t  render() {\n\t    const {\n\t      x, y, caveats, index,\n\t    } = this.props;\n        if(caveats[index] === false){\n\t\t    return (\n\t\t\t\t<svg x={x - 6} y={y - 6} width={14} height={14} fill=\"red\" viewBox=\"0 0 14 14\">\n\t\t          <text x={0} y={0} dy={14} fontSize={16} >{\"*\"}</text>\n\t\t        </svg>\n\t\t    );\n        }\n        else{\n        \treturn <text></text>;\n        }\n\t  }\n\t}\n\nPlots.defaultProps = {\n    x:0,\n    y:0,\n    gridList_cellHeight:400,\n    gridList_width:1000,\n    gridList_height:450,\n    gridLis_overflowY:'auto',\n    colorText:'black',\n    charts : [\n        \"Area Chart\",\n        \"Bar Chart\",\n        \"Line Chart\",\n        \"Scatter Plot\",\n        \"Pie Chart\",\n        \"Donut Chart\",\n        \"Radar Chart\",\n        \"Radial Bar Chart\",\n        \"Treemap\"\n    ],\n};\n/*<p>Got data for {this.props.rows.length} row(s) and {this.props.schema.series.length} data series</p>*/\n\n\nexport default Plots\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Plots from './Plots';\nimport '../../../css/Chart.css';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { Button, Icon } from 'semantic-ui-react';\nimport '../../../css/App.css';\nimport '../../../css/Chart.css';\nimport '../../../css/Notebook.css';\n\n\n/*\n * Plot a dataset chart for given data.\n */\n\nclass DatasetChart extends React.Component {\n    /*\n     * The format of the given dataset object is as follows:\n     *\n     * \"series\": {\n     *   \"label\": \"string\",\n     *   \"data\": [0]\n     *  },\n     * \"xAxis\": {\n     *   \"data\": [0]\n     * },\n     * \"chart\": {\n     *   \"type\": \"string\",\n     *   \"grouped\": true,\n     * }\n }\n     */\n\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        identifier: PropTypes.string.isRequired,\n        onSelectCell: PropTypes.func\n    }\n\n    /**\n     * Export chart as a PDF. Generating a PDF file from react component which contains the chart.\n     */\n    generatePDF = () => {\n        const { identifier } = this.props\n        const plotName = 'plot_' + identifier\n        const input = document.getElementById(plotName);\n        html2canvas(input)\n          .then((canvas) => {\n            const imgData = canvas.toDataURL('image/png');\n            const pdf = new jsPDF({\n              orientation: 'landscape',\n              unit: 'in'\n            });\n            pdf.addImage(imgData, 'JPEG', 0, 0);\n            pdf.save(plotName + \".pdf\");\n          })\n        ;\n    }\n    render() {\n        const { dataset, identifier, onSelectCell } = this.props\n        const plotName = 'plot_' + identifier\n        if (dataset !== undefined) {\n            return (\n                <div>\n                    <div className='output-header' onClick={onSelectCell}>\n                        <span className='header-name'>{identifier}</span>\n                    </div>\n                    <div className='plot'>\n                        <Plots\n                            key={identifier}\n                            identifier={plotName}\n                            dataset={dataset}\n                            onSelectCell={onSelectCell}\n                        />\n                    </div>\n                    <div className='chart-download-btn'>\n                        <Button size='small' color='green' onClick={this.generatePDF}>\n                            <Icon name='download' />\n                            Download Chart\n                        </Button>\n                    </div>\n                </div>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default DatasetChart\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { KEY, MOVE, valueOrDefault } from '../../../util/App';\nimport '../../../../css/Spreadsheet.css'\n\n\nconst CTRL_ID = 'spreadsheet_input_ctrl'\n\n\nclass GridInput extends React.Component {\n    static propTypes = {\n        cellValue: PropTypes.oneOfType([\n             PropTypes.string,\n             PropTypes.number\n         ]),\n         onMove: PropTypes.func.isRequired,\n         onUpdate: PropTypes.func.isRequired\n    };\n    constructor(props) {\n        super(props);\n        // Keep the current value in the local state.\n        const { cellValue } = props;\n        this.state = { value: valueOrDefault(cellValue, '') };\n    }\n    componentDidMount() {\n        const { value } = this.state;\n        this.setFocus(value);\n    }\n\n    onKeyDown = (event) => {\n        const { cellValue, onMove, onUpdate } = this.props;\n        const {ctrlKey, keyCode, shiftKey} = event;\n        if (keyCode === KEY.ENTER) {\n            event.preventDefault();\n            onMove(MOVE.DOWN);\n        } else if (keyCode === KEY.TAB) {\n            event.preventDefault();\n            if (shiftKey) {\n                onMove(MOVE.LEFT);\n            } else {\n                onMove(MOVE.RIGHT);\n            }\n        } else if (keyCode === KEY.UP) {\n            event.preventDefault();\n            onMove(MOVE.UP);\n        } else if (keyCode === KEY.DOWN) {\n            event.preventDefault();\n            onMove(MOVE.DOWN);\n        } else if (keyCode === KEY.ESC) {\n            event.preventDefault();\n            const defaultValue = valueOrDefault(cellValue, '');\n            this.setState(\n                { value: defaultValue },\n                () => (this.setFocus(defaultValue))\n            );\n            onUpdate(defaultValue);\n        } else if ((ctrlKey) && (keyCode === KEY.NULL)) {\n            event.preventDefault();\n            this.setState({ value: '', isNull: true });\n            onUpdate(null);\n        }\n    }\n    /**\n     * Update the local state when value in text control changes.\n     */\n    onChange = (event) => {\n        const { onUpdate } = this.props;\n        const value = event.target.value;\n        this.setState({ value });\n        onUpdate(value);\n    }\n    /**\n     * Set focus in text control and select he full value.\n     */\n    setFocus(value) {\n        const el = document.getElementById(CTRL_ID);\n        el.focus();\n        // At the moment we select the full value. Could set the cursor to the\n        // end alternatively.\n        el.setSelectionRange(0, value.toString().length);\n    }\n    /**\n     * Show a text control to edit the cell value.\n     */\n    render() {\n        const { value } = this.state;\n        return (\n            <input\n                className='spreadsheet-input'\n                id={CTRL_ID}\n                value={value}\n                onKeyDown={this.onKeyDown}\n                onChange={this.onChange}\n            />\n        );\n    }\n}\n\nexport default GridInput;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport GridInput from './GridInput';\nimport { Icon } from 'semantic-ui-react';\n\nclass GridCell extends React.Component {\n    static propTypes = {\n        column: PropTypes.object.isRequired,\n        columnIndex: PropTypes.number.isRequired,\n        hasAnnotations: PropTypes.bool.isRequired,\n        isActive: PropTypes.bool.isRequired,\n        isUpdating: PropTypes.bool.isRequired,\n        rowId: PropTypes.string.isRequired,\n        rowIndex: PropTypes.number,\n        value: PropTypes.oneOfType([\n             PropTypes.string,\n             PropTypes.number,\n             PropTypes.bool\n         ]),\n         onClick: PropTypes.func,\n         onMove: PropTypes.func,\n         onUpdate: PropTypes.func,\n         onFetchAnnotations: PropTypes.func\n    }\n    /**\n     * Submit changes to the cell value if a onUpdate handler is given.\n     */\n    handleChange = (value) => {\n        const { onUpdate } = this.props;\n        if (onUpdate != null) {\n            onUpdate(value);\n        }\n    }\n    /**\n     * Cell click handler. Check if a onClick handler was provided from the\n     * parent. Call it with the cell id and coordinates.\n     */\n    handleClick = () => {\n        const { column, columnIndex, rowId, rowIndex, onClick } = this.props;\n        if (onClick != null) {\n            onClick(column.id, rowId, columnIndex, rowIndex);\n        }\n    }\n    /**\n     * Active cell move handler. Call the provided handler (if given).\n     */\n    handleMove = (direction) => {\n        const { onMove } = this.props;\n        if (onMove != null) {\n            onMove(direction);\n        }\n    }\n    /**\n     * Cell info click handler. Check if a onFetchAnnotations handler was provided from the\n     * parent. Call it with the cell id and coordinates.\n     */\n    handleFetchAnnotations = () => {\n        const { columnIndex, rowId, onFetchAnnotations } = this.props;\n        if (onFetchAnnotations != null) {\n        \tonFetchAnnotations(columnIndex, rowId);\n        }\n    }\n    render() {\n        const { hasAnnotations, isActive, isUpdating, value, onUpdate } = this.props;\n        // The cell style depends on whether the column is active or not.\n        let cellCss = 'grid-cell';\n        let annoIcon = null;\n        if (isActive) {\n            cellCss += ' active';\n        } else if (isUpdating) {\n            cellCss += ' updating';\n        }\n        if (hasAnnotations) {\n            cellCss += ' highlight';\n            annoIcon = ( <Icon\n\t            className='icon-button annotations-icon'\n\t            title='Caveats'\n\t            name='question circle outline'\n\t            onClick={this.handleFetchAnnotations}\n\t        />);\n        }\n        // The cell value depends on whether the cell is active and updatable\n        let cellValue = null;\n        // Get a string representation of the cell value. The value could be a\n        // number, boolean, string or null.\n        let strValue = null;\n        if (value == null) {\n            strValue = '';\n        } else {\n            strValue = value.toString();\n        }\n        if ((isActive) && (onUpdate != null)) {\n            cellValue = (\n                <GridInput\n                    cellValue={strValue}\n                    onMove={this.handleMove}\n                    onUpdate={this.handleChange}\n                />\n            );\n        } else {\n            if (value == null) {\n                cellCss += '  is-null';\n            }\n            cellValue = (<div className='cell-value' onClick={this.handleClick}>{strValue}</div>);\n        }\n        return (\n            <td className={cellCss} >\n                {annoIcon}\n                {cellValue}\n            </td>\n        );\n    }\n}\n\nGridCell.defaultProps = {\n    isActive: false,\n    isUpdating: false\n}\n\nexport default GridCell;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\nimport { VIZUAL } from '../../../util/Vizual';\n\n/**\n * Dropdown menu for spreadsheet rows. Calls respective spreadsheet methods\n * when menu items are clicked.\n */\n\nclass RowDropDown extends React.Component {\n    static propTypes = {\n        disabled: PropTypes.bool.isRequired,\n        rowId: PropTypes.number.isRequired,\n        rowIndex: PropTypes.number.isRequired,\n        onAction: PropTypes.func.isRequired\n    }\n    /**\n     * Call spreadsheet delete row method.\n     */\n    deleteRow = () => {\n        const { rowId, onAction } = this.props\n        onAction(VIZUAL.DELETE_ROW, rowId);\n    }\n    /**\n     * Call spreadsheet insert row method.\n     */\n    insertRowAbove = () => {\n        const { rowIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_ROW, rowIndex);\n    }\n    /**\n     * Call spreadsheet insert row method.\n     */\n    insertRowBelow = () => {\n        const { rowIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_ROW, (rowIndex + 1));\n    }\n    /**\n     * Call spreadsheet move row method.\n     */\n    moveRow = () => {\n        const { rowId, onAction } = this.props\n        onAction(VIZUAL.MOVE_ROW, rowId);\n    }\n    render() {\n        // rowId = the unique, global identifier for the row\n        // rowIndex = the position of the row in the dataset\n        const { disabled } = this.props;\n        return (\n            <Dropdown disabled={disabled} floating>\n                <Dropdown.Menu>\n                    <Dropdown.Item\n                        icon='arrow up'\n                        content='Insert row above'\n                        onClick={this.insertRowAbove}\n                    />\n                    <Dropdown.Item\n                        icon='arrow down'\n                        content='Insert row below'\n                        onClick={this.insertRowBelow}\n                    />\n                    <Dropdown.Item\n                        icon='trash'\n                        content='Delete row'\n                        onClick={this.deleteRow}\n                    />\n                    <Dropdown.Item\n                        icon='move'\n                        content='Move row'\n                        onClick={this.moveRow}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default RowDropDown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport RowDropDown from '../menu/RowDropDown';\nimport '../../../../css/Spreadsheet.css';\nimport { Droppable } from 'react-drag-and-drop'\nimport { Icon } from 'semantic-ui-react';\nimport {\n    VIZUAL\n} from '../../../util/Vizual';\n\n/**\n * Left-hand column in the grid that contains the row index and context menu.\n */\nclass RowIndexCell extends React.Component {\n    static propTypes = {\n        disabled: PropTypes.bool.isRequired,\n        rowIndex: PropTypes.number.isRequired,\n        rowId: PropTypes.string.isRequired,\n        value: PropTypes.oneOfType([\n             PropTypes.string,\n             PropTypes.number\n         ]),\n         onAction: PropTypes.func,\n         onClick: PropTypes.func,\n         onMoveAction: PropTypes.func,\n         isSpreadsheet: PropTypes.bool\n    }\n    \n    handleMoveDropBefore = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_ROW,  parseInt(dropData['row-index-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    handleMoveDropAfter = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_ROW,  parseInt(dropData['row-index-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    /**\n     * Render grod column as Html table header cell.\n     */\n    render() {\n        const { disabled, rowIndex, rowId, value, onAction, onClick, isSpreadsheet } = this.props;\n        // Show a dropdown menu if onAction method is provided\n        let dropdown = null;\n        let dropTargetType = 'none';\n        let dropTargetBefore = null;\n        let dropTargetAfter = null;\n        \n        if (onAction != null) {\n            dropdown = (\n                <RowDropDown\n                    disabled={disabled}\n                    key={rowId}\n                    rowId={rowId}\n                    rowIndex={rowIndex}\n                    onAction={onAction}\n                />\n            );\n        }\n        if ((rowIndex !== -1) && (isSpreadsheet)){\n        \tdropTargetType = 'row-index-cell';\n        \tdropTargetBefore = (\n        \t\t<Droppable\n \t\t            types={[dropTargetType]}\n        \t\t    data={rowIndex}\n        \t\t    onDrop={this.handleMoveDropBefore}>\n \t\t            <div className=\"row-drop-before\" ><Icon\n \t\t\t            className='icon-button row-index-drop-target'\n \t\t\t            title='<- Move Row Drop'\n \t\t\t            name='bullseye'\n \t\t\t        /></div>\n                 </Droppable>\n        \t)\n        \tdropTargetAfter = (\n        \t\t<Droppable\n \t\t            types={[dropTargetType]}\n        \t\t    data={rowIndex}\n    \t\t        onDrop={this.handleMoveDropAfter}>\n \t\t            <div className=\"row-drop-after\" ><Icon\n \t\t\t            className='icon-button row-index-drop-target'\n \t\t\t            title='Move Row Drop ->'\n \t\t\t            name='bullseye'\n \t\t\t        /></div>\n                 </Droppable>\n        \t)\n        }\n        return (\n            <td className='grid-row-index' onClick={onClick}>\n              <div >\n                {dropTargetBefore}\n\t            <div className=\"row-index-content\" >\n\t\t            { value }\n\t            </div>\n                { dropdown }\n                {dropTargetAfter}\n              </div>\n            </td>\n        );\n    }\n}\n\nRowIndexCell.defaultProps = {\n    disabled: false,\n    rowIndex: -1\n}\n\n\nexport default RowIndexCell;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Header, Button, Popup, Grid, Dropdown, Icon, GridColumn } from 'semantic-ui-react'\nimport { HATEOAS_DATASET_DOWNLOAD } from '../../../util/HATEOAS'\n\n/**\n * Dropdown menu for spreadsheets in the content header. Includes items to\n * download the dataset and to copy the dataset URL to the clipboard.\n */\n\nclass SpreadsheetDropDown extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        moduleId: PropTypes.string.isRequired,\n        downloadLimit: PropTypes.number.isRequired,\n        onRecommendAction: PropTypes.func\n    }\n\n    /**\n     * Copy dataset download URL to the clipboard.\n     */\n    handleCopy = () => {\n        const { dataset } = this.props\n        const downloadUrl = dataset.links.get(HATEOAS_DATASET_DOWNLOAD)\n        const textField = document.createElement('textarea');\n        textField.innerText = downloadUrl;\n        document.body.appendChild(textField);\n        textField.select();\n        document.execCommand('copy');\n        textField.remove();\n    }\n    /**\n     * Open a new window with the dataset URL to download the data in CSV\n     * format if row count less than the allowed value. If not, recommend the UNLOAD DATASET cell\n     */\n    handleDownload = () => {\n        const { dataset, downloadLimit } = this.props;\n        if (dataset.rowCount <= downloadLimit){\n            const downloadUrl = dataset.links.get(HATEOAS_DATASET_DOWNLOAD)\n            window.open(downloadUrl);\n        }\n    };\n    /**\n     * Handles the edit spreadsheet selection\n     */\n    handleEditSpreadsheet = () => {\n        const { dataset, onEditSpreadsheet, moduleId } = this.props;\n        onEditSpreadsheet(dataset, moduleId)\n    }\n    render() {\n        const { dataset, downloadLimit, onRecommendAction } = this.props;\n        let downloadDropdown = <Popup trigger={<Dropdown.Item\n            key={'download'}\n            icon='download'\n            text='Download File'\n            title='Download dataset as CSV file'\n            onClick={this.handleDownload}\n        />}\n                                      on='click'\n                                      disabled = {dataset.rowCount <= downloadLimit}\n                                      hoverable\n                                      basic>\n            <Grid centered>\n                <GridColumn textAlign='center'>\n                    <Header as='h4' icon textAlign='center'>\n                        <Icon name='times circle' />\n                    </Header>\n                    <p>\n                        {'The dataset exceeds the allowed limit of ' + downloadLimit + ' rows. It is recommended to export large datasets using the Unload Cell.'}\n                    </p>\n                    <Button color='blue' content='Unload' onClick={() => onRecommendAction('data','unload')} />\n                </GridColumn>\n            </Grid>\n        </Popup>;\n\n        return <React.Fragment>\n            <Dropdown icon='download' title='Download dataset'>\n                <Dropdown.Menu>\n                    {downloadDropdown}\n                    <Dropdown.Item\n                        key={'copy-link'}\n                        icon='linkify'\n                        text='Copy URL to Clipboard'\n                        title='Copy shareable dataset URL to clipboard'\n                        onClick={this.handleCopy}\n                    />\n                    <Dropdown.Item\n                        key={'edit'}\n                        icon='edit'\n                        text='Edit as Spreadsheet'\n                        title='Open spreadsheet view to edit the dataset'\n                        onClick={this.handleEditSpreadsheet}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        </React.Fragment>\n    }\n}\n\nexport default SpreadsheetDropDown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon } from 'semantic-ui-react'\nimport '../../../css/Scrollbar.css'\n\n\n/**\n * Buttons on the scrollbar.\n */\nclass ScrollButton extends React.Component {\n    static propTypes = {\n        enabled: PropTypes.bool.isRequired,\n        icon: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired\n    }\n    render() {\n        const { enabled, icon, title } = this.props;\n        // The button style depends on whether the button is enabled or\n        // disabled\n        let css = 'scroll-icon';\n        let onClick = this.props.onClick;\n        if (!enabled) {\n            css += '-disabled';\n            onClick = null;\n        }\n        return (\n            <div className={css}>\n                <Icon\n                    disabled={!enabled}\n                    name={icon}\n                    onClick={onClick}\n                    size='small'\n                    title={title}\n                />\n            </div>\n        );\n    }\n}\n\n/**\n * Vertical scrollbar for spreadsheets. By now this is experimental. Allows to\n * navigate to (i) the beginning or the end of the spreadsheet, (ii) the next\n * or previous page, (iii) the next or previous row, or (iv) to a given row.\n *\n * At this point the scrollbar is rendered as a horizontal group of clickable\n * icons.\n */\nclass SpreadsheetScrollbar extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        onNavigate: PropTypes.func.isRequired,\n        cellLimit: PropTypes.number.isRequired\n    }\n    constructor(props) {\n        super(props);\n        const { dataset, cellLimit } = props;\n        this.state = {\n            limit: cellLimit,\n            maxValue: Math.max(0, dataset.rowCount - cellLimit)\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { dataset, cellLimit } = this.props;\n        const { limit, maxValue } = this.state;\n        const m = Math.max(0, dataset.rowCount - cellLimit);\n        if ((limit !== cellLimit || (maxValue !== m))){\n            this.setState({\n                limit: cellLimit,\n                maxValue: Math.max(0, dataset.rowCount - cellLimit)\n            })\n        }\n    }\n    /**\n     * Scroll to the beginning of the dataset.\n     */\n    handleNavigateFirstPage = () => {\n        const { dataset, onNavigate } = this.props;\n        onNavigate(dataset, 0, this.state.limit);\n    }\n    /**\n     * Scroll to the end of the dataset.\n     */\n    handleNavigateLastPage = () => {\n        const { dataset, onNavigate } = this.props;\n        const { maxValue, limit } = this.state;\n        onNavigate(dataset, maxValue, limit);\n    }\n    /**\n     * Scroll one page down.\n     */\n    handleNavigateNextPage = () => {\n        const { dataset, onNavigate } = this.props;\n        const { maxValue, limit } = this.state;\n        const offset = dataset.offset;\n        onNavigate(dataset, Math.min(maxValue, offset + limit), limit)\n    }\n    /**\n     * Scroll one row down.\n     */\n    handleNavigateNextRow = () => {\n        const { dataset, onNavigate } = this.props;\n        const { maxValue, limit } = this.state;\n        const offset = dataset.offset;\n        onNavigate(dataset, Math.min(maxValue, offset + 1), limit);\n    }\n    /**\n     * Scroll one page up.\n     */\n    handleNavigatePreviousPage = () => {\n        const { dataset, onNavigate } = this.props;\n        const offset = dataset.offset;\n        const limit = this.state.limit;\n        onNavigate(dataset, Math.max(0, offset - limit), limit);\n    }\n    /**\n     * Scroll one row up.\n     */\n    handleNavigatePreviousRow = () => {\n        const { dataset, onNavigate } = this.props;\n        const offset = dataset.offset;\n        onNavigate(dataset, Math.max(0, offset - 1), this.state.limit);\n    }\n    render() {\n        const { dataset } = this.props;\n        const value = dataset.offset;\n        const hasPrevious = (value !== 0);\n        const hasNext = (value < this.state.maxValue);\n        let scrollbar = null;\n        if (hasPrevious || hasNext) {\n            scrollbar = (\n                <div>\n                    <div className='vertical-scroll-top'>\n                        <ScrollButton\n                            enabled={hasPrevious}\n                            icon='arrow up'\n                            onClick={this.handleNavigateFirstPage}\n                            title='First page'\n                        />\n                        <ScrollButton\n                            enabled={hasPrevious}\n                            icon='angle double up'\n                            onClick={this.handleNavigatePreviousPage}\n                            title='Previous page'\n                        />\n                        <ScrollButton\n                            enabled={hasPrevious}\n                            icon='caret up'\n                            title='Previous row'\n                            onClick={this.handleNavigatePreviousRow}\n                        />\n                    </div>\n                    <div className='vertical-scroll-down'>\n                        <ScrollButton\n                            enabled={hasNext}\n                            icon='caret down'\n                            title='Next row'\n                            onClick={this.handleNavigateNextRow}\n                        />\n                        <ScrollButton\n                            enabled={hasNext}\n                            icon='angle double down'\n                            title='Next page'\n                            onClick={this.handleNavigateNextPage}\n                        />\n                        <ScrollButton\n                            enabled={hasNext}\n                            icon='arrow down'\n                            onClick={this.handleNavigateLastPage}\n                            title='Last page'\n                        />\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className='vertical-scroll'>\n            { scrollbar }\n            </div>\n        )\n    }\n}\n\nexport default SpreadsheetScrollbar\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport '../../../../css/App.css'\nimport '../../../../css/Notebook.css'\nimport '../../../../css/Spreadsheet.css'\n\nimport styled from 'styled-components';\nimport { Loader } from 'semantic-ui-react'\nimport {\n    CartesianGrid,\n    Tooltip,\n    XAxis,\n    YAxis,\n    BarChart,\n    Bar,\n    Legend,\n  } from 'recharts';\nconst Centered = styled.div`\n  text-align: center;\n`;\n\n/**\n *Plots are created using Recharts which is a redefined chart library built with React and D3.\n */\n\nclass D3BasedPlot extends React.Component {\n\n    render() {\n        const { column, profiledData, isLoadingPlot } = this.props;\n        // Grid header\n        let dataPlot = undefined; // [{}];\n        for (let property of profiledData.columns){\n            if (property.column.id === column.id){\n                dataPlot= property;\n                break;\n            }\n        }\n        return (\n            <div>\n            {\n                dataPlot\n                ?\n                <Centered>\n                    <BarChart\n                        width={250}\n                        height={180}\n                        data={dataPlot.values}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"count\" fill=\"steelblue\" />\n                    </BarChart>\n                </Centered>\n                :\n                isLoadingPlot\n                ?\n                <Loader active inline='centered'  content='Loading'  />\n                :\n                <p/>\n            }\n            </div>\n        );\n    }\n}\n\nexport default D3BasedPlot;\n\n// TODO: Support other type of data like text. Currently, just bar plots are generated for numerical data types.\n/* <ColumnDistributionPlot\n    data={columnDataInfo}\n    showXLabel={false}\n    showYLabel={false}\n    showInfo={false}\n/> */","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { VegaLite } from 'react-vega';\nimport '../../../../css/App.css'\nimport '../../../../css/Notebook.css'\nimport '../../../../css/Spreadsheet.css'\n\nimport styled from 'styled-components';\nimport { Loader } from 'semantic-ui-react'\n\nconst Centered = styled.div`\n  text-align: center;\n`;\n\n/**\n *Plots are created using Recharts which is a redefined chart library built with React and D3.\n */\n\nfunction getEncoding(typePlot) {\n    const yContent = {\n      field: 'count',\n      type: 'quantitative',\n      title: null,\n    };\n    if (typePlot === 'histogram_numerical') {\n      return {\n        y: yContent,\n        x: {\n          title: null,\n          bin: { binned: true },\n          field: 'bin_start',\n          type: 'quantitative',\n        },\n        x2: {\n          field: 'bin_end',\n        },\n        tooltip: [\n          { field: 'bin_start', title: 'start', type: 'quantitative' },\n          { field: 'bin_end', title: 'end', type: 'quantitative' },\n        ],\n      };\n    } else if (typePlot === 'histogram_temporal') {\n      return {\n        y: yContent,\n        x: {\n          title: null,\n          bin: { binned: true },\n          field: 'date_start',\n          type: 'temporal',\n          utc: true,\n        },\n        x2: {\n          field: 'date_end',\n        },\n        tooltip: [\n          { field: 'date_start', title: 'start', type: 'temporal' },\n          { field: 'date_end', title: 'end', type: 'temporal' },\n        ],\n      };\n    } else if (typePlot === 'histogram_categorical') {\n      return {\n        y: yContent,\n        x: {\n          title: null,\n          field: 'bin',\n          type: 'ordinal',\n          sort: { order: 'descending', field: 'count' },\n        },\n        tooltip: { field: 'bin', type: 'ordinal' },\n      };\n    } else if (typePlot === 'histogram_text') {\n      return {\n        y: {\n          field: 'bin',\n          type: 'ordinal',\n          title: null,\n        },\n        x: {\n          title: null,\n          field: 'count',\n          type: 'quantitative',\n          sort: { order: 'descending', field: 'count' },\n        },\n        tooltip: [\n          { field: 'bin', type: 'ordinal' },\n          { field: 'count', type: 'quantitative' },\n        ],\n      };\n    } else {\n      console.log('Unknown plot type ', typePlot);\n      return;\n    }\n}\n\nfunction getSpecification(typePlot) {\n    const specification = {\n        width: '120',\n        height: '120',\n        data: { name: 'values' },\n        config: {\n            background: null,\n            axis: {\n                domainColor: 'darkslategray'\n              },\n            axisX: {\n                labels: false,\n                ticks: false\n              }\n          },\n        description: 'A simple bar chart with embedded data.',\n        encoding: getEncoding(typePlot),\n        mark: 'bar',\n    };\n    return specification;\n}\n\nclass VegaLiteBasedPlot extends React.Component {\n\n    render() {\n        const { column, profiledData, isLoadingPlot } = this.props;\n        // Grid header\n        let dataPlot = undefined; // [{}];\n        let isTherePlotData = false;\n        for (let property of profiledData.columns){\n            if (property.name === column.name){\n                dataPlot= property.plot;\n                isTherePlotData = true;\n                break;\n            }\n        }\n        const message = <p className=\"small text-muted\"\n            style={{textAlign:\"center\", verticalAlign: \"middle\", display: \"table-cell\"}}>\n                Nothing to show.\n            </p>;\n\n        return (\n            <div>\n            {\n                dataPlot\n                ?\n                <VegaLite\n                    spec={getSpecification(dataPlot.type)}\n                    data={{ values: dataPlot.data }}\n                />\n                :\n                isLoadingPlot && !isTherePlotData\n                ?\n                <Loader active inline='centered'  content='Loading'  />\n                :\n                <div style={{width:100, height:145, display: \"table\"}} >\n                {message}\n                </div>\n            }\n            </div>\n        );\n    }\n}\n\nexport default VegaLiteBasedPlot;\n\n// TODO: Support other type of data like text. Currently, just bar plots are generated for numerical data types.\n/* <ColumnDistributionPlot\n    data={columnDataInfo}\n    showXLabel={false}\n    showYLabel={false}\n    showInfo={false}\n/> */","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport '../../../../css/App.css'\nimport '../../../../css/Notebook.css'\nimport '../../../../css/Spreadsheet.css'\nimport D3BasedPlot from './D3BasedPlot';\nimport VegaLiteBasedPlot from './VegaLiteBasedPlot';\n/**\n * The plot header is generated based on the type of profiler.\n */\nclass PlotHeader extends React.Component {\n    render() {\n        const { column, profiledData, isLoadingPlot } = this.props;\n        const profilerType = profiledData.is_profiled[0];\n        if (profilerType === 'mimir'){\n            return (\n                <D3BasedPlot\n                    column={column}\n                    profiledData={profiledData}\n                    isLoadingPlot={isLoadingPlot}\n                />\n            );\n        }\n        if (profilerType === 'datamart_profiler') {\n            return (\n                <VegaLiteBasedPlot\n                    column={column}\n                    profiledData={profiledData}\n                    isLoadingPlot={isLoadingPlot}\n                />\n            );\n        }\n    }\n}\n\nexport default PlotHeader;","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport RowIndexCell from './grid/RowIndexCell';\nimport '../../../css/App.css'\nimport '../../../css/Notebook.css'\nimport '../../../css/Spreadsheet.css'\nimport { Table} from 'react-bootstrap';\nimport PlotHeader from './grid/PlotHeader';\n\n/**\n * Display a dataset in spreadsheet format with minimal functionality for the\n * user to interact with the data. This is a static view on a historic\n * dataset that was generated as output of a workflow module.\n */\nColumnView.propTypes = {\n    dataset: PropTypes.object.isRequired\n}\n\nexport default function ColumnView(props){\n    const { dataset } = props;\n    const profiledData = dataset.properties;\n    const columns = dataset.columns;\n    const profilerType = profiledData.is_profiled[0];\n    // Grid header\n    let header = [<RowIndexCell key={-1} value=' ' />];\n    for (let cidx = 0; cidx < columns.length; cidx++) {\n        const column = columns[cidx];\n        let dataPlot_ = [{}];\n\n        for (let property of profiledData.columns){\n            if (profilerType === 'mimir' && property.column.id === column.id){\n                dataPlot_= property;\n                break;\n            }\n            if (profilerType === 'datamart_profiler' && property.name === column.name){\n                dataPlot_= property;\n                break;\n            }\n        }\n        header.push(\n            <tr key={'rowse_' + column.id}>\n                <td key={'rows_' + column.name} style={{width: '20%'}}>\n                    <h4> { column.name } </h4>\n                </td>\n                <td key={'rows_cf' + column.name} style={{width: '15%'}}>\n                    <button\n                        className=\"btn btn-secondary float-right\"\n                        disabled={true}\n                        style={{ backgroundColor: '#e3e3e3', borderColor: '#cfcfcf', borderRadius: '4px'}}\n                    >\n                        { column.type }\n                    </button>\n                </td>\n                <td key={column.name} style={{width: '30%'}}>\n                    <div className=\"card mb-4\" style={{overflow: 'auto'}}>\n                    {\n                        dataset && dataset.isProfiled() &&\n                        <PlotHeader\n                            column={column}\n                            profiledData={profiledData}\n                            isLoadingPlot={true}\n                        />\n                    }\n                    </div>\n                </td>\n                <td key={'rows_' + column.name} style={{width: '35%'}}>\n                    {\n                        column.type === 'string' || column.type === 'varchar' || column.type === 'categorical' || column.type === 'boolean'\n                            ?\n                            <div className=\"row\">\n                                <ul style={{ listStyle: 'none', columnCount: 2, columnGap: 10 }}>\n                                    {dataPlot_.distinctValueCount != null  && <li>Unique Values</li>}\n                                    {dataPlot_.num_distinct_values != null  && <li>Unique Values</li>}\n                                    {dataPlot_.count != null  && <li>Total Values</li>}\n                                    {dataPlot_.distinctValueCount != null  && (<li>{dataPlot_.distinctValueCount}</li>)}\n                                    {dataPlot_.num_distinct_values != null  && (<li>{dataPlot_.num_distinct_values}</li>)}\n                                    {dataPlot_.count != null  && (<li>{dataPlot_.count}</li>)}\n                                </ul>\n                            </div>\n                            :\n                            dataPlot_ ?\n                                <div className=\"row\">\n                                    <ul style={{ listStyle: 'none', columnCount: 2, columnGap: 10 }}>\n                                        {dataPlot_.max != null && <li>Maximum</li>}\n                                        {dataPlot_.min != null &&<li>Minimum</li>}\n                                        {dataPlot_.mean != null  && <li>Mean</li>}\n                                        {dataPlot_.stdDev != null  && <li>Std Deviation</li>}\n                                        {dataPlot_.sum != null  && <li>Sum</li>}\n                                        {dataPlot_.distinctValueCount != null  && <li>Unique Values</li>}\n                                        {dataPlot_.num_distinct_values != null  && <li>Unique Values</li>}\n                                        {dataPlot_.count != null  && <li>Total Values</li>}\n                                        {dataPlot_.max != null  && (<li>{dataPlot_.max}</li>)}\n                                        {dataPlot_.min != null  && (<li>{dataPlot_.min}</li>)}\n                                        {dataPlot_.mean != null  && (<li>{dataPlot_.mean.toFixed(2)}</li>)}\n                                        {dataPlot_.stdDev != null  && (<li>{dataPlot_.stdDev.toFixed(2)}</li>)}\n                                        {dataPlot_.sum != null  && (<li>{dataPlot_.sum.toFixed(2)}</li>)}\n                                        {dataPlot_.distinctValueCount != null  && (<li>{dataPlot_.distinctValueCount}</li>)}\n                                        {dataPlot_.num_distinct_values != null  && (<li>{dataPlot_.num_distinct_values}</li>)}\n                                        {dataPlot_.count != null  && (<li>{dataPlot_.count}</li>)}\n                                    </ul>\n                                </div>\n                                :\n                                <div/>\n                    }\n                </td>\n            </tr>\n        );\n    }\n    header = (<tbody>{header}</tbody>);\n    return (\n        <div style={{maxHeight: 400, minHeight: 400, overflow: 'auto' }}>\n            <Table>\n                {header}\n            </Table>\n        </div>\n    );\n}\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\nimport { SORT, VIZUAL } from '../../../util/Vizual';\n\n/**\n * Dropdown menu for spreadsheet columns. Calls respective spreadsheet methods\n * when menu items are clicked.\n */\n\nclass ColumnDropDown extends React.Component {\n    static propTypes = {\n        disabled: PropTypes.bool.isRequired,\n        columnId: PropTypes.number.isRequired,\n        columnIndex: PropTypes.number.isRequired,\n        onAction: PropTypes.func.isRequired\n    }\n    /**\n     * Call spreadsheet delete column method.\n     */\n    deleteColumn = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.DELETE_COLUMN, columnId);\n    }\n    /**\n     * Call spreadsheet insert column method.\n     */\n    insertColumnLeft = () => {\n        const { columnIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_COLUMN, columnIndex);\n    }\n    /**\n     * Call spreadsheet insert column method.\n     */\n    insertColumnRight = () => {\n        const { columnIndex, onAction } = this.props\n        onAction(VIZUAL.INSERT_COLUMN,  (columnIndex + 1));\n    }\n    /**\n     * Call spreadsheet move column method.\n     */\n    moveColumn = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.MOVE_COLUMN, columnId);\n    }\n    render() {\n        const { disabled } = this.props;\n        return (\n            <Dropdown disabled={disabled} floating>\n                <Dropdown.Menu>\n                    <Dropdown.Item\n                        icon='arrow left'\n                        content='Insert column to left'\n                        onClick={this.insertColumnLeft}\n                    />\n                    <Dropdown.Item\n                        icon='arrow right'\n                        content='Insert column to right'\n                        onClick={this.insertColumnRight}\n                    />\n                    <Dropdown.Item\n                        icon='trash'\n                        content='Delete column'\n                        onClick={this.deleteColumn}\n                    />\n                    <Dropdown.Item\n                        icon='move'\n                        content='Move column'\n                        onClick={this.moveColumn}\n                    />\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                        icon='sort alphabet down'\n                        content='Sort A-Z'\n                        onClick={this.sortAZ}\n                    />\n                    <Dropdown.Item\n                        icon='sort alphabet up'\n                        content='Sort Z-A'\n                        onClick={this.sortZA}\n                    />\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n    /**\n     * Sort spreadsheet based on column values in ascending order\n     */\n    sortAZ = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.SORT, columnId, SORT.ASC);\n    }\n    /**\n     * Sort spreadsheet based on column values in descending order\n     */\n    sortZA = () => {\n        const { columnId, onAction } = this.props\n        onAction(VIZUAL.SORT, columnId, SORT.DESC);\n    }\n}\n\nexport default ColumnDropDown;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport GridInput from './GridInput';\nimport ColumnDropDown from '../menu/ColumnDropDown';\nimport { MOVE } from '../../../util/App';\nimport { Label } from 'semantic-ui-react'\nimport { Draggable, Droppable } from 'react-drag-and-drop'\nimport { Icon } from 'semantic-ui-react';\nimport {\n    VIZUAL\n} from '../../../util/Vizual';\nimport PlotHeader from './PlotHeader';\n\n/**\n * Column header in a spreadsheet grid.\n */\nclass HeaderCell extends React.Component {\n    static propTypes = {\n        column: PropTypes.object.isRequired,\n        columnIndex: PropTypes.number.isRequired,\n        disabled: PropTypes.bool.isRequired,\n        isActive: PropTypes.bool.isRequired,\n        isUpdating: PropTypes.bool.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]),\n        onAction: PropTypes.func,\n        onClick: PropTypes.func,\n        onMove: PropTypes.func,\n        onUpdate: PropTypes.func,\n        isEditing: PropTypes.bool,\n        onMoveAction: PropTypes.func,\n        isSpreadsheet: PropTypes.bool\n    }\n    /**\n     * Submit changes to the cell value if a onUpdate handler is given.\n     */\n    handleChange = (value) => {\n        const { onUpdate } = this.props;\n        if (onUpdate != null) {\n            onUpdate(value);\n        }\n    }\n    /**\n     * Cell click handler. Check if a onClick handler was provided from the\n     * parent. Call it with the column id and and index position.\n     */\n    handleClick = () => {\n        const { column, columnIndex, onClick } = this.props;\n        if (onClick != null) {\n            onClick(column.id, -1, columnIndex, -1);\n        }\n    }\n    /**\n     * Active cell move handler. Call the provided handler (if given). Header\n     * cells only support left or right moves. Move up is converted to move left\n     * and move down is converted to move right.\n     */\n    handleMove = (direction) => {\n        const { onMove } = this.props;\n        if (onMove != null) {\n            if ((direction === MOVE.LEFT) || (direction === MOVE.UP)) {\n                onMove(MOVE.LEFT);\n            } else if ((direction === MOVE.RIGHT) || (direction === MOVE.DOWN)) {\n                onMove(MOVE.RIGHT);\n            }\n        }\n    }\n    handleMoveDropBefore = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_COLUMN,  parseInt(dropData['header-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    handleMoveDropAfter = (dropData, dropTargetData) => {\n        const { onMoveAction } = this.props;\n        const dropTargetDataValue = dropTargetData.currentTarget.attributes.data.value;\n        onMoveAction(VIZUAL.MOVE_COLUMN,  parseInt(dropData['header-cell'], 10),  parseInt(dropTargetDataValue, 10));\n    }\n    /**\n     * Render grid column cell as Html table header cell.\n     */\n    render() {\n        const {\n            disabled,\n            isActive,\n            isUpdating,\n            column,\n            columnIndex,\n            value,\n            onAction,\n            isEditing,\n            isSpreadsheet\n        } = this.props;\n        // The value is optional (providing a value other than the column name\n        // is used to override the column name while updating).\n        let columnName = null;\n\n        if (value != null) {\n            columnName = value;\n        } else {\n            columnName = column.name;\n        }\n        // The cell style and content depends on whether the column is active\n        // or not.\n        let cellCss = 'grid-header';\n        let cellValue = null;\n        let dropTargetType = 'none';\n        let dropTargetBefore = null;\n        let dropTargetAfter = null;\n        // Show optional dropdown menu if onAction handler is provided\n        let dropdown = null;\n        if (isActive) {\n            // Show a text input control when active\n            cellCss += ' active';\n            cellValue = (\n                <GridInput\n                    cellValue={column.name}\n                    onMove={this.handleMove}\n                    onUpdate={this.handleChange}\n                />\n            );\n        } else {\n            if (onAction) {\n                dropdown = (\n                    <ColumnDropDown\n                        columnId={column.id}\n                        columnIndex={columnIndex}\n                        disabled={disabled}\n                        onAction={onAction}\n                    />\n                );\n            }\n            // Change style for header cells that are currently being updated.\n            if (isUpdating) {\n                cellCss += ' updating';\n            }\n            if((isEditing) && (isSpreadsheet)){\n            \tdropTargetType = 'header-cell';\n            \tdropTargetBefore = (\n            \t\t<Droppable\n     \t\t            types={[dropTargetType]}\n            \t\t    data={columnIndex}\n        \t\t        onDrop={this.handleMoveDropBefore}>\n     \t\t            <div className=\"drop-before\" ><Icon\n     \t\t\t            className='icon-button header-drop-target'\n     \t\t\t            title='<- Move Colum Drop'\n     \t\t\t            name='bullseye'\n     \t\t\t        /></div>\n                     </Droppable>\n            \t)\n            \tdropTargetAfter = (\n            \t\t<Droppable\n     \t\t            types={[dropTargetType]}\n            \t\t    data={columnIndex}\n \t\t                onDrop={this.handleMoveDropAfter}>\n            \t\t    <div className=\"drop-after\" ><Icon\n     \t\t\t            className='icon-button header-drop-target'\n     \t\t\t            title='Move Column Drop ->'\n     \t\t\t            name='bullseye'\n     \t\t\t        /></div>\n                     </Droppable>\n            \t)\n            }\n            cellValue = (\n            \t<div >\n            \t\t<span className='header-value'>\n\t                    {columnName}\n\t                </span>\n\t                <Label size='mini'>\n\t                    {`(${column[\"type\"]})`}\n\t                </Label>\n\t\t            <div >\n                    {\n                        this.props.isLoadingPlot &&\n                        this.props.dataset && this.props.dataset.isProfiled() &&\n                        <PlotHeader\n                            column={column}\n                            profiledData={this.props.profiledData}\n                            isLoadingPlot={this.props.isLoadingPlot}\n                        />\n                    }\n                    </div>\n\t            </div>\n            );\n        }\n        return (\n    \t\t<Draggable \n    \t\t    type=\"header-cell\" \n    \t\t\tdata={columnIndex} \n    \t\t    wrapperComponent={<th></th>} \n            \tclassName={cellCss} \n    \t\t    onClick={this.handleClick}>\n\t\t            {dropTargetBefore}\n\t\t            {dropTargetAfter}\n\t                {cellValue}\n\t                {dropdown}\n            </Draggable>\n        );\n    }\n}\n\nHeaderCell.defaultProps = {\n    disabled: false,\n    isActive: false,\n    isUpdating: false\n}\n\nexport default HeaderCell;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport HeaderCell from './grid/HeaderCell';\nimport RowIndexCell from './grid/RowIndexCell';\nimport '../../../css/App.css'\nimport '../../../css/Notebook.css'\nimport '../../../css/Spreadsheet.css'\n\n/**\n * Display a dataset in spreadsheet format with minimal functionality for the\n * user to interact with the data. This is a static view on a historic\n * dataset that was generated as output of a workflow module.\n */\nclass Headers extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n    }\n\n    render() {\n        const { dataset } = this.props;\n        const profiledData =  dataset.properties;\n        const columns = dataset.columns;\n        // Grid header\n        let header = [<RowIndexCell key={-1} rowIndex={-1} value={' '} />];\n        for (let cidx = 0; cidx < columns.length; cidx++) {\n            const column = columns[cidx];\n            header.push(\n                <HeaderCell\n                    dataset={dataset}\n                    key={column.id}\n                    column={column}\n                    columnIndex={cidx}\n                    profiledData={profiledData}\n                    isLoadingPlot={this.props.isLoadingPlot}\n                />\n            );\n        }\n        header = (<tr>{header}</tr>);\n        return (\n           <thead>{header}</thead>\n        );\n    }\n}\n\nexport default Headers;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport GridCell from './grid/GridCell';\nimport RowIndexCell from './grid/RowIndexCell';\nimport SpreadsheetDropDown from './menu/SpreadsheetDropDown';\nimport SpreadsheetScrollbar from './SpreadsheetScrollbar';\nimport ColumnView from './ColumnView';\nimport HeaderCell from './grid/HeaderCell'; \n\nimport '../../../css/App.css'\nimport '../../../css/Notebook.css'\nimport '../../../css/Spreadsheet.css'\nimport 'toastr/build/toastr.min.css'\n\nimport {Button, Icon, Popup, Label, Loader} from 'semantic-ui-react'\nimport Headers from \"./Headers\";\nimport toastr from 'toastr'\n\n/**\n * Display a dataset in spreadsheet format with minimal functionality for the\n * user to interact with the data. This is a static view on a historic\n * dataset that was generated as output of a workflow module.\n */\nclass DatasetView extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onNavigate: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        downloadLimit: PropTypes.number.isRequired,\n        onRecommendAction: PropTypes.func\n    }\n    constructor(props) {\n        super(props);\n        this.state = {column: -1, row: -1,  typeView: 1};\n    }\n\n    componentDidMount() {\n        this.setState({\n            column: -1,\n            row:-1,\n            typeView: 1\n        })\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        if(!props.dataset.isProfiled()){\n            return null;\n        } else {\n            return null;\n        }\n    }\n    /**\n     * If the dataset changes we need to reset the active cell coordinates in\n     * the component state.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Only try to update the state if there currently are valid active\n        // cell coordinates in the component state.\n        const { dataset } = this.props;\n        if (prevProps.dataset.id !== dataset.id) {\n            this.setState({column: -1, row: -1, typeView:1});\n        }else if (dataset.isProfiled() && !prevProps.dataset.isProfiled()){\n            toastr.options = {\n                positionClass : 'toast-top-full-width',\n                hideDuration: 300,\n                timeOut: 5000\n            }\n            setTimeout(() => toastr.success(`Detailed and Column views are now available for the ${dataset.name} dataset.`), 300)\n        }else if(!dataset.isProfiled() && prevProps.dataset.isProfiled()){\n            this.setState({typeView:1})\n        }\n    }\n    /**\n     * Update the reference to the active cell in the component state.\n     */\n    handleSelectCell = (columnId, rowId) => {\n        this.setState({column: columnId, row: rowId});\n    }\n    /**\n     * Update the reference to the active cell in the component state.\n     */\n    updateTypeView = (value) => {\n        if(value!==1){\n            if(!this.props.dataset.isProfiled()){\n                this.handleRequestProfiler(true)\n            }\n        }\n        this.setState({typeView: value});\n    };\n    /**\n     * request profiled properties from the server\n     */\n    handleRequestProfiler = (profile) => {\n        if(profile){\n            const {dataset, onNavigate, userSettings} = this.props;\n            onNavigate(dataset, dataset.offset, userSettings.cellRowLimit(), profile)\n        }\n    }\n    render() {\n        const { dataset, onFetchAnnotations, onNavigate, onSelectCell, userSettings, onEditSpreadsheet, moduleId, downloadLimit, onRecommendAction } = this.props;\n        const activeCell = this.state;\n        // Content header\n        const contentHeader = (\n            <div className='output-header' onClick={onSelectCell}>\n                <span className='header-name'>{dataset.name}</span>\n                <span> (</span>\n                <span className='number-highlight'>{dataset.rowCount}</span>\n                <span className='right-padding-md'> rows)</span>\n                <SpreadsheetDropDown \n                \tdataset={dataset}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    moduleId={moduleId}\n                    downloadLimit={downloadLimit}\n                    onRecommendAction={onRecommendAction}\n                />\n            </div>\n        );\n\n        const columns = dataset.columns;\n        // Grid header\n        let header = [<RowIndexCell key={-1} rowId={\"-1\"} rowIndex={-1} value={' '} />];\n        for (let cidx = 0; cidx < columns.length; cidx++) {\n            const column = columns[cidx];\n            header.push(\n                <HeaderCell\n                    key={column.id}\n                    column={column}\n                    columnIndex={cidx}\n                    summaryPlot={this.state.typeView === 2}\n                />\n            );\n        }\n        header = (<tr>{header}</tr>);\n        // Grid rows\n        const offset = dataset.offset;\n        const rows = [];\n        for (let ridx = 0; ridx < dataset.rows.length; ridx++) {\n            const row = dataset.rows[ridx];\n            const cells = [<RowIndexCell key={row.id} rowId={row.id} rowIndex={ridx + offset} value={ridx + offset} />];\n            for (let cidx = 0; cidx < columns.length; cidx++) {\n                const column = columns[cidx];\n                const isActive = (activeCell.column === column.id) && (activeCell.row === row.id);\n                cells.push(\n                    <GridCell\n                        key={'C' + column.id + 'R' + row.id}\n                        column={column}\n                        columnIndex={cidx}\n                        hasAnnotations={dataset.hasAnnotations(column.id, row.id)}\n                        isActive={isActive}\n                        rowId={row.id}\n                        rowIndex={ridx}\n                        value={row.values[cidx]}\n                        onClick={() => (this.handleSelectCell(column.id, row.id))}\n                        onFetchAnnotations={onFetchAnnotations}\n                    />\n                );\n            }\n            rows.push(<tr key={row.id}>{cells}</tr>);\n        }\n\n        const returnContent = this.state.typeView !== 3\n        ?\n        <div className='spreadsheet-container'>\n            <div className='spreadsheet-table-container'>\n                <table className='spreadsheet'>\n                {\n                    // Grid header\n                    this.state.typeView === 1\n                        ?\n                        <Headers dataset={dataset} isLoadingPlot={false} />\n                        :\n                        <Headers dataset={dataset} isLoadingPlot={true} />\n                }\n                <tbody>{rows}</tbody>\n                </table>\n            </div>\n            <SpreadsheetScrollbar\n                dataset={dataset}\n                onNavigate={onNavigate}\n                cellLimit={userSettings.cellRowLimit()}\n            />\n        </div>\n        : dataset.isProfiled() ? <ColumnView dataset={dataset}/> : <Loader active inline='centered'  content='Loading'  />\n        return (\n            <div>\n                { contentHeader }\n                <Button.Group floated='right' size='mini' style={{marginTop:'-20px'}}>\n                    <Label basic  pointing='right' size='mini'>\n                        Views\n                    </Label>\n                    <Popup content='Compact view' trigger={\n                    <Button icon onClick={() => (this.updateTypeView(1))}>\n                        <Icon name='compress' />\n                    </Button>} />\n                    <Popup content='Detail view' trigger={\n                    <Button icon onClick={() => (this.updateTypeView(2))}>\n                        <Icon name='chart bar outline' />\n                    </Button>} />\n                    <Popup content='Column view' trigger={\n                    <Button icon onClick={() => (this.updateTypeView(3))}>\n                        <Icon name='columns' />\n                    </Button>} />\n                </Button.Group>\n                <br/>\n                {returnContent}\n            </div>\n        );\n    }\n}\n\nexport default DatasetView;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport '../../../../css/App.css';\n\n\n/**\n * Simple helper component to format a module timestamp for output.\n */\nclass TimestampOutput extends React.Component {\n    static propTypes = {\n        label: PropTypes.string.isRequired,\n        time: PropTypes.string,\n    }\n    /**\n     * Show simple concatenation of label and time value. If the time is null\n     * the component also return null.\n     */\n    render() {\n        const { label, time } = this.props;\n        if (time != null) {\n            return (\n                <pre className='plain-text'>\n                    <span className='info-bold'>{label + ' '}</span>\n                    {time}\n                </pre>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default TimestampOutput;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport { PropTypes } from 'prop-types';\nimport {Loader, Menu, Dropdown, Segment} from 'semantic-ui-react';\nimport ReactMarkdown from 'react-markdown'\nimport { ApiPolling } from '../../Api';\nimport DatasetChart from '../../plot/DatasetChart';\nimport DatasetView from '../../spreadsheet/DatasetView';\nimport { ErrorMessage } from '../../Message';\nimport TimestampOutput from './TimestampOutput';\nimport {\n    CONTENT_CHART,\n    CONTENT_DATASET,\n    CONTENT_TEXT,\n    CONTENT_HIDE,\n    CONTENT_JAVASCRIPT,\n    OutputText,\n    CONTENT_TIMESTAMPS, CONTENT_MULTIPLE, CONTENT_MARKDOWN, CONTENT_HTML\n} from '../../../resources/Outputs';\nimport '../../../../css/App.css';\nimport '../../../../css/Notebook.css';\nimport {TextButton} from \"../../Button\";\nimport Divider from \"semantic-ui-react/dist/commonjs/elements/Divider\";\nimport { isCellOutputRequest } from '../../../actions/project/Notebook';\nimport 'toastr/build/toastr.min.css'\nimport toastr from 'toastr'\nimport gfm from 'remark-gfm'\nimport JavascriptCellOutput from \"./JavascriptCellOutput\"\n\n\n/**\n * Output area for notebook cells that have a workflow module associated with\n * them.\n */\nclass CellOutputArea extends React.Component {\n    static propTypes = {\n        cell: PropTypes.object.isRequired,\n        datasets: PropTypes.object.isRequired,\n        onCancelExec: PropTypes.func,\n        onCheckStatus: PropTypes.func,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onNavigateDataset: PropTypes.func.isRequired,\n        onOutputSelect: PropTypes.func.isRequired,\n        onSelectCell: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        onRecommendAction: PropTypes.func.isRequired,\n        apiEngine: PropTypes.object.isRequired\n    };\n    state = {\n        activeTab: null,\n        resourceName: null,\n        isFetching: false,\n        hide: false\n    };\n    /**\n     * Toggle cell fetching state or update the default output\n     */\n    static getDerivedStateFromProps(nextProps, prevState){\n        const newOutput = nextProps.cell.output;\n        const datasets = nextProps.datasets;\n        if(prevState.isFetching && prevState.activeTab === newOutput.type){\n            if(prevState.activeTab === CONTENT_CHART || prevState.activeTab === CONTENT_DATASET){\n                if (prevState.resourceName === newOutput.dataset.name || prevState.resourceName === newOutput.name\n                 || (prevState.activeTab === CONTENT_DATASET && prevState.resourceName.toLowerCase() === datasets[newOutput.dataset.id].name.toLowerCase())){ // forward compatibility\n                    return {\n                        isFetching: false\n                    }\n                }\n            } else if(prevState.activeTab === CONTENT_TEXT ||\n                prevState.activeTab === CONTENT_MULTIPLE ||\n                prevState.activeTab === CONTENT_HIDE ||\n                prevState.activeTab === CONTENT_TIMESTAMPS){\n                return {\n                    isFetching: false\n                }\n            }\n        }\n        return {}\n    }\n    /**\n     * Update the cell output state from cell type\n     */\n    componentDidMount() {\n        this.setState({\n            activeTab: CONTENT_TEXT,\n            resourceName: 'All',\n        });\n    }\n    /**\n     * Discard a displayed annotation (by clearing the selected cell\n     * annotations).\n     */\n    handleDiscardAnnotation = () => {\n        this.handleSelectCell(-1, -1);\n    }\n    /**\n     * Show console output when user dismisses an error message.\n     */\n    handleOutputDismiss = () => {\n        const { cell, onOutputSelect } = this.props;\n        onOutputSelect(cell.module, this.state.activeTab, this.state.resourceName);\n    }\n    /**\n     * Show spreadsteeh cell annotations when the user clicks on a table cell.\n     */\n    handleFetchAnnotations = (columnId, rowId) => {\n        const { cell, onFetchAnnotations } = this.props;\n        const { output, module } = cell;\n        const dataset = output.dataset;\n        onFetchAnnotations(module, dataset, columnId, rowId);\n    }\n    /**\n     * Download the output in the console as a text file\n     */\n    handleConsoleDownload = () => {\n        const {cell} = this.props;\n        const {resourceName} = this.state;\n        const element = document.createElement(\"a\");\n        const {outputs} = this.getConsoleOutputs(cell.module.outputs.stdout);\n        const file = new Blob([JSON.stringify(outputs[resourceName],null,2)], {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        element.download = cell.id;\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    };\n    /**\n     * Fetches outputs from the API\n     */\n    fetchData = () => {\n        const { cell, onOutputSelect } = this.props;\n        const { activeTab, resourceName } = this.state;\n        onOutputSelect(cell.module, activeTab, resourceName)\n    };\n    /**\n     * Tracks tab menu selection\n     */\n    handleItemClick = (e, activeTab, resourceName = null, isFetching = false) => {\n        this.setState({\n            isFetching: isFetching,\n            resourceName: resourceName,\n            activeTab: activeTab,\n            hide: activeTab === CONTENT_HIDE\n        },() => this.fetchData());\n    };\n    /**\n     * Copy embed code to clipboard\n     */\n    handleCopyEmbedClick = (e) => {\n    \tconst { cell } = this.props;\n    \tconst code = '<iframe width=\"400\" height=\"400\" frameBorder=\"0\" scrolling=\"no\" src=\"'+window.location+'/?cell-output='+cell.id+'\"></iframe>';\n    \tvar input = document.createElement('textarea');\n        input.innerHTML = code;\n        document.body.appendChild(input);\n        input.select();\n        var result = document.execCommand('copy');\n        document.body.removeChild(input);\n        toastr.options = {\n            positionClass : 'toast-top-full-width',\n            hideDuration: 300,\n            timeOut: 5000\n        }\n        if(result){\n    \t\tconsole.log('copied embed code of output for cell ' +cell.id+' to clipboard')\n    \t\tsetTimeout(() => toastr.success(`Embed code copied!`), 300)\n    \t}\n        else {\n    \t    console.log('error copying embed code of output for cell ' +cell.id+' to clipboard')\n    \t    setTimeout(() => toastr.error(`Embed code copy failed!`), 300)\n    \t}\n    };\n    /**\n     * Copy embed code to clipboard\n     */\n    handleCopyURLClick = (e) => {\n    \tconst { cell } = this.props;\n    \tconst code = window.location+'/?cell-output='+cell.id;\n    \tvar input = document.createElement('textarea');\n        input.innerHTML = code;\n        document.body.appendChild(input);\n        input.select();\n        var result = document.execCommand('copy');\n        document.body.removeChild(input);\n        toastr.options = {\n            positionClass : 'toast-top-full-width',\n            hideDuration: 300,\n            timeOut: 5000\n        }\n        if(result){\n    \t    console.log('copied url of output for cell ' +cell.id+' to clipboard')\n    \t    setTimeout(() => toastr.success(`Output URL copied!`), 300)\n    \t}\n        else{\n    \t\tconsole.log('error copying url of output for cell ' +cell.id+' to clipboard')\n    \t\tsetTimeout(() => toastr.success(`Output URL copy failed!`), 300)\n    \t}\n    };\n    /**\n     * use cell module output to create console outputs\n     */\n    getConsoleOutputs = (stdout) => {\n        let outputs = {};\n        let renders = {};\n        const {cell, onSelectCell} = this.props;\n        if(stdout.hasOwnProperty('isMultiple') && !stdout.isMultiple()){\n            switch (stdout.type) {\n                case CONTENT_TEXT: outputs['text/plain']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_HTML: outputs['text/html']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_MARKDOWN: outputs['text/markdown']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_MARKDOWN: outputs['text/markdown']  = stdout.lines.join(\"\\n\"); break;\n                case CONTENT_JAVASCRIPT: outputs['text/javascript'] = stdout.lines[0]; break;\n                default: outputs['text/plain']  = stdout.lines.join(\"\\n\"); break;\n            }\n        }else{\n            outputs = cell.output.outputs;\n        }\n        for (let out in outputs){\n            if (out === \"text/html\"){\n                const Response = createReactClass({\n                    render: function () {\n                        return (\n                            <div\n                                className='output-content-html'\n                                dangerouslySetInnerHTML={{__html: outputs[out]}}\n                            />\n                        )\n                    }\n                });\n                renders[out] = (\n                    <div className='output-content'>\n                        <Response/>\n                    </div>\n                );\n            } else if (out === \"text/markdown\"){\n                renders[out] = (\n                    <div className='output-content'>\n                        <ReactMarkdown\n                            plugins={[gfm]} \n    \t                    source={outputs[out]}/>\n                    </div>\n                );\n            } else if (out === \"text/plain\"){\n                renders[out] = (\n                    <pre className='plain-text' onClick={onSelectCell}>\n                            {outputs[out]}\n                        </pre>\n                )\n            } else if (out === \"dataset/view\"){\n                renders[out] = this.getDatasetView(cell.id, outputs[out])\n            } else if (out === \"chart/view\"){\n                renders[out] = this.getChartView(outputs[out].data.name, outputs[out].result)\n            } else if (out === \"text/javascript\"){\n                renders[out] = \n                    <JavascriptCellOutput html={outputs[out].value.html}\n                                          code={outputs[out].value.code}\n                                          deps={outputs[out].value.js_deps}/>\n                \n            }  else {\n                renders[out] = (\n                    <pre className='plain-text' onClick={onSelectCell}>\n                            {JSON.stringify(outputs[out],null,2)}\n                        </pre>\n                )\n            }\n        }\n        return {outputs, renders}\n    };\n    /**\n     * Returns a dataset view\n     */\n    getDatasetView = (id, dataset) => {\n        const {onSelectCell, datasets, onNavigateDataset, userSettings, onEditSpreadsheet, onRecommendAction, apiEngine} = this.props;\n        try {\n            dataset.name = datasets[dataset.id].name;\n        }catch (TypeError) {\n            // prevent breakage\n        }\n        return (\n            <div className='output-content'>\n                <DatasetView\n                    dataset={dataset}\n                    onNavigate={onNavigateDataset}\n                    onFetchAnnotations={this.handleFetchAnnotations}\n                    onSelectCell={onSelectCell}\n                    userSettings={userSettings}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    moduleId={id}\n                    downloadLimit={apiEngine.serviceProperties.maxDownloadRowLimit}\n                    onRecommendAction={onRecommendAction}\n                />\n            </div>\n        )\n    };\n    /**\n     * Returns a chart view\n     */\n    getChartView = (name, dataset) => {\n        const {onSelectCell} = this.props;\n        return <div className='output-content'>\n            <DatasetChart\n                identifier={name}\n                dataset={dataset}\n                onSelectCell={onSelectCell}\n            />\n        </div>\n    };\n    /**\n     * Return Output content depending on Cell menu selection\n     */\n    getOutputContent = () => {\n        const { cell, onSelectCell } = this.props;\n        const { resourceName } = this.state;\n        let output = cell.output;\n        // For cells that are in success or an error state the output depends\n        // on the type of the output resource handle.\n        // messages\n        if (output.isHidden() && !cell.isCanceled()){\n            return (\n                <pre className='plain-text' onClick={onSelectCell}/>\n            );\n        }\n        if (output.isTimestamps()){\n            // Depending on whether the module completed successfully or not\n            // the label for the finished at timestamp changes.\n            let finishedType = '';\n            if (cell.isErrorOrCanceled()) {\n                finishedType = 'Canceled at';\n            } else {\n                finishedType = 'Finished at';\n            }\n            return (\n                <div className='module-timings' onClick={onSelectCell}>\n                    <p className='output-info-headline'>\n                        <span className='output-info-headline'>\n                            Module timings\n                        </span>\n                    </p>\n                    <TimestampOutput label='Created at' time={output.createdAt} />\n                    <TimestampOutput label='Started at' time={output.startedAt} />\n                    <TimestampOutput label={finishedType} time={output.finishedAt} />\n                </div>\n            );\n        }\n        if (output.isDataset()) {\n            return this.getDatasetView(cell.id, output.dataset);\n        }\n        if (output.isChart()) {\n            return this.getChartView(output.name, output.dataset);\n        }\n        if (output.isError()) {\n            const fetchError = output.error;\n            return <ErrorMessage\n                title={fetchError.title}\n                message={fetchError.message}\n                onDismiss={this.handleOutputDismiss}\n            />;\n        }\n        // If the cell is in error state and it has output written to standard\n        // error then we show those lines in an error box. We only show the\n        // error messages if the displayed output is console (i.e., either\n        // text or html)\n        if ((cell.isError())) {\n            const {stderr} = cell.module.outputs;\n            if (stderr.length > 0) {\n                const errorOut = new OutputText(stderr);\n                return(\n                    <div>\n                        <div className='output-error'>\n                            <pre className='error-text' onClick={onSelectCell}>\n                                {errorOut.lines.join('\\n')}\n                            </pre>\n                        </div>\n                    </div>\n                );\n            }\n        }\n        const {renders} = this.getConsoleOutputs(output);\n        let outputContent = null;\n        for( let out in renders ) {\n            if((resourceName===out || resourceName==='All') && !cell.isCanceled()){\n                outputContent = <div>\n                    { outputContent }\n                    { outputContent !== null && <Divider horizontal /> }\n                    { renders[out] }\n                </div>\n            }\n        }\n        // add download link\n        return (\n            <div className=\"cell-command-area\">\n                {outputContent}\n                {resourceName !== 'All' && <div className='horizontal-divider'>\n                    <TextButton\n                        text={'download'}\n                        title='Download console output'\n                        onClick={this.handleConsoleDownload}\n                    />\n                </div>}\n            </div>);\n    };\n\n    render() {\n        const {\n            cell,\n            onCancelExec,\n            onCheckStatus,\n            isActive\n        } = this.props;\n        const { output } = cell;\n        // The output content depends on the status of the cell. For running and\n        // pending cells only timestamps (and a cancel button) is displayed.\n        // If there has been an error we do not show the cancel button in order\n        // to avoid continuous polling.\n        let cancelButton = null;\n        if (onCancelExec != null) {\n            if (!output.isError()) {\n                cancelButton = (\n                    <ApiPolling\n                        interval={1000}\n                        onCancel={onCancelExec}\n                        onFetch={onCheckStatus}\n                        resource={cell}\n                        text={cell.isRunning() ? 'Running ...' : 'Pending ...'}\n                    />\n                );\n            } else {\n                const fetchError = output.error;\n                cancelButton =(\n                    <div className='output-error'>\n                        <ErrorMessage\n                            title={fetchError.title}\n                            message={fetchError.message}\n                        />\n                    </div>\n                );\n            }\n        }\n        if (cell.isRunning()) {\n            return (\n                <div>\n                    <div className='module-timings'>\n                        <TimestampOutput label='Created at' time={cell.module.timestamps.createdAt} />\n                        <TimestampOutput label='Started at' time={cell.module.timestamps.startedAt} />\n                    </div>\n                    { cancelButton }\n                </div>\n            );\n        } else if (cell.isPending() || isActive) {\n            return (\n                <div>\n                    <div className='module-timings'>\n                        <TimestampOutput label='Created at' time={cell.module.timestamps.createdAt} />\n                    </div>\n                    { cancelButton }\n                </div>\n            );\n        }\n        let datasetList = [];\n        if (cell.module.datasets.length > 0) {\n            for (let i = 0; i < cell.module.datasets.length; i++) {\n                const ds = cell.module.datasets[i];\n                datasetList.push(\n                    <Dropdown.Item\n                        key={'ds-' + ds.name}\n                        icon='table'\n                        text={ds.name}\n                        title={ds.name}\n                        disabled={this.state.resourceName===ds.name && cell.output.isDataset()}\n                        onClick={() => this.handleItemClick({}, CONTENT_DATASET, ds.name, true)}\n                    />\n                );\n            }\n        }\n        let chartList = [];\n        if (cell.module.charts.length > 0) {\n            for (let i = 0; i < cell.module.charts.length; i++) {\n                const chart = cell.module.charts[i];\n                chartList.push(\n                    <Dropdown.Item\n                        key={'vw-' + chart.name}\n                        icon='bar chart'\n                        text={chart.name}\n                        title={chart.name}\n                        disabled={this.state.resourceName===chart.name && cell.output.isChart()}\n                        onClick={() => this.handleItemClick({}, CONTENT_CHART, chart.name, true)}\n                    />\n                );\n            }\n        }\n        let consoleItems = cell.module.outputs.stdout.map(x => x.type).filter((v, i, a) => a.indexOf(v) === i);\n        let consoleList = [];\n        consoleItems.unshift('All')\n        for (let type = 0; type < consoleItems.length; type++){\n            consoleList.push(\n                <Dropdown.Item\n                    key={'cl-' + consoleItems[type]}\n                    icon='circle'\n                    text={consoleItems[type]}\n                    title={consoleItems[type]}\n                    disabled={this.state.resourceName === consoleItems[type] && this.state.activeTab === CONTENT_TEXT}\n                    onClick={() => this.handleItemClick({}, CONTENT_TEXT, consoleItems[type], false)}\n                />\n            )\n        }\n\n        const { activeTab, isFetching } = this.state;\n        const cellOutput = isCellOutputRequest();\n        let menu = null;\n        if(cellOutput){\n        \tmenu = null;\n        }\n        else{\n        \tmenu = (\n\t        \t<Menu>\n\t\t            <Menu.Item\n\t\t                icon='hide'\n\t\t                title='Hide output for this cell'\n\t\t                disabled={this.state.hide}\n\t\t                onClick={(e) => this.handleItemClick(e, CONTENT_HIDE, null, true)} />\n\t\t            <Dropdown disabled={consoleList.length===0} pointing text = 'Console' className = 'link item'>\n\t\t                <Dropdown.Menu>{ consoleList }</Dropdown.Menu>\n\t\t            </Dropdown>\n\t\t            <Menu.Item\n\t\t                name={CONTENT_TIMESTAMPS}\n\t\t                active={activeTab === CONTENT_TIMESTAMPS}\n\t\t                content='Timing'\n\t\t                disabled={this.state.activeTab===CONTENT_TIMESTAMPS}\n\t\t                onClick={(e) => this.handleItemClick(e, CONTENT_TIMESTAMPS, null, true)}\n\t\t            />\n\t\t            <Dropdown disabled={ datasetList.length===0 } pointing text = 'Datasets' className = 'link item'>\n\t\t                <Dropdown.Menu>{ datasetList }</Dropdown.Menu>\n\t\t            </Dropdown>\n\t\t            <Dropdown disabled={chartList.length===0} pointing text = 'Charts' className = 'link item'>\n\t\t                <Dropdown.Menu>{ chartList }</Dropdown.Menu>\n\t\t            </Dropdown>\n\t\t            <div className='cell-output-links'>\n\t\t                <Menu.Item\n\t\t\t                icon='copy'\n\t\t\t                title='Copy Embed Code'\n\t\t\t                disabled={false}\n\t\t\t                onClick={(e) => this.handleCopyEmbedClick(e)} />\n\t\t\t            <Menu.Item \n\t\t\t                icon='linkify'\n\t\t\t                title='Copy Output URL'\n\t\t\t                disabled={false}\n\t\t\t                onClick={(e) => this.handleCopyURLClick(e)} />\n\t\t\t        </div>\n\t\t        </Menu>\n\t        );\n        }\n        // Show spinner while fetching the output\n        return  (\n            <div className='output-area'>\n                { menu }\n                <div className='output-loading'>\n                    <Loader active={ isFetching } inline indeterminate/>\n                </div>\n                {!this.state.hide && <Segment style={{overflow: 'auto', maxHeight: 2000 }}>\n                    { !isFetching && this.getOutputContent() }\n                </Segment>}\n            </div>\n        );\n    }\n}\n\nexport default CellOutputArea;","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Icon } from 'semantic-ui-react';\nimport CellCommandArea from './input/CellCommandArea';\nimport CellDropDownMenu from './CellDropDownMenu';\nimport CellOutputArea from './output/CellOutputArea';\nimport { TextButton } from '../Button';\nimport { INSERT_AFTER, INSERT_BEFORE } from '../../resources/Notebook';\nimport '../../../css/App.css';\nimport '../../../css/Notebook.css';\nimport ProgressContext from  '../ProgressContext'\n\n\n/**\n * Cell in a notebook. The cell may either represent an existing module in a\n * workflow or a new notebook cell. For cells that contain a workflow module\n * the redered components include the cell index, an optional cell menu,\n * the cell command area and the cell output area.\n *\n * Depending on whether the associated notebook cell is in edit mode or not\n * the command area will display the command text or a command input form.\n *\n * For new cells a cell index '*' is shown together with the module input\n * form. There is no output area for new cells.\n *\n * The notebook cell does not receive a onSubmitCell callback if the notebook is\n * active and the cell is not a cell that is appended after the active cell.\n * In this case modification of the underlying workflow is not possible and\n * submissions should be blocked.\n */\nclass NotebookCell extends React.Component {\n    static propTypes = {\n        apiEngine: PropTypes.object.isRequired,\n        cell: PropTypes.object.isRequired,\n        cellNumber: PropTypes.number.isRequired,\n        datasets: PropTypes.array.isRequired,\n        artifacts: PropTypes.array.isRequired,\n        isActiveCell: PropTypes.bool.isRequired,\n        isNewNext: PropTypes.bool.isRequired,\n        isNewPrevious: PropTypes.bool.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onAddFilteredCommand: PropTypes.func.isRequired,\n        onCancelExec: PropTypes.func,\n        onCheckStatus: PropTypes.func,\n        onCopyCell: PropTypes.func.isRequired,\n        onCreateBranch: PropTypes.func.isRequired,\n        onDatasetNavigate: PropTypes.func.isRequired,\n        onDeleteCell: PropTypes.func.isRequired,\n        onDismissCell: PropTypes.func.isRequired,\n        onInsertCell: PropTypes.func.isRequired,\n        onOutputSelect: PropTypes.func.isRequired,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onRemoveFilteredCommand: PropTypes.func.isRequired,\n        onSelect: PropTypes.func.isRequired,\n        onSubmitCell: PropTypes.func,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired,\n        onRecommendAction: PropTypes.func.isRequired,\n        onResetRecommendations: PropTypes.func.isRequired,\n        onFreezeCell: PropTypes.func.isRequired,\n        onThawCell: PropTypes.func.isRequired,\n    }\n    handleUpdateProgress = p => {\n        this.setState({moduleProgress: p})\n    };\n\n    state = {\n        moduleProgress: 0,\n        onUpdateProgress: this.onUpdateProgress\n    };\n    /**\n     * Add the command that is associated with this notebook cell module\n     * to the list of hidden commands.\n     */\n    handleAddFilteredCommand = () => {\n        const { cell, onAddFilteredCommand } = this.props;\n        onAddFilteredCommand(cell.commandSpec);\n    }\n    /**\n     * Copy the associated cell to the clipboard in the user settings.\n     */\n    handleCopyCell = () => {\n        const { cell, onCopyCell } = this.props;\n        onCopyCell(cell);\n    }\n    /**\n     * Event handler when the user clicks the menu item to create a new branch\n     * up until the module in this cell.\n     */\n    handleCreateBranch = () => {\n        const { cell, onCreateBranch } = this.props;\n        onCreateBranch(cell.module);\n    }\n    /**\n     * Scroll to the given positions in the given dataset that is being\n     * displayed in the output area of the cell.\n     */\n    handleDatasetNavigate = (dataset, offset, limit, profile=false) => {\n        const { cell, onDatasetNavigate } = this.props;\n        onDatasetNavigate(cell.module, dataset, offset, limit, profile);\n    }\n    /**\n     * Delete the associated cell from the notebook.\n     */\n    handleDeleteCell = () => {\n        const { cell, onDeleteCell } = this.props;\n        onDeleteCell(cell);\n    }\n    /**\n     * Submit action to insert a new notebook cell relative to this cell.\n     *\n     * We need to adjust the given position based on the current setting for\n     * notebook cell order.\n     */\n    handleInsertCell = (direction) => {\n        const { cell, onInsertCell, userSettings } = this.props;\n        if (userSettings.showNotebookReversed()) {\n            if (direction === INSERT_AFTER) {\n                onInsertCell(cell, INSERT_BEFORE);\n            } else {\n                onInsertCell(cell, INSERT_AFTER);\n            }\n        } else {\n            onInsertCell(cell, direction);\n        }\n    }\n    /**\n     * Remove the command that is associated with this notebook cell module\n     * from the list of hidden commands.\n     */\n    handleRemoveFilteredCommand = () => {\n        const { cell, onRemoveFilteredCommand } = this.props;\n        onRemoveFilteredCommand(cell.commandSpec);\n    }\n    /**\n     * Set this cell as the active notebook cell. Only if the cell is inactive\n     * at the moment.\n     */\n    handleSelectCell = () => {\n        const { cell, isActiveCell, onSelect } = this.props;\n        if ((!isActiveCell) && (!cell.isActive())) {\n            onSelect(cell);\n        }\n    }\n    /**\n     * Freeze this and all subsequent cells\n     */\n    handleFreezeCell = () => {\n        const { cell, onFreezeCell } = this.props;\n        onFreezeCell(cell)\n    }\n    /**\n     * Thaw this and all prior cells\n     */\n    handleThawCell = () => {\n        const { cell, onThawCell } = this.props;\n        onThawCell(cell)\n    }\n\n\n    /**\n     * Handle new cell recommendations\n     */\n    handleRecommendAction = (packageId, commandId) => {\n        const { cell, onRecommendAction } = this.props;\n        onRecommendAction(packageId, commandId, cell);\n    }\n    render() {\n        const {\n            apiEngine,\n            cell,\n            cellNumber,\n            datasets,\n            artifacts,\n            isActiveCell,\n            isNewNext,\n            isNewPrevious,\n            notebook,\n            onCancelExec,\n            onCheckStatus,\n            onDismissCell,\n            onFetchAnnotations,\n            onOutputSelect,\n            onSubmitCell,\n            userSettings,\n            onEditSpreadsheet,\n            onResetRecommendations\n        } = this.props;\n        // The main components of a notebook cell are the cell index, the cell\n        // dropdown menu, the cell command text or input form and the cell\n        // output area.\n        let cellIndex = null;\n        let cellMenu = null;\n        let outputArea = null;\n        // For a cell that contains a new workflow module only the module input\n        // for is being displayed.\n        if (cell.isNewCell()) {\n            cellIndex = '*';\n        } else {\n            // Check if the command that is associated with the cell is filtered\n            // by the user settings. If the command is filtered we either return\n            // a collapsed cell or null depending on the hide filtered cells\n            // property. If a cell is active it is shown always for the user to\n            // know which (and how many) cells are still executing.\n            const cmdSpec = cell.commandSpec;\n            if ((!cell.isActive()) && (userSettings.isFiltered(cmdSpec))) {\n                let errorcss = '';\n                let errorIcon = null;\n                if (cell.isErrorOrCanceled()) {\n                    errorcss = ' collapsed-error-cell';\n                    if (cell.isCanceled()) {\n                        errorIcon = (<Icon name='cancel' color='red' title='Canceled'/>);\n                    } else if (cell.isError()) {\n                        errorIcon = (<Icon name='warning circle' color='red' title='Error' />);\n                    }\n\n                }\n                if (!userSettings.hideFilteredCommands()) {\n                    return (\n                        <div className={'horizontal-divider' + errorcss} >\n                            { errorIcon }\n                            <TextButton\n                                css='code-text'\n                                text={cmdSpec.name}\n                                title='Show cells of this type'\n                                onClick={this.handleRemoveFilteredCommand}\n                            />\n                        </div>\n                    );\n                } else {\n                    return null;\n                }\n            }\n            cellIndex = cellNumber;\n            // The isNewNext and isNewPrevious flags need to be swapped if the\n            // notebook is currently being shown in reverse order\n            let isNewNextFlag = isNewNext;\n            let isNewPreviousFlag = isNewPrevious;\n            if (userSettings.showNotebookReversed()) {\n                isNewNextFlag = isNewPrevious;\n                isNewPreviousFlag = isNewNext\n            }\n            cellMenu = (\n                <CellDropDownMenu\n                    cell={cell}\n                    cellNumber={cellNumber}\n                    isActiveCell={isActiveCell}\n                    isNewNext={isNewNextFlag}\n                    isNewPrevious={isNewPreviousFlag}\n                    notebook={notebook}\n                    onAddFilteredCommand={this.handleAddFilteredCommand}\n                    onCopyCell={this.handleCopyCell}\n                    onCreateBranch={this.handleCreateBranch}\n                    onDeleteCell={this.handleDeleteCell}\n                    onInsertCell={this.handleInsertCell}\n                    onSelectCell={this.handleSelectCell}\n                    onFreezeCell={this.handleFreezeCell}\n                    onThawCell={this.handleThawCell}\n                />\n            );\n            outputArea = (\n                <CellOutputArea\n                    cell={cell}\n                    datasets={notebook.datasets}\n                    onCancelExec={onCancelExec}\n                    onCheckStatus={onCheckStatus}\n                    onFetchAnnotations={onFetchAnnotations}\n                    onNavigateDataset={this.handleDatasetNavigate}\n                    onOutputSelect={onOutputSelect}\n                    onSelectCell={this.handleSelectCell}\n                    userSettings={userSettings}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    onRecommendAction={this.handleRecommendAction}\n                    apiEngine={apiEngine}\n                />\n            );\n        }\n        const commandText = (\n            <CellCommandArea\n                apiEngine={apiEngine}\n                datasets={datasets}\n                artifacts={artifacts}\n                cell={cell}\n                isActiveCell={(isActiveCell) && (!notebook.readOnly)}\n                onClick={this.handleSelectCell}\n                onDismiss={onDismissCell}\n                onSelectCell={this.handleSelectCell}\n                onSubmit={onSubmitCell}\n                userSettings={userSettings}\n                onResetRecommendations={onResetRecommendations}\n                onUpdateProgress={this.handleUpdateProgress}\n            />\n        );\n        // The CSS class depends on whether the cell is active or not and\n        // on the cell status\n        const css = (isActiveCell) ? 'cell active-cell' : 'cell inactive-cell';\n        // Add style for cells that are not in success state\n        let cssState = '';\n        if (cell.isErrorOrCanceled()) {\n            cssState = ' error-cell';\n        } else if (cell.isRunning()) {\n            cssState = ' running-cell';\n        } else if (cell.isPending()) {\n            cssState = ' pending-cell';\n        } else if (cell.isFrozen()) {\n            cssState = ' frozen-cell';\n        }\n        return (\n            <ProgressContext.Provider value={this.state}>\n                <table className={css + cssState}><tbody>\n                <tr>\n                    <td className={'cell-index' + cssState} onClick={this.handleSelectCell}>\n                        <a id={\"cell-\"+cellIndex} >\n                            <p className={'cell-index' + cssState}>[{cellIndex}]</p>\n                        </a>\n                        { cellMenu }\n                    </td>\n                    <td className={'cell-area' + cssState}>\n                        { commandText }\n                        { outputArea }\n                    </td>\n                </tr>\n                </tbody></table>\n            </ProgressContext.Provider>\n        );\n    }\n}\n\nexport default NotebookCell;\n","/**\n * Copyright (C) 2020 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../css/TableOfContents.css';\n\n/**\n * Dropdown menu for a notebook cell. Displays two icons with dropdown menus.\n * The first menu contains operations that are available for the cell. The\n * second menu allows to change the content that is being displayed in the cell\n * output area.\n */\nclass TableOfContents extends React.Component {\n  static propTypes = {\n    contents: PropTypes.array.isRequired,\n  }\n  state = {\n    active: false\n  }\n\n  toggleState = () => { \n    this.setState({active: !this.state.active});\n  }\n\n  render() {\n    const {\n      contents\n    } = this.props;\n    const {\n      active\n    } = this.state\n\n    const tocElements = []\n    for(let element of contents){\n      tocElements.push(\n        <a class=\"element\" href={\"#cell-\"+(element.linkToIdx+1)}>{ element.title }</a>\n      )\n    }\n\n    var activityClass = \"inactive\";\n    if(active){ activityClass = \"active\"; };\n\n    return (\n      <div className={ \"toc \" + activityClass }>\n        <a className=\"toctoggle\" onClick={this.toggleState}>≡</a>\n        <div className=\"tocbody\">\n          {tocElements}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TableOfContents;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Icon } from 'semantic-ui-react';\nimport { LargeMessageButton } from '../Button'\nimport NotebookCell from './NotebookCell';\nimport TableOfContents from './TableOfContents';\nimport {INSERT_AFTER, INSERT_BEFORE} from '../../resources/Notebook'\n\n/**\n * List of cells in a read-only notebook.\n */\nclass Notebook extends React.Component {\n    static propTypes = {\n        activeNotebookCell: PropTypes.string,\n        apiEngine: PropTypes.object.isRequired,\n        notebook: PropTypes.object.isRequired,\n        onAddFilteredCommand: PropTypes.func.isRequired,\n        onCancelExec: PropTypes.func.isRequired,\n        onCheckStatus: PropTypes.func.isRequired,\n        onCopyCell: PropTypes.func.isRequired,\n        onCreateBranch: PropTypes.func.isRequired,\n        onDatasetNavigate: PropTypes.func.isRequired,\n        onDeleteCell: PropTypes.func.isRequired,\n        onDismissCell: PropTypes.func.isRequired,\n        onFetchAnnotations: PropTypes.func.isRequired,\n        onInsertCell: PropTypes.func.isRequired,\n        onOutputSelect: PropTypes.func.isRequired,\n        onRemoveFilteredCommand: PropTypes.func.isRequired,\n        onSubmitCell: PropTypes.func.isRequired,\n        onSelectNotebookCell: PropTypes.func.isRequired,\n        onFreezeCell: PropTypes.func.isRequired,\n        onThawCell: PropTypes.func.isRequired,\n        userSettings: PropTypes.object.isRequired,\n        onEditSpreadsheet: PropTypes.func.isRequired\n    }\n    /**\n     * Append a new cell to the current notebook.\n     */\n    handleAppendCell = () => {\n        const { notebook, onInsertCell } = this.props;\n        // If the notebook is empty both parameters are null.\n        if (notebook.isEmpty()) {\n            this.handleRecommendAction('data','load',null);\n        } else {\n            onInsertCell(notebook.lastCell().module, INSERT_AFTER);\n        }\n    }\n    /**\n     * Allow recommendations\n     */\n    handleRecommendAction = (packageId, commandId, cell) => {\n        const { apiEngine, userSettings, onInsertCell } = this.props;\n        try{\n            let packages = apiEngine.packages.toList();\n            for (let pckg of packages){\n                if(packageId === pckg.id){\n                    let cmd = pckg.toList();\n                    for (let command of cmd){\n                        if (commandId === command.id){\n                            command.suggest = true\n                        }\n                    }\n                }\n            }\n        } catch (err){\n            // recommendation system shouldn't break the workflow\n        }\n        if (cell === null){\n            onInsertCell()\n        }else{\n            if (userSettings.showNotebookReversed()) {\n                onInsertCell(cell, INSERT_BEFORE);\n            } else {\n                onInsertCell(cell, INSERT_AFTER);\n            }\n        }\n    }\n\n    /**\n     * Reset all recommendations\n     */\n    handleResetRecommendations = () => {\n        const { apiEngine } = this.props;\n        let packages = apiEngine.packages.toList();\n        for (let pckg of packages){\n            let cmd = pckg.toList();\n            for (let command of cmd){\n                command.suggest = false\n            }\n        }\n    }\n\n    render() {\n        const {\n            activeNotebookCell,\n            apiEngine,\n            notebook,\n            onAddFilteredCommand,\n            onCancelExec,\n            onCheckStatus,\n            onCopyCell,\n            onCreateBranch,\n            onDatasetNavigate,\n            onDeleteCell,\n            onDismissCell,\n            onFetchAnnotations,\n            onInsertCell,\n            onOutputSelect,\n            onRemoveFilteredCommand,\n            onSelectNotebookCell,\n            onSubmitCell,\n            userSettings,\n            onEditSpreadsheet,\n            onFreezeCell,\n            onThawCell,\n        } = this.props;\n        // For empty notebooks a message is shown that contains a button to\n        // add the first notebook cell.\n        if (notebook.cells.length === 0) {\n            return (\n                <LargeMessageButton\n                    message='Your notebook is empty.'\n                    icon='plus'\n                    css='notebook-footer'\n                    caption='Start by adding a Load Dataset Cell'\n                    captionIcon='arrow up'\n                    onClick={this.handleAppendCell}\n                />\n            );\n        }\n        // Create a notebook cell for each workflow module\n        const notebookCells = [];\n        // Counter for notebook cells that contain a workflow module\n        let moduleCount = 1;\n        let isNewPrevious = false;\n        let hasActiveCell = false;\n        let datasets = [];\n        let artifacts = [];\n        for (let i = 0; i < notebook.cells.length; i++) {\n            const cell = notebook.cells[i];\n            let isNewNext = false;\n            if (i < notebook.cells.length - 1) {\n                isNewNext = notebook.cells[i + 1].isNewCell();\n            }\n            // The first active cell will receive the onCancel callback to\n            // trigger the rendering of a cancel button.\n            let onCancelCallback = null;\n            if (cell.isActive()) {\n                if (!hasActiveCell) {\n                    onCancelCallback = onCancelExec;\n                }\n                hasActiveCell = true;\n            }\n            // In an active notebook only the last cell will have a submit\n            // handler if it is a new cell.\n            let submitHandler = null;\n            if (notebook.hasActiveCells()) {\n                if ((cell.isNewCell()) && (i === notebook.cells.length - 1)) {\n                    submitHandler = onSubmitCell;\n                }\n            } else {\n                submitHandler = onSubmitCell;\n            }\n            // The cell number depends on whether the cell is a new cell or\n            // a cell for a workflow module.\n            notebookCells.push(\n                <NotebookCell\n                    key={cell.id}\n                    apiEngine={apiEngine}\n                    cell={cell}\n                    cellNumber={moduleCount}\n                    datasets={datasets}\n                    artifacts={artifacts}\n                    isActiveCell={cell.id === activeNotebookCell}\n                    isNewNext={isNewNext}\n                    isNewPrevious={isNewPrevious}\n                    notebook={notebook}\n                    onAddFilteredCommand={onAddFilteredCommand}\n                    onCancelExec={onCancelCallback}\n                    onCheckStatus={onCheckStatus}\n                    onCopyCell={onCopyCell}\n                    onCreateBranch={onCreateBranch}\n                    onDatasetNavigate={onDatasetNavigate}\n                    onDeleteCell={onDeleteCell}\n                    onDismissCell={onDismissCell}\n                    onInsertCell={onInsertCell}\n                    onOutputSelect={onOutputSelect}\n                    onFetchAnnotations={onFetchAnnotations}\n                    onRemoveFilteredCommand={onRemoveFilteredCommand}\n                    onSelect={onSelectNotebookCell}\n                    onSubmitCell={submitHandler}\n                    userSettings={userSettings}\n                    onEditSpreadsheet={onEditSpreadsheet}\n                    onRecommendAction={this.handleRecommendAction}\n                    onResetRecommendations={this.handleResetRecommendations}\n                    onFreezeCell={onFreezeCell}\n                    onThawCell={onThawCell}\n                />\n            );\n            if (!cell.isNewCell()) {\n                moduleCount++;\n                datasets = cell.module.datasets;\n                artifacts = cell.module.artifacts;\n            }\n            isNewPrevious = cell.isNewCell();\n        }\n\n        let tableOfContents = null;\n        if(\"tableOfContents\" in notebook.workflow && Array.isArray(notebook.workflow['tableOfContents']) && (notebook.workflow['tableOfContents'].length > 0)) {\n            tableOfContents = (\n                <TableOfContents\n                    contents={notebook.workflow.tableOfContents} />\n            );\n        }\n\n        // Show a message button to append a new cell (only if the last cell\n        // is not already a new cell and the workflow is not in error state\n        // or read only).\n        let appendCellButton = null;\n        const lastCell = notebook.lastCell();\n        if ((!lastCell.isNewCell()) && (!lastCell.isErrorOrCanceled()) && (!notebook.readOnly)) {\n            appendCellButton = (\n                <table className='cell'><tbody>\n                    <tr>\n                        <td className='cell-index'></td>\n                        <td className='cell-button'>\n                        <Icon\n                            size='big'\n                            link\n                            name='plus'\n                            onClick={this.handleAppendCell}\n                            title='Append new cell'\n                         />\n                        </td>\n                    </tr>\n                </tbody></table>\n            );\n        }\n        // Reverse the notebook cells if flag is true\n        let content = null;\n        if (userSettings.showNotebookReversed()) {\n            notebookCells.reverse();\n            content = (\n                <div>\n                    { tableOfContents }\n                    { appendCellButton }\n                    { notebookCells }\n                </div>\n            );\n        } else {\n            content = (\n                <div>\n                    { tableOfContents }\n                    { notebookCells }\n                    { appendCellButton }\n                </div>\n            );\n        }\n        return content;\n    }\n}\n\nexport default Notebook;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { addFilteredCommand, copyCell, removeFilteredCommand } from '../../actions/main/App';\nimport { createBranch, deleteBranch } from '../../actions/project/Branch';\nimport { cancelWorkflowExecution, checkModuleStatus, createtNotebookCell,\n    deleteNotebookCell, dismissCellChanges, fetchWorkflow,\n    hideCellOutput, insertNotebookCell, replaceNotebookCell, showCellChart,\n    selectNotebookCell, showCellDataset, showCellStdout, updateCellDatasetProperties,\n    showCellTimestamps, updateNotebookCellWithUpload, isCellOutputRequest,\n    freezeOrThawNotebookCell } from '../../actions/project/Notebook';\nimport { showModuleSpreadsheet, fetchAnnotations, clearAnnotations } from '../../actions/project/Spreadsheet';\nimport { fetchProject, setBranch } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\nimport { LargeMessageButton } from '../../components/Button';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\nimport AnnotationObject from '../../components/annotation/AnnotationObject';\nimport EditResourceNameModal from '../../components/modals/EditResourceNameModal';\nimport NotebookStatusHeader from '../../components/notebook/NotebookStatusHeader';\nimport Notebook from '../../components/notebook/Notebook';\nimport ResourcePage from '../../components/ResourcePage';\nimport { CONTENT_CHART, CONTENT_DATASET, CONTENT_HIDE, CONTENT_TEXT,\n    CONTENT_TIMESTAMPS, CONTENT_MULTIPLE } from '../../resources/Outputs';\nimport { branchPageUrl, isNotEmptyString, notebookPageUrl,\n    NotebookResource, spreadsheetPageUrl } from '../../util/App';\nimport { HATEOAS_MODULE_APPEND, HATEOAS_MODULE_INSERT,\n    HATEOAS_MODULE_REPLACE, HATEOAS_PROJECT_FILE_UPLOAD,\n    HATEOAS_MODULE_FREEZE, HATEOAS_MODULE_THAW } from '../../util/HATEOAS';\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/Chart.css';\nimport CellOutputArea from '../../components/notebook/output/CellOutputArea';\n\n/**\n * The notebook page displays workflows as notebooks and resources that are\n * associated with a workflow (e.g., datasets and charts).\n */\nclass NotebookPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        activeCell: PropTypes.string,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        notebook: PropTypes.object,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        reversed: PropTypes.bool.isRequired,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        annotations: PropTypes.object\n    };\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        // Set the branch modal state\n        const copySupport = document.queryCommandSupported('copy');\n        this.state = {modalOpen: false, modalTitle: 'New branch', moduleId: null, copySupport:copySupport};\n        // Fetch any resources that are currently null or out of sync with the\n        // browser URL. It is assumed that the branch is set if the project is\n        // set (i.e., either both are null or neither of them).\n        const { branch, dispatch, notebook, project, projectList } = this.props;\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        const workflowId = this.props.match.params.workflow_id;\n        if ((project == null) || (project.id !== projectId)) {\n            dispatch(\n                fetchProject(\n                    projectId,\n                    branchId,\n                    (project, branch) => (fetchWorkflow(\n                        project,\n                        branch,\n                        workflowId\n            ))));\n        } else if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchWorkflow(project, project.findBranch(branchId), workflowId));\n        } else if (notebook == null) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        } else if (notebook.id !== workflowId) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        }\n        // Get project listing if not set yet\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. If there is a change in the\n     * pathname we need to ensure that the resources that are referenced in\n     * the path match those that are in the current state.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Check if the location path has changed. The change may either be\n        // the result from an update operation (create branch, delete branch),\n        // a switch between notebook versions or the result of the user using\n        // the back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch, notebook } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            const workflowId = this.props.match.params.workflow_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(\n                    fetchProject(\n                        projectId,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(\n                            project,\n                            branch,\n                            workflowId\n                ))));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(\n                    setBranch(\n                        project,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(project, branch, workflowId))\n                ));\n            } else if ((notebook == null) || (notebook.id !== workflowId)) {\n                dispatch(fetchWorkflow(project, branch, workflowId));\n            }\n        }\n    }\n    /**\n     * Dispatch a command specification object for a command that the user\n     * wants to add to the list of hidden commands.\n     */\n    handleAddFilteredCommand = (command) => {\n        this.props.dispatch(addFilteredCommand(command));\n    }\n    /**\n     * Callback handler to cancel the execution of a currently active workflow.\n     */\n    handleCancelWorkflowExec = () => {\n        const { dispatch, notebook } = this.props;\n        dispatch(cancelWorkflowExecution(notebook));\n    }\n    /**\n     * Call method to fetch workflow module handle and update notebook on state\n     * change.\n     */\n    handleCheckWorkflowStatus = (cell) => {\n        const { dispatch, notebook } = this.props;\n        dispatch(checkModuleStatus(notebook, cell));\n    }\n    /**\n     * Dispatch action to copy the given cell to the clipboard that is contained\n     * in the user settings.\n     */\n    handleCopyCell = (cell) => {\n        const { dispatch } = this.props;\n        dispatch(copyCell(cell));\n    }\n    /**\n     * Create a new branch and switch to that branch on success.\n     */\n    handleCreateBranch = (name) => {\n        const { branch, dispatch, history, notebook, project } = this.props;\n        const { moduleId } = this.state;\n        // The create branch method creates a new branch on the server, updates\n        // the project and push the URL for the new branch onto the history\n        // stack. This should trigger the component to render the head of\n        // the new branch.\n        dispatch(\n            createBranch(project, branch, notebook.id, moduleId, name, history)\n        );\n        this.hideCreateBranchModal();\n    }\n    /**\n     * Delete the given branch. Switch to the project default branch on success.\n     */\n    handleDeleteBranch = (branch) => {\n        const { dispatch, history, project } = this.props;\n        // The delete branch method will delete the branch on the server, update\n        // the project and push the URL of the default branch onto the history\n        // stack. This should trigger the component to render that branch.\n        dispatch(deleteBranch(project, branch, notebookPageUrl, history));\n    }\n    /**\n     * Delete the given notebook cell and update the notebook state on success.\n     */\n    handleDeleteCell = (cell) => {\n        const { dispatch, notebook } = this.props;\n        dispatch(deleteNotebookCell(notebook, cell));\n    }\n    /**\n     * Scroll to the given positions in the given dataset that is being\n     * displayed in the output area of the cell or navigate to the profiled views\n     */\n    handleDatasetNavigate = (module, dataset, offset, limit, profile) => {\n        const { dispatch, notebook } = this.props;\n        if(!profile){\n            dispatch(showCellDataset(notebook, module, dataset, offset, limit));\n        }else{\n            dispatch(updateCellDatasetProperties(()=>(this.props.notebook), module, dataset, offset, limit, profile));\n        }\n    }\n    /**\n     * Handle dismissal of all changes that were made to a notebook cell.\n     */\n    handleDismissCell = (cell) => {\n        const { dispatch, notebook } = this.props;\n        dispatch(dismissCellChanges(notebook, cell));\n    }\n    handleFetchDatasetCellAnnotations = (module, dataset, columnId, rowId) => {\n        const { dispatch } = this.props;\n        dispatch(fetchAnnotations(dataset, columnId, rowId));\n    }\n    /**\n     * Dismiss an open cell annotations modal.\n     */\n    dismissAnnotationModal = () => {\n        const { dispatch } = this.props;\n        dispatch(clearAnnotations());\n    }\n    /**\n     * Event handler when the user wants to insert a new cell. The new cell is\n     * inserted into the notebook at a position that is relative to the given\n     * cell (either before or after).  The cell and position may be null or\n     * undefined if the notebook is empty.\n     */\n    handleInsertCell = (cell, position) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        dispatch(createtNotebookCell(notebook, cell, position));\n    }\n    /**\n     * Event handler when the user wants to freeze a cell and its successors.\n     */\n    handleFreezeCell = (cell) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        const url = cell.module.links.get(HATEOAS_MODULE_FREEZE)\n        dispatch(freezeOrThawNotebookCell(notebook, url, cell.id))\n    }\n    /**\n     * Event handler when the user wants to freeze a cell and its successors.\n     */\n    handleThawCell = (cell) => {\n        // Cell has to be an existing workflow module cell. This should be\n        // ensured by the child component (not validated here).\n        const { dispatch, notebook } = this.props;\n        const url = cell.module.links.get(HATEOAS_MODULE_THAW)\n        dispatch(freezeOrThawNotebookCell(notebook, url, cell.id))\n    }\n    /**\n     * Dispatch a command specification object for a command that the user\n     * wants to remove from the list of hidden commands.\n     */\n    handleRemoveFilteredCommand = (command) => {\n        this.props.dispatch(removeFilteredCommand(command));\n    }\n    /**\n     * Dispatch an action to load the resource that is being shown as output\n     * for the notebook cell that displays the given workflow module.\n     */\n    handleSelectOutput = (module, resourceType, resourceName) => {\n        const { dispatch, notebook, userSettings } = this.props;\n        if (resourceType === CONTENT_CHART) {\n            dispatch(showCellChart(notebook, module, resourceName));\n        } else if (resourceType === CONTENT_DATASET) {\n            dispatch(showCellDataset(\n                notebook,\n                module,\n                notebook.getDatasetForModule(module, resourceName),\n                0,\n                userSettings.cellRowLimit()\n            ));\n        } else if (resourceType === CONTENT_HIDE) {\n            dispatch(hideCellOutput(notebook, module));\n        } else if (resourceType === CONTENT_TEXT) {\n            dispatch(showCellStdout(notebook, module));\n        } else if (resourceType === CONTENT_TIMESTAMPS) {\n            dispatch(showCellTimestamps(notebook, module));\n        } else if (resourceType === CONTENT_MULTIPLE){\n            dispatch(showCellStdout(notebook, module));\n        }\n    }\n    /**\n     * Dispatch action to set the given cell as the new active cell of the\n     * notebook. This will only be done if the given cell is a cell that is\n     * associated with a workflow module.\n     */\n    handleSelectActiveCell = (cell) => {\n        this.props.dispatch(selectNotebookCell(cell));\n    }\n    /**\n     * Show branch history page.\n     */\n    handleShowBranch = () => {\n        const { branch, history, project } = this.props;\n        history.push(branchPageUrl(project.id, branch.id));\n    }\n    /**\n     * Dispatch action to load the workflow at the head of the current branch.\n     */\n    handleShowBranchHead = () => {\n        const { branch, history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n    handleSubmitCell = (cell, commandSpec, data, onUpdateProgress) => {\n        const { dispatch, notebook, project } = this.props;\n        // Create the request object containing the package and command\n        // identifier together with the form data\n        const req = {\n            packageId: commandSpec.packageId,\n            commandId: commandSpec.id,\n            arguments: data\n        };\n        // The fileArg value will determine whether we need to upload a file\n        // first or not.\n        let fileArg = null;\n        if (commandSpec.fileParameter != null) {\n            fileArg = data.find((arg) => (\n                arg.id === commandSpec.fileParameter.id)\n            );\n        }\n        if (cell.isNewCell()) {\n            // Insert a new cell. The URL depends on whether the cell is the\n            // last cell in the notebook or not.\n            let url = null;\n            if (notebook.lastCell().id === cell.id) {\n                url = notebook.workflow.links.get(HATEOAS_MODULE_APPEND);\n            } else {\n                for (let i = 0; i < notebook.cells.length; i++) {\n                    if (notebook.cells[i].id === cell.id) {\n                        for (let j = i + 1; j < notebook.cells.length; j++) {\n                            const c = notebook.cells[j];\n                            if (!c.isNewCell()) {\n                                url = c.module.links.get(HATEOAS_MODULE_INSERT);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // If the file argument is not null we need to upload the file first\n            if ((fileArg != null) && (fileArg.value.file != null)) {\n                // Need to upload file first\n                dispatch(updateNotebookCellWithUpload(\n                    notebook,\n                    url,\n                    req,\n                    insertNotebookCell,\n                    cell.id,\n                    project.links.get(HATEOAS_PROJECT_FILE_UPLOAD),\n                    fileArg,\n                    onUpdateProgress\n                ));\n            } else {\n                dispatch(insertNotebookCell(notebook, url, req, cell.id));\n            }\n        } else {\n            // Replace an existing cell\n            const url = cell.module.links.get(HATEOAS_MODULE_REPLACE);\n            // If the file argument is not null we need to upload the file first\n            if ((fileArg != null) && (fileArg.value.fileid == null) && (fileArg.value.file != null)) {\n                // Need to yupload file first\n                dispatch(updateNotebookCellWithUpload(\n                    notebook,\n                    url,\n                    req,\n                    replaceNotebookCell,\n                    cell.id,\n                    project.links.get(HATEOAS_PROJECT_FILE_UPLOAD),\n                    fileArg,\n                    onUpdateProgress\n                ));\n            } else {\n                dispatch(replaceNotebookCell(notebook, url, req, cell.id));\n            }\n        }\n    }\n    /**\n     * Dispatch action to switch to a given branch and retrieve the workflow at\n     * the head of the branch.\n     */\n    handleSwitchBranch = (branch) => {\n        const { history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n    /**\n     * Hide the create new branch modal.\n     */\n    hideCreateBranchModal = () => {\n        this.setState({modalOpen: false, moduleId: null});\n    }\n    /**\n     * Switch to spreadsheet view and load the selected dataset for module.\n     */\n    handleEditSpreadsheet = (dataset, moduleId) => {\n        const { dispatch, history, branch, project } = this.props;\n        const projectId = project.id;\n        const datasetId = dataset.id;\n        dispatch(showModuleSpreadsheet(dataset, 0, 25, moduleId));  \n        history.push(spreadsheetPageUrl(projectId, branch.id, datasetId));\n    }\n    /**\n     * The content of the notebook page depends on the type of resource that\n     * is being shown.\n     */\n    render() {\n        const {\n            actionError,\n            activeCell,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            notebook,\n            project,\n            projectList,\n            reversed,\n            serviceApi,\n            userSettings,\n            annotations\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (notebook == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading Notebook ...' />;\n        } else if (notebook != null) {\n            const { modalOpen, modalTitle, copySupport } = this.state;\n            // List of notebook cells\n            let notebookCells =  (\n                <Notebook\n                    activeNotebookCell={activeCell}\n                    apiEngine={serviceApi.engine}\n                    notebook={notebook}\n                    project={project}\n                    reversed={reversed}\n                    onAddFilteredCommand={this.handleAddFilteredCommand}\n                    onCancelExec={this.handleCancelWorkflowExec}\n                    onChangeGrouping={this.handleChangeGrouping}\n                    onCheckStatus={this.handleCheckWorkflowStatus}\n                    onCopyCell={this.handleCopyCell}\n                    onCreateBranch={this.showCreateBranchModal}\n                    onDatasetNavigate={this.handleDatasetNavigate}\n                    onDeleteCell={this.handleDeleteCell}\n                    onDismissCell={this.handleDismissCell}\n                    onFetchAnnotations={this.handleFetchDatasetCellAnnotations}\n                    onInsertCell={this.handleInsertCell}\n                    onOutputSelect={this.handleSelectOutput}\n                    onRemoveFilteredCommand={this.handleRemoveFilteredCommand}\n                    onSelectNotebookCell={this.handleSelectActiveCell}\n                    onSubmitCell={this.handleSubmitCell}\n                    userSettings={userSettings}\n                \tonEditSpreadsheet={this.handleEditSpreadsheet}\n                    onFreezeCell={this.handleFreezeCell}\n                    onThawCell={this.handleThawCell}\n                />\n            );\n            // Add modal form for user to enter branch name when creating a new\n            // branch.\n            let notebookFooter = (\n                <EditResourceNameModal\n                    isValid={isNotEmptyString}\n                    open={modalOpen}\n                    prompt='Enter a name for the new branch'\n                    title={modalTitle}\n                    onCancel={this.hideCreateBranchModal}\n                    onSubmit={this.handleCreateBranch}\n                />\n            );\n            if (notebook.readOnly) {\n                notebookFooter = (\n                    <div className='notebook-footer'>\n                        <LargeMessageButton\n                            message='This is a read-only notebook. Create a new branch to start editing.'\n                            icon='code-fork'\n                            title='Create a new branch for this notebook'\n                            onClick={() => (this.showCreateBranchModal())}\n                        />\n                        { notebookFooter }\n                    </div>\n                );\n            }\n            const annotationsObject = (\n            \t\t<AnnotationObject\n\t\t\t            annotation={annotations}\n            \t\t    onDiscard={this.dismissAnnotationModal}\n\t\t\t        />\n\t        );\n            // Layout has reverse button at top followed by list of notebook cells\n            let pageContent = null;\n            const cellOutput = isCellOutputRequest();\n            if(cellOutput){\n            \t pageContent = ( \n\t    \t\t\t <CellOutputArea\n\t\t                cell={notebook.cells.find(ccell => ccell.id === cellOutput)}\n                        isActive={isActive}\n                        datasets={notebook.datasets}\n\t\t                onCancelExec={this.handleCancelWorkflowExec}\n\t\t                onCheckStatus={this.handleCheckWorkflowStatus}\n\t\t                onFetchAnnotations={this.handleFetchDatasetCellAnnotations}\n\t\t                onNavigateDataset={this.handleDatasetNavigate}\n\t\t                onOutputSelect={this.handleSelectOutput}\n\t\t                onSelectCell={this.handleSelectActiveCell}\n\t\t                userSettings={userSettings}\n\t\t                onEditSpreadsheet={this.handleEditSpreadsheet}\n\t\t            />\n\t           );\n            }\n            else{\n\t            pageContent = (\n\t                <div className=\"notebook\">\n\t                    <NotebookStatusHeader\n\t                        branch={branch}\n\t                        notebook={notebook}\n\t                        onShowHistory={this.handleShowBranch}\n\t                        onSwitchBranch={this.handleSwitchBranch}\n\t                        project={project}\n\t                        copySupport={copySupport}\n\t                    />\n\t                    { notebookCells }\n\t                    { notebookFooter }\n\t                    { annotationsObject }\n\t                </div>\n\t            );\n            }\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    notebook={notebook}\n                    onCreateBranch={this.showCreateBranchModal}\n                    onDeleteBranch={this.handleDeleteBranch}\n                    onShowNotebook={this.handleShowBranchHead}\n                    onSwitchBranch={this.handleSwitchBranch}\n                    project={project}\n                    projectList={projectList}\n                    resource={NotebookResource()}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                />\n            );\n        }\n        return content;\n    }\n    /**\n     * Show the create new branch modal. Set the modal title to indicate the\n     * cell index at which the new branch is created.\n     */\n    showCreateBranchModal = (module) => {\n        const { notebook } = this.props;\n        let moduleId = null;\n        let modalTitle = 'Create branch';\n        if (module == null) {\n            if (notebook.cells.length > 0) {\n                // Find the last cell that has a module\n                for (let i = notebook.cells.length - 1; i >= 0; i--) {\n                    const cell = notebook.cells[i];\n                    if (!cell.isNewCell()) {\n                        moduleId = cell.module.id;\n                        break;\n                    }\n                }\n            }\n        } else {\n            let count = 0;\n            for (let i = 0; i < notebook.cells.length; i++) {\n                const cell = notebook.cells[i];\n                if (!cell.isNewCell()) {\n                    count++;\n                    if (module.id === cell.id) {\n                        if (count === 1) {\n                            modalTitle = 'New branch for cell [1]';\n                        } else {\n                            modalTitle = 'New branch for cells [1-' + (count) + ']';\n                        }\n                        break;\n                    }\n                }\n            }\n            moduleId = module.id;\n        }\n        this.setState({modalOpen: true, modalTitle, moduleId: moduleId});\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        activeCell: state.notebookPage.activeCell,\n        branch: state.projectPage.branch,\n        fetchError: state.notebookPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.notebookPage.isFetching,\n        notebook: state.notebookPage.notebook,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        reversed: state.notebookPage.reversed,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        annotations: state.spreadsheet.annotations\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(NotebookPage));\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { Dimmer, Icon, Loader, Dropdown, Menu} from 'semantic-ui-react';\nimport { insertNotebookCell, updateNotebookCellWithUpload, checkModuleStatus } from '../../actions/project/Notebook';\nimport {\n    clearAnnotations, deleteAnnotations, fetchAnnotations, showSpreadsheet,\n    submitUpdate\n} from '../../actions/project/Spreadsheet';\nimport { CloseButton } from '../../components/Button'\nimport AnnotationObject from '../../components/annotation/AnnotationObject';\nimport EditResourceNameModal from '../../components/modals/EditResourceNameModal';\nimport GridCell from '../../components/spreadsheet/grid/GridCell';\nimport HeaderCell from '../../components/spreadsheet/grid/HeaderCell';\nimport RowIndexCell from '../../components/spreadsheet/grid/RowIndexCell';\nimport SpreadsheetScrollbar from '../../components/spreadsheet/SpreadsheetScrollbar';\nimport { MOVE, isNotEmptyString, isNonNegativeInt } from '../../util/App';\nimport {\n    VIZUAL, VIZUAL_OP, deleteColumn, deleteRow, insertColumn, insertRow, moveColumn,\n    moveRow,  renameColumn, sortDataset, updateCell, updateAnnotation\n} from '../../util/Vizual';\nimport '../../../css/App.css';\nimport '../../../css/Notebook.css';\nimport '../../../css/Spreadsheet.css';\nimport { HATEOAS_MODULE_APPEND } from '../../util/HATEOAS';\nimport { Draggable } from 'react-drag-and-drop'\nimport ColumnSelector from '../../components/notebook/input/form/ColumnSelector';\nimport { ApiPolling } from '../../components/Api';\n\n/**\n * Component to display a dataset in spreadsheet format. Spreadsheets are\n * currently displayed as Html tables.\n */\nclass Spreadsheet extends React.Component {\n    static propTypes = {\n        annotations: PropTypes.object,\n        dataset: PropTypes.object,\n        isUpdating: PropTypes.bool.isRequired,\n        project: PropTypes.object.isRequired,\n        serviceApi: PropTypes.object.isRequired,\n        notebook: PropTypes.object.isRequired,\n        serviceProperties: PropTypes.object.isRequired\n    }\n    constructor(props) {\n        super(props);\n        // Keep the id and coordinates of the active cell in the local state.\n        this.state = {\n            activeColumnId: -1,\n            activeRowId: -1,\n            activeColumnIndex: -1,\n            activeRowIndex: -1,\n            modal: null,\n            modalValue: null,\n            originalCellValue: null,\n            showNotebookCell: false,\n            updatedCellValue: null,\n            updatingColumnId: -1,\n            updatingRowId: -1,\n            updatingValue: null,\n            cellLimit:25,\n            activeDataset:null,\n            modalResult: '',\n            notebookRunning: false\n        }\n    }\n    static getDerivedStateFromProps(props, state){\n        let newState = {};\n        if (props.dataset.name !== state.activeDataset){\n            newState = {\n                cellLimit: 25,\n                activeDataset: props.dataset.name\n            }\n        }\n        if(state.cellLimit > props.dataset.rowCount){\n            newState = {\n                ...newState,\n                cellLimit: props.dataset.rowCount\n            }\n        }\n        return newState;\n    }\n\n    componentWillReceiveProps(newProps) {\n        // Clear the active cell if a different dataset is being shown\n        let clearCell = false;\n        const currentDataset = this.props.dataset;\n        const newDataset = newProps.dataset;\n        if (currentDataset != null) {\n            if (newDataset != null) {\n                clearCell = (currentDataset.name !== newDataset.name);\n            } else {\n                clearCell = true;\n            }\n        } else {\n            clearCell = true;\n        }\n        if (clearCell === true) {\n            this.clearActiveCell();\n        }\n    }\n    /**\n     * Append a module to the current workflow.\n     */\n    appendModule = (command, data) => {\n        const { dispatch, dataset, serviceApi, notebook } = this.props;\n        // Create data object for request.\n        const reqData = {type: command.type, id: command.id, arguments: data};\n        //notebook.workflow\n        // Hide notebook cell\n        this.toggleNotebookCell();\n        // Dispatch update request. If the current dataset is being renamed or\n        // deleted we need to switch to notebook view\n        if (\n            (command.type === VIZUAL_OP) &&\n            ((command.id === VIZUAL.DROP_DATASET) || (command.id === VIZUAL.RENAME_DATASET))\n        ) {\n            dispatch(insertNotebookCell(notebook.workflow.links.get(HATEOAS_MODULE_APPEND), reqData));\n        } else if ((command.type === VIZUAL_OP) && (command.id === VIZUAL.LOAD)) {\n            const name = data.name;\n            dispatch(\n                updateNotebookCellWithUpload(\n                    notebook.workflow.links.get(HATEOAS_MODULE_APPEND),\n                    reqData,\n                    (url, data) => (submitUpdate(notebook.workflow, {name: name, offset:0}, data)),\n                    serviceApi.links.upload\n                )\n            );\n        } else {\n            dispatch(submitUpdate(notebook.workflow, dataset, reqData))\n        }\n    }\n    /**\n     * Set the current active cell to undefined state.\n     */\n    clearActiveCell = () => {\n        // Submit any changes to the current active cell\n        this.submitPendingUpdate();\n        this.setState({\n            activeColumnId: -1,\n            activeRowId: -1,\n            activeColumnIndex: -1,\n            activeRowIndex: -1,\n            originalCellValue: null,\n            updatedCellValue: null\n        });\n    }\n    deleteUserAnnotation = (annotation, annoId) => {\n        const { dispatch, dataset } = this.props;\n        const { column, row } = annotation;\n        dispatch(deleteAnnotations(dataset, column, row, annoId));\n    }\n    /**\n     * Dismiss an open cell annotations modal.\n     */\n    dismissAnnotationModal = () => {\n        const { dispatch } = this.props;\n        dispatch(clearAnnotations());\n    }\n    /**\n     * Dismiss any open modals.\n     */\n    dismissModal = () => (this.setState({modal: null, modalValue: null, modalResult:''}))\n    /**\n     * Keep track of the value of the active cell.\n     */\n    handleCellUpdate = (value) => {\n        this.setState({updatedCellValue: value})\n    }\n    /**\n     * Move the active grid cell.\n     */\n    handleMoveCell = (direction) => {\n        const {\n            activeColumnId, activeRowId, activeColumnIndex, activeRowIndex\n        } = this.state;\n        // Do nothing if the active cell is not a grid cell.\n        if ((activeColumnId === -1) || (activeRowId === -1)) {\n            return;\n        }\n        const { dataset } = this.props;\n        // Get the index of the first and last row in the dataset\n        const minRowIndex = dataset.rows[0].index;\n        const maxRowIndex = dataset.rows[dataset.rows.length - 1].index;\n        const columns = dataset.columns;\n        let colIdx = activeColumnIndex;\n        let rowIdx = activeRowIndex;\n        if (direction === MOVE.UP) {\n            rowIdx -= 1;\n            if (rowIdx < minRowIndex) {\n                rowIdx = maxRowIndex;\n            }\n        } else if (direction === MOVE.DOWN) {\n            rowIdx += 1;\n            if (rowIdx > maxRowIndex) {\n                rowIdx = minRowIndex;\n            }\n        } else if (direction === MOVE.RIGHT) {\n            colIdx += 1;\n            if (colIdx >= columns.length) {\n                colIdx = 0;\n                rowIdx += 1;\n                if (rowIdx > maxRowIndex) {\n                    rowIdx = minRowIndex;\n                }\n            }\n        } else if (direction === MOVE.LEFT) {\n            colIdx -= 1;\n            if (colIdx < 0) {\n                colIdx = columns.length - 1;\n                rowIdx -= 1;\n                if (rowIdx < minRowIndex) {\n                    rowIdx = maxRowIndex;\n                }\n            }\n        }\n        // Update the active cell information\n        this.handleSelectCell(columns[colIdx].id, dataset.rowAtIndex(Math.abs(dataset.offset-rowIdx)).id, colIdx, rowIdx);\n    }\n    /**\n     * Move the active header cell. Only supports moving left or right.\n     */\n    handleMoveHeader = (direction) => {\n        const { activeColumnId, activeRowId, activeColumnIndex } = this.state;\n        // Do nothing if the active cell is not a header cell.\n        if ((activeColumnId === -1) || (activeRowId !== -1)) {\n            return;\n        }\n        const { dataset } = this.props;\n        const columns = dataset.columns;\n        let colIdx = activeColumnIndex;\n        if (direction === MOVE.RIGHT) {\n            colIdx += 1;\n            if (colIdx >= columns.length) {\n                colIdx = 0;\n            }\n        } else if (direction === MOVE.LEFT) {\n            colIdx -= 1;\n            if (colIdx < 0) {\n                colIdx = columns.length - 1;\n            }\n        }\n        // Update the active cell information\n        this.handleSelectCell(columns[colIdx].id, -1, colIdx, -1);\n    }\n    /**\n     * Navigate to a different block of the underlying dataset.\n     */\n    handleNavigate = (dataseti, offset, limit) => {\n        // Clear active cell. Will submit any changes that were made to the\n        // value of the current active cell.\n    \tthis.clearActiveCell();\n        // Dispatch navitation request\n        const { dispatch, dataset } = this.props;\n        let url = dataset.links.getDatasetUrl(offset, limit);\n        dispatch(showSpreadsheet(dataset, url));\n    }\n    /**\n     * Set the coordinates of the selected cell.\n     */\n    handleSelectCell = (columnId, rowId, columnIndex, rowIndex) => {\n        // Ignore event while updating\n        const { isUpdating, notebook } = this.props;\n        if ((isUpdating)  || (notebook.workflow.readOnly)) {\n            return;\n        }\n        // Submit any changes to the current active cell\n        this.submitPendingUpdate();\n        // Get the current value of the selected sell\n        let value = null;\n        if (columnIndex !== -1) {\n            const { dataset } = this.props;\n            if (rowIndex !== -1) {\n                value = dataset.rowAtIndex(Math.abs(dataset.offset-rowIndex)).values[columnIndex];\n            } else {\n                value = dataset.columns[columnIndex].name;\n            }\n        }\n        this.setState({\n            activeColumnId: columnId,\n            activeRowId: rowId,\n            activeColumnIndex: columnIndex,\n            activeRowIndex: rowIndex,\n            originalCellValue: value,\n            updatedCellValue: value\n        });\n    }\n    handleSubmitModal = (value) => {\n        const { dataset } = this.props;\n        const { modal, modalValue } = this.state;\n        this.dismissModal();\n        if (modal === VIZUAL.INSERT_COLUMN) {\n            return this.submitVizualCommand(\n                insertColumn(dataset.name, value, modalValue)\n            );\n        } else if (modal === VIZUAL.MOVE_COLUMN) {\n            return this.submitVizualCommand(\n                moveColumn(dataset.name, modalValue, value)\n            );\n        } else if (modal === VIZUAL.MOVE_ROW) {\n            return this.submitVizualCommand(\n                moveRow(dataset.name, modalValue, value)\n            );\n        }\n    }\n    /**\n     * Handle a VizUAL action triggered by one of the header or index cells.\n     * argument (para) is optional (e.g., used to specify the sort order).\n     */\n    handleMoveAction = (cmdId, srcValue, targetValue) => {\n    \tconst { dataset } = this.props;\n    \tif (cmdId === VIZUAL.MOVE_COLUMN) {\n            return this.submitVizualCommand(\n                moveColumn(dataset.name, srcValue, targetValue)\n            );\n        } else if (cmdId === VIZUAL.MOVE_ROW) {\n            return this.submitVizualCommand(\n                moveRow(dataset.name, srcValue, targetValue)\n            );\n        }\n    }\n   /**\n     * Handle a VizUAL action triggered by one of the context menues. The third\n     * \n     */\n    handleVizualAction = (cmdId, identifier, para) => {\n        const { dataset } = this.props;\n        switch (cmdId) {\n            case VIZUAL.INSERT_COLUMN:\n            case VIZUAL.MOVE_COLUMN:\n            case VIZUAL.MOVE_ROW:\n                this.setState({modal: cmdId, modalValue: identifier});\n                return;\n            case VIZUAL.DELETE_COLUMN:\n                return this.submitVizualCommand(\n                    deleteColumn(dataset.name, identifier)\n                );\n            case VIZUAL.DELETE_ROW:\n                return this.submitVizualCommand(\n                    deleteRow(dataset.name, identifier)\n                );\n            case VIZUAL.INSERT_ROW:\n                return this.submitVizualCommand(\n                    insertRow(dataset.name, identifier)\n                );\n            case VIZUAL.SORT:\n            return this.submitVizualCommand(\n                sortDataset(dataset.name, identifier, para)\n            );\n            default:\n                return;\n        }\n    }\n    toggleNotebookCell = () => {\n        const { showNotebookCell } = this.state;\n        this.setState({showNotebookCell: !showNotebookCell});\n    }\n    handleFetchAnnotations = (columnId, rowId) => {\n        const { dispatch, dataset } = this.props;\n        dispatch(fetchAnnotations(dataset, columnId, rowId));\n    }\n    /**\n     * handles dropdown menu requests\n     */\n    handleDisplayRows = (e, data) => {\n        const {dataset} = this.props;\n        const {cellLimit} = this.state;\n        if(data.value!==cellLimit){\n            if (data.value ==='all' && cellLimit !==dataset.rowCount){\n                this.setState({cellLimit:dataset.rowCount});\n                this.handleNavigate(dataset, 0, dataset.rowCount)\n            }else if(data.value !=='all'){\n                this.setState({cellLimit: data.value});\n                this.handleNavigate(dataset, dataset.offset, data.value);\n            }\n        }\n    };\n    /**\n     * Render the spreadsheet as a Html table.\n     */\n    render() {\n        const {\n            annotations,\n            dataset,\n            isUpdating,\n            notebook,\n            serviceProperties,\n            dispatch\n        } = this.props;\n        const {\n            activeColumnId,\n            activeRowId,\n            showNotebookCell,\n            updatingColumnId,\n            updatingRowId,\n            updatingValue,\n            notebookRunning,\n            cellLimit\n        } = this.state;\n        const columns = dataset.columns;\n        //\n        // Grid header\n        //\n        let header = [\n            <RowIndexCell\n                key={-1}\n                rowIndex={-1}\n                value={' '}\n                onClick={this.clearActiveCell}\n                isSpreadsheet={true}\n            />\n        ];\n        for (let cidx = 0; cidx < columns.length; cidx++) {\n            const column = columns[cidx];\n            const isActive = (activeColumnId === column.id) && (activeRowId === -1);\n            const isBlocked = ((isUpdating) && (updatingColumnId === column.id) && (updatingRowId === -1));\n            let columnName = null;\n            if (isBlocked) {\n                columnName = updatingValue;\n            } else {\n                columnName = column.name;\n            }\n            header.push(\n                <HeaderCell\n                    key={column.id}\n                    column={column}\n                    columnIndex={cidx}\n                    disabled={isUpdating || notebook.workflow.readOnly}\n                    isActive={(!isUpdating) && (isActive)}\n                    isUpdating={isBlocked}\n                    value={columnName}\n                    onAction={this.handleVizualAction}\n                    onClick={this.handleSelectCell}\n                    onMove={this.handleMoveHeader}\n                    onUpdate={this.handleCellUpdate}\n                \tisEditing={true}\n                    onMoveAction={this.handleMoveAction}\n                    isSpreadsheet={true}\n                />\n            );\n        }\n        header = (<tr>{header}</tr>);\n        //\n        // Grid rows\n        //\n        const rows = [];\n        const offset = dataset.offset\n        for (let ridx = 0; ridx < dataset.rows.length; ridx++) {\n            const row = dataset.rows[ridx];\n            const cells = [\n                <RowIndexCell\n                    key={row.id}\n                    rowId={row.id}\n                    disabled={isUpdating || notebook.workflow.readOnly}\n                    rowIndex={ridx + offset}\n                    value={ridx + offset}\n                    onAction={this.handleVizualAction}\n                    onClick={this.clearActiveCell}\n                    onMoveAction={this.handleMoveAction}\n                />\n            ];\n            for (let cidx = 0; cidx < columns.length; cidx++) {\n                const column = columns[cidx];\n                const isActive = (activeColumnId === column.id) && (activeRowId === row.id);\n                const isBlocked = ((isUpdating) && (updatingColumnId === column.id) && (updatingRowId === row.id));\n                let value = null;\n                if (isBlocked) {\n                    value = updatingValue;\n                } else {\n                    value = row.values[cidx];\n                }\n                cells.push(\n                    <GridCell\n                        key={'C' + column.id + 'R' + row.id}\n                        column={column}\n                        columnIndex={cidx}\n                        hasAnnotations={dataset.hasAnnotations(column.id, row.id)}\n                        isActive={(!isUpdating) && (isActive)}\n                        isUpdating={isBlocked}\n                        rowId={row.id}\n                        rowIndex={ridx + offset}\n                        value={value}\n                        onClick={this.handleSelectCell}\n                        onMove={this.handleMoveCell}\n                        onUpdate={this.handleCellUpdate}\n                        onFetchAnnotations={this.handleFetchAnnotations}\n                    />\n                );\n            }\n            rows.push(<Draggable key={row.id} \n                          wrapperComponent={<tr></tr>} \n                          type=\"row-index-cell\" \n        \t\t\t      data={row.id} \n\t\t\t              onDragStart={this.handleDragStart}  >\n\t\t\t\t              {cells}\n\t\t\t\t          </Draggable>);\n        }\n        let showAnnoHandler = null;\n        if ((activeColumnId >= 0) && (activeRowId !== -1)) {\n            showAnnoHandler = this.showAnnotationModal;\n        }\n        // Show a notebook cell to append at the end of the current workflow.\n        let notebookCell = null;\n        if (showNotebookCell) {\n            notebookCell = (\n                <div className='notebook-cell-xp-new'>\n                    <table className='cell-area'><tbody>\n                        <tr>\n                            <td className='cell-index'>\n                                <CloseButton\n                                    name='minus-square-o'\n                                    onClick={this.toggleNotebookCell}\n                                />\n                            </td>\n                            <td className='cell-cmd'>\n                                <div className='cell-form'>\n                                    \n                                </div>\n                            </td>\n                        </tr>\n                    </tbody></table>\n                </div>\n            );\n        }\n\n        let annoButtonCss = null;\n        if (showAnnoHandler != null) {\n            annoButtonCss = 'icon-button';\n        }\n        let notebookCellButton = null;\n        if (!notebook.workflow.readOnly) {\n            let cellIcon = 'plus square outline';\n            if (showNotebookCell) {\n                cellIcon = 'minus square outline';\n            }\n            notebookCellButton = (\n                <span className='left-padding-md'>\n                    <Icon\n                        className='icon-button'\n                        title='Add notebook cell'\n                        name={cellIcon}\n                        onClick={this.toggleNotebookCell}\n                    />\n                </span>\n            );\n        }\n        let dropdownItems = [];\n        for(let v of [25, 50, 100, 150]){\n            if(v < dataset.rowCount){\n                dropdownItems.push(\n                    <Dropdown.Item text={`${v} rows`} value={v} onClick={this.handleDisplayRows}/>\n                )\n            }\n        }\n        dropdownItems.push(\n            <Dropdown.Item text={`All rows(${dataset.rowCount})`} label={dataset.rowCount>serviceProperties.maxDownloadRowLimit&&`row limit (${serviceProperties.maxDownloadRowLimit}) exceeded`}\n                           disabled={dataset.rowCount>serviceProperties.maxDownloadRowLimit} value=\"all\" onClick={this.handleDisplayRows}/>\n        )\n        let apiPolling = null;\n        if(notebook.cells[notebook.cells.length - 1].isRunning()){\n        \tapiPolling = <ApiPolling\n\t\t            interval={1000}\n\t\t            //onCancel={onCancelExec}\n\t\t            onFetch={this.handleCheckStatus}\n\t\t            resource={notebook.cells[notebook.cells.length - 1]}\n\t\t            text={notebook.cells[notebook.cells.length - 1].isRunning() ? 'Running ...' : 'Pending ...'}\n\t\t        />\n        }\n        else if(!notebook.cells[notebook.cells.length - 1].isRunning() && notebookRunning){\n        \tapiPolling = <ApiPolling\n\t            interval={1000}\n\t            //onCancel={onCancelExec}\n\t            onFetch={this.handleCheckStatus}\n\t            resource={notebook.cells[notebook.cells.length - 1]}\n\t            text={notebook.cells[notebook.cells.length - 1].isRunning() ? 'Running ...' : 'Pending ...'}\n\t        />\n        \tlet newDataset = notebook.cells[notebook.cells.length - 1].module.datasets.find(ds => ds.name === dataset.name)\n        \tlet url = newDataset.links.getDatasetUrl(dataset.offset, cellLimit);\n            dispatch(showSpreadsheet(dataset, url));\n        }\n        return (\n            <div className='spreadsheet-container'>\n                <h1 className='dataset-name'>\n                    {dataset.name}\n                    <span className='left-padding-lg'>\n                        <Icon\n                            className={annoButtonCss}\n                            name='comment alternate outline'\n                            title='Show annotations'\n                            disabled={showAnnoHandler === null}\n                            onClick={showAnnoHandler}\n                        />\n                    </span>\n                    { notebookCellButton }\n                    <Menu compact style={{float:'right'}}>\n                        <Dropdown\n                            selection\n                            text={`Showing ${this.state.cellLimit} rows`}\n                            options={dropdownItems}\n                        />\n                    </Menu>\n                </h1>\n                <AnnotationObject\n                    annotation={annotations}\n                    onDelete={this.deleteUserAnnotation}\n                    onDiscard={this.dismissAnnotationModal}\n                    onSubmit={this.submitUserAnnotation}\n                />\n                <Dimmer.Dimmable dimmed={isUpdating}>\n                    <Loader active={isUpdating}/>\n                    { notebookCell }\n                    <div className='spreadsheet-container'>\n\t                    <div className='spreadsheet-table-container'>\n\t                    <table className='spreadsheet'>\n\t                        <thead>{header}</thead>\n\t                        <tbody>{rows}</tbody>\n\t                    </table>\n\t                    </div>\n\t                    <SpreadsheetScrollbar\n                            cellLimit={this.state.cellLimit}\n\t\t                    dataset={dataset}\n\t\t                    onNavigate={this.handleNavigate}\n\t\t                />\n\t                </div>\n                </Dimmer.Dimmable>\n                {this.showModal()}\n                {apiPolling}\n            </div>\n        );\n    }\n    handleCheckStatus = () => {\n    \tconst { dispatch, notebook } = this.props;\n    \tdispatch(checkModuleStatus(notebook, notebook.cells[notebook.cells.length - 1]));\n    \tthis.setState({notebookRunning: notebook.cells[notebook.cells.length - 1].isRunning()})\n    \t\n    } \n    /**\n     * Show the annotations modal for the current active cell.\n     */\n    showAnnotationModal = () => {\n        const { dispatch, dataset } = this.props;\n        const { activeColumnId, activeRowId } = this.state;\n        dispatch(fetchAnnotations(dataset, activeColumnId, activeRowId));\n    }\n    handleMoveColumnModalInputChange = (id, value) => {\n    \tthis.setState({modalResult: value});\n    }\n    handleMoveRowModalInputChange = (event, value) => {\n    \tthis.setState({modalResult: value.value});\n    }\n    /**\n     * Show modal if the internal state .modal value is set.\n     */\n    showModal = () => {\n        const { modal, modalValue, modalResult } = this.state;\n        let content = null;\n        let inputComponent = null;\n        let value = '';\n        if (modal != null) {\n            let valueValidFunc = null;\n            let modalTitle = null;\n            let modalPrompt = null;\n            if (modal === VIZUAL.INSERT_COLUMN) {\n                valueValidFunc = isNotEmptyString;\n                modalTitle = 'Insert Column';\n                modalPrompt = 'Name of new column';\n            } else if (modal === VIZUAL.MOVE_COLUMN) {\n                const { dataset } = this.props;\n                const columns = dataset.columns;\n                let column = null;\n                for (let i = 0; i < columns.length; i++) {\n                    if (columns[i].id === modalValue) {\n                        column = columns[i];\n                        break;\n                    }\n                }\n                value = modalResult;\n                inputComponent = <ColumnSelector\n\t                id={dataset.id}\n\t                isRequired={true}\n\t                name={dataset.name}\n\t                dataset={dataset}\n\t                value={value}\n                    onChange={this.handleMoveColumnModalInputChange}\n\t            />\n                valueValidFunc = isNonNegativeInt;\n                modalTitle = 'Move Column';\n                modalPrompt = 'Target position for column ' + column.name;\n            } else if (modal === VIZUAL.MOVE_ROW) {\n            \tconst { dataset } = this.props;\n            \tvalue = modalResult;\n                let options = [...Array(dataset.rowCount).keys()].map(x => { return { key: x, text: x, value: x } });\n            \tinputComponent = <Dropdown\n\t                value={value}\n\t                selection\n\t                fluid\n\t                scrolling\n\t                options={options}\n\t                onChange={this.handleMoveRowModalInputChange}\n\t            />\n                valueValidFunc = isNonNegativeInt;\n                modalTitle = 'Move Row';\n                modalPrompt = 'Target position for row ' + modalValue;\n            }\n            return (\n                <EditResourceNameModal\n                    open={true}\n                    isValid={valueValidFunc}\n                    title={modalTitle}\n                    prompt={modalPrompt}\n                    value={value}\n                    onCancel={this.dismissModal}\n                    onSubmit={this.handleSubmitModal}\n                    inputComponent={inputComponent}\n                />\n            );\n        }\n        return content;\n    }\n    getInsertModuleIndex = () => {\n    \tconst { dataset, notebook } = this.props;\n    \tlet moduleIndex = null;\n        if(dataset.moduleId){\n        \tif(dataset.moduleIndex){\n        \t\t//there is a pending vizual insert so we want to insert after that (+1)\n            \tmoduleIndex = dataset.moduleIndex+1;\n            }\n            else {\n            \tconst findModuleById = (imodule) => imodule.id === dataset.moduleId;\n            \tmoduleIndex = notebook.workflow.modules.findIndex( findModuleById)+1;\n            }\n        \tconst lastModule = ( moduleIndex === notebook.workflow.modules.length );\n        \tif(lastModule){\n        \t\t//we are on the last module so we can just append\n        \t\tmoduleIndex = null;\n        \t}\n        }\n        return moduleIndex;\n    }\n    submitPendingUpdate = () => {\n        const {\n            activeColumnId,\n            activeRowId,\n            originalCellValue,\n            updatedCellValue,\n        } = this.state;\n        if (activeColumnId !== -1) {\n            const { dispatch, dataset, notebook } = this.props;\n            const moduleIndex = this.getInsertModuleIndex();\n            if (originalCellValue !== updatedCellValue) {\n                this.setState({\n                    updatingColumnId: activeColumnId,\n                    updatingRowId: activeRowId,\n                    updatingValue: updatedCellValue\n                })\n                let cmd = null;\n                if (activeRowId !== -1) {\n                    cmd = updateCell(\n                        dataset.name,\n                        activeColumnId,\n                        activeRowId,\n                        updatedCellValue\n                    );\n                } else {\n                    cmd = renameColumn(\n                        dataset.name,\n                        activeColumnId,\n                        updatedCellValue\n                    );\n                }\n                dispatch(submitUpdate(notebook, dataset, cmd, moduleIndex));\n            }\n        }\n    }\n\n    submitUserAnnotation = (annotation, key, value) => {\n        const { dispatch, dataset, notebook } = this.props;\n        const { column, row } = annotation;\n        //dispatch(updateAnnotations(dataset, column, row, key, value));\n        const moduleIndex = this.getInsertModuleIndex();\n        dispatch(submitUpdate(notebook, dataset, updateAnnotation(dataset, column, value, row), moduleIndex))\n    }\n    submitVizualCommand = (cmd) => {\n        const { dispatch, dataset, notebook } = this.props;\n        const moduleIndex = this.getInsertModuleIndex();\n        // Clear any active cells without submitting potential changes\n        this.setState({\n            activeColumnId: -1,\n            activeRowId: -1,\n            activeColumnIndex: -1,\n            activeRowIndex: -1,\n            originalCellValue: null,\n            updatedCellValue: null,\n            updatingColumnId: -1,\n            updatingRowId: -1,\n            updatingValue: null\n        });\n        dispatch(submitUpdate(notebook, dataset, cmd, moduleIndex));\n    }\n}\n\n\nconst mapStateToProps = state => {\n    let dataset = state.spreadsheet.dataset;\n    try{\n        // assign dataset.name the name associated with dataset.id\n        dataset.name = state.notebookPage.notebook.datasets[dataset.id].name;\n    }catch (TypeError) {\n        // to prevent spreadsheet from breaking between REQUEST_WORKFLOW AND RECEIVE_WORKFLOW when dataset is undefined\n    }\n    return {\n        annotations: state.spreadsheet.annotations,\n        dataset: dataset,\n        isUpdating: state.spreadsheet.isUpdating,\n        opError: state.spreadsheet.opError,\n        project: state.projectPage.project,\n        serviceApi: state.serviceApi,\n        notebook: state.notebookPage.notebook,\n        serviceProperties: state.serviceApi.properties\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Spreadsheet))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n// import { addFilteredCommand, copyCell, removeFilteredCommand } from '../../actions/main/App';\n// import { createBranch, deleteBranch } from '../../actions/project/Branch';\nimport { fetchWorkflow } from '../../actions/project/Notebook';\n// import { cancelWorkflowExecution, checkModuleStatus, createtNotebookCell,\n//     deleteNotebookCell, dismissCellChanges, fetchAnnotations, fetchWorkflow,\n//     hideCellOutput, insertNotebookCell, replaceNotebookCell, showCellChart,\n//     selectNotebookCell, showCellDataset, showCellStdout,\n//     showCellTimestamps, updateNotebookCellWithUpload } from '../../actions/project/Notebook';\nimport { fetchProject, setBranch } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\n// import { LargeMessageButton } from '../../components/Button';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\n// import EditResourceNameModal from '../../components/modals/EditResourceNameModal';\n// import NotebookStatusHeader from '../../components/notebook/NotebookStatusHeader';\n// import Notebook from '../../components/notebook/Notebook';\nimport ResourcePage from '../../components/ResourcePage';\n// import { CONTENT_CHART, CONTENT_DATASET, CONTENT_HIDE, CONTENT_TEXT,\n//     CONTENT_TIMESTAMPS } from '../../resources/Outputs';\nimport { notebookPageUrl, SpreadsheetResource } from '../../util/App';\n// import { branchPageUrl, isNotEmptyString, notebookPageUrl,\n//     SpreadsheetResource } from '../../util/App';\n// import { HATEOAS_MODULE_APPEND, HATEOAS_MODULE_INSERT,\n//     HATEOAS_MODULE_REPLACE, HATEOAS_PROJECT_FILE_UPLOAD } from '../../util/HATEOAS';\nimport Spreadsheet from '../spreadsheet/Spreadsheet';\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/Chart.css';\n\n/**\n * The notebook page displays workflows as notebooks and resources that are\n * associated with a workflow (e.g., datasets and charts).\n */\nclass SpreadsheetPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        activeCell: PropTypes.string,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        notebook: PropTypes.object,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        reversed: PropTypes.bool.isRequired,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        dataset: PropTypes.object\n    }\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        // Set the branch modal state\n        this.state = {modalOpen: false, modalTitle: 'New branch', moduleId: null};\n        // Fetch any resources that are currently null or out of sync with the\n        // browser URL. It is assumed that the branch is set if the project is\n        // set (i.e., either both are null or neither of them).\n        const { branch, dispatch, notebook, project, projectList } = this.props;\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        const workflowId = this.props.match.params.workflow_id;\n        if ((project == null) || (project.id !== projectId)) {\n            dispatch(\n                fetchProject(\n                    projectId,\n                    branchId,\n                    (project, branch) => (fetchWorkflow(\n                        project,\n                        branch,\n                        workflowId\n            ))));\n        } else if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchWorkflow(project, project.findBranch(branchId), workflowId));\n        } else if (notebook == null) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        } else if (notebook.id !== workflowId) {\n            dispatch(fetchWorkflow(project, branch, workflowId));\n        }\n        // Get project listing if not set yet\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. If there is a change in the\n     * pathname we need to ensure that the resources that are referenced in\n     * the path match those that are in the current state.\n     */\n    componentDidUpdate(prevProps) {\n        // Check if the location path has changed. The change may either be\n        // the result from an update operation (create branch, delete branch),\n        // a switch between notebook versions or the result of the user using\n        // the back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch, notebook } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            const workflowId = this.props.match.params.workflow_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(\n                    fetchProject(\n                        projectId,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(\n                            project,\n                            branch,\n                            workflowId\n                ))));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(\n                    setBranch(\n                        project,\n                        branchId,\n                        (project, branch) => (fetchWorkflow(project, branch, workflowId))\n                ));\n            } else if ((notebook == null) || (notebook.id !== workflowId)) {\n                dispatch(fetchWorkflow(project, branch, workflowId));\n            }\n        }\n    }\n\n    /**\n     * Dispatch action to load the workflow at the head of the current branch.\n     */\n    handleShowBranchHead = () => {\n        const { branch, history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n   \n    /**\n     * The content of the notebook page depends on the type of resource that\n     * is being shown.\n     */\n    render() {\n        const {\n            actionError,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            notebook,\n            project,\n            projectList,\n            serviceApi,\n            userSettings, \n            dataset\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (notebook == null) || (dataset == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading Spreadsheet...' />;\n        } else if (dataset != null) {\n            \n            // Layout has reverse button at top followed by list of notebook cells\n            const pageContent = (\n                <div className=\"spreadsheet\">\n                \t<Spreadsheet />\n                </div>\n            );\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    notebook={notebook}\n                    project={project}\n                    projectList={projectList}\n                    resource={new SpreadsheetResource(dataset)}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                    onShowNotebook={this.handleShowBranchHead}\n                />\n            );\n        }\n        return content;\n    }\n   \n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        activeCell: state.notebookPage.activeCell,\n        branch: state.projectPage.branch,\n        fetchError: state.notebookPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.notebookPage.isFetching,\n        notebook: state.notebookPage.notebook,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        reversed: state.notebookPage.reversed,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        dataset: state.datasetErrorsPage.dataset\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(SpreadsheetPage));\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//import DatasetRepair from './DatasetRepair';\nimport { Icon } from 'semantic-ui-react';\nimport '../../../css/DatasetCaveat.css'\n\n/**\n * Display a list of dataset errors detected by mimir\n */\nclass DatasetReason extends React.Component {\n    static propTypes = {\n        reason: PropTypes.object.isRequired,\n        onGotoError: PropTypes.func.isRequired,\n        onRepairError: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {expanded: false }\n    }\n\n    handleExpand = () => {\n    \tconst { expanded } = this.state;\n    \tthis.setState({expanded:!expanded})\n    }\n\n    handleGotoError = (event) => {\n    \tconst { onGotoError, reason } = this.props;\n    \tonGotoError(reason.value);\n    }\n\n    buildReasonElement = (elkey, elvalue) => {\n    \tif(Array.isArray(elvalue)){\n    \t\tlet elements = []\n    \t\tfor(let i = 0; i<elvalue.length; i++){\n    \t\t\telements.push(this.buildReasonElement(elkey+'.'+i,elvalue[i]))\n    \t\t}\n    \t\treturn elements;\n    \t}\n    \telse if(elvalue instanceof Object){\n    \t\tlet elements = []\n    \t\tfor (let [ek, ev] of Object.entries(elvalue)) {\n    \t\t\telements.push(this.buildReasonElement(elkey+'.'+ek,ev))\n    \t\t}\n    \t\treturn elements;\n    \t}\n    \telse{\n    \t\treturn (<div className='dataset-reason-element'><td className='dataset-reason-key'><h4>{elkey}: </h4></td><td>{elvalue}</td></div>);\n    \t}\n    }\n    /**\n     *\n     */\n    render() {\n    \tconst { reason/*, onRepairError*/ } = this.props;\n        const { key, family, message, confirmed } = reason;\n        //const { expanded } = this.state;\n        const reasonElements = [];//this.buildReasonElement('reason',value);\n        reasonElements.unshift(<div className='dataset-reason-element'><td className='dataset-reason-key'><h4>family: </h4></td><td>{family}</td></div>)\n        reasonElements.unshift(<div className='dataset-reason-element'><td className='dataset-reason-key'><h4>key: </h4></td><td>{key}</td></div>)\n\n        let tableContent = null\n\n        /*if(expanded){\n        \ttableContent = (<div>\n        \t\t\t\t\t\t<table>{reasonElements}</table>\n        \t\t\t\t\t\t<DatasetRepair\n\t        \t                \treason={reason}\n\t        \t                \tonRepairError={onRepairError}\n\t        \t                />\n        \t\t\t\t\t</div> )\n        }*/\n\n        let gotoErrorIcon = null\n        if(key && Array.isArray(key) && key.length !== 0 ){\n        \tgotoErrorIcon = (<Icon name='external alternate' size='small' />)\n        }\n        let errorIcon = (<Icon name='warning sign' size='large' color='yellow' />)\n        if(confirmed){\n        \terrorIcon = (<Icon name='check circle' size='large' color='green' />)\n        }\n\n        return (\n        \t<div className='dataset-reason' >\n                <table><tr>\n                \t<td className='dataset-reason-icon'>\n                \t\t<div onClick={this.handleExpand}>{errorIcon}</div>\n                \t</td>\n                \t<td className='dataset-reason-english'><div onClick={this.handleExpand}>{message}</div></td>\n                \t<td className='dataset-reason-goto'><div onClick={this.handleGotoError}>{gotoErrorIcon}</div></td>\n                </tr></table>\n                {tableContent}\n            </div>\n        );\n    }\n}\n\nexport default DatasetReason;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DatasetReason from './DatasetReason';\nimport '../../../css/DatasetCaveat.css';\n\n/**\n * Display a list of dataset errors detected by mimir\n */\nclass DatasetCaveat extends React.Component {\n    static propTypes = {\n        dataset: PropTypes.object.isRequired,\n        annotations: PropTypes.object.isRequired,\n        onGotoError: PropTypes.func.isRequired,\n        onRepairError: PropTypes.func.isRequired\n    }\n    /**\n     *\n     */\n    render() {\n        const { dataset, annotations, onGotoError, onRepairError } = this.props;\n        const errors = [];\n        const ackedErrors = [];\n        for (let i = 0; i < annotations.items.length; i++) {\n            const errs = annotations.items[i];\n            if(errs.confirmed){\n            \tackedErrors.push(\n\t        \t\t<DatasetReason\n\t            \t\treason={errs}\n\t        \t\t\tonGotoError={onGotoError(dataset)}\n\t        \t\t\tonRepairError={onRepairError(dataset)}\n\t            \t/>\n\t            )\n            }\n            else{\n\t            errors.push(\n\t        \t\t<DatasetReason\n\t            \t\treason={errs}\n\t        \t\t\tonGotoError={onGotoError(dataset)}\n\t        \t\t\tonRepairError={onRepairError(dataset)}\n\t            \t/>\n\t            )\n            }\n        }\n        return (\n            <div className='dataset-caveats'>\n                <h3 className='dataset-caveats'>\n                    {'Dataset Caveat List: '}\n                    <span className='error-highlight'>{dataset.name}</span>\n                </h3>\n                {errors}\n                {ackedErrors}\n            </div>\n        );\n    }\n}\n\nexport default DatasetCaveat;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n// import {  Icon } from 'semantic-ui-react';\nimport { fetchBranch } from '../../actions/project/Branch';\nimport { fetchProject } from '../../actions/project/Project';\nimport { fetchProjects } from '../../actions/project/ProjectListing';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { FetchError } from '../../components/Message';\nimport ResourcePage from '../../components/ResourcePage';\nimport { DatasetCaveatResource } from '../../util/App';\nimport { notebookPageUrl } from '../../util/App.js';\nimport { showSpreadsheet, repairDatasetCaveat } from '../../actions/project/Spreadsheet';\n\nimport DatasetCaveat from '../../components/project/DatasetCaveat';\nimport '../../../css/App.css';\nimport '../../../css/ProjectPage.css';\nimport '../../../css/BranchHistory.css';\n\n\n/**\n * The branch history page displays the list of workflow versions that form the\n * history of a project branch. For each version the action that created the\n * workflow is shown together with the time of creation. The user can select\n * any of the workflow versions and display them in a different page.\n *\n */\n\nclass DatasetCaveatsPage extends Component {\n    static propTypes = {\n        actionError: PropTypes.object,\n        branch: PropTypes.object,\n        fetchError: PropTypes.object,\n        isActive: PropTypes.bool.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        project: PropTypes.object,\n        projectList: PropTypes.array,\n        serviceApi: PropTypes.object,\n        userSettings: PropTypes.object.isRequired,\n        workflows: PropTypes.array,\n        dataset: PropTypes.object,\n        resource: PropTypes.object\n    }\n    /**\n     * Fetch project information when page is loaded.\n     */\n    constructor(props) {\n        super(props);\n        const { branch, dispatch, project, projectList, workflows } = this.props;\n        // Get project and branch identifier from the URL\n        const projectId = this.props.match.params.project_id;\n        const branchId = this.props.match.params.branch_id;\n        // Fetch any resources that are currently missing. It is assumed that\n        // the branch is set if the project is set.\n        if ((project == null) || (project.id !== projectId)) {\n            dispatch(fetchProject(projectId, branchId, fetchBranch));\n        } else if ((branch == null) || (branch.id !== branchId)) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        } else if (workflows == null) {\n            dispatch(fetchBranch(project, project.findBranch(branchId)));\n        }\n        // Get project listing if not set\n        if (projectList == null) {\n            dispatch(fetchProjects());\n        }\n    }\n    /**\n     * Ensure proper back and forward behaviour. It appears that when the user\n     * uses the back and previous button in the browser the current state and\n     * the previous state are the same but the branch identifier in the URL\n     * is different.\n     */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // Check if the location path has changed. The change may either be\n        // the result from a delete branch operation or the result of the user\n        // usingthe back and forward buttons in their browser.\n        if (prevProps.location.pathname !== this.props.location.pathname) {\n            const { dispatch, project, branch } = this.props;\n            const projectId = this.props.match.params.project_id;\n            const branchId = this.props.match.params.branch_id;\n            if ((project == null) || (project.id !== projectId)) {\n                dispatch(fetchProject(projectId, branchId, fetchBranch));\n            } else if ((branch == null) || (branch.id !== branchId)) {\n                dispatch(fetchBranch(project, project.findBranch(branchId)));\n            }\n        }\n    }\n    /**\n     * Dispatch action to load the workflow at the head of the current branch.\n     */\n    handleShowBranchHead = () => {\n        const { branch, history, project } = this.props;\n        history.push(notebookPageUrl(project.id, branch.id));\n    }\n\n    /**\n     * Switch to spreadsheet view and load the selected to the page\n     * that has the source of a specific error.\n     */\n    loadDatasetToError = (dataset) => (reason) => {\n    \tconst { dispatch, serviceApi } = this.props;\n    \tconst fetch_url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '?rowid='+reason.key[0]\n        dispatch(showSpreadsheet(dataset, fetch_url));\n    }\n    /**\n     * Repair a specific error.\n     */\n    loadDatasetRepair = (dataset) => (reason, repair, acknowledge) => {\n        const { dispatch, serviceApi } = this.props;\n        const url = serviceApi.serviceUrl + '/datasets/' + dataset.id + '/feedback'\n        dispatch(repairDatasetCaveat(dataset, url, reason, repair, acknowledge));\n    }\n    /**\n     * The branch history is rendered as a table with five columns: (1) the\n     * workflow version identifier, (2) an icon containing a link to display\n     * the workflow version in a web page, (3) an icon depicting the type of\n     * action that created the workflow version (i.e., CREATE BRANCH,\n     * INSERT/APPEND MODULE, DELETE MODULE, or REPLACE MODULE), (4) the short\n     * form of the command specification that was used to define the module\n     * that was affected by the action, and (5) the time of creation.\n     */\n    render() {\n        const {\n            actionError,\n            branch,\n            dispatch,\n            fetchError,\n            isActive,\n            isFetching,\n            project,\n            projectList,\n            serviceApi,\n            userSettings,\n            workflows,\n            resource\n        } = this.props;\n        // The main content of the page depends on the error and fetching state.\n        let content = null;\n        if (fetchError) {\n            // There was an error while fetching the project or the workflow\n            // listing.\n            content = (\n                <div className='page-content wide'>\n                    <FetchError error={fetchError} />\n                </div>\n            );\n        } else if ((project == null) || (branch == null) || (workflows == null) || (resource == null) || (isFetching)) {\n            // Show a spinner while the project information is being fetched.\n            // There is nothing else to show yet.\n            content = <ContentSpinner text='Loading Dataset Caveat List ...' />;\n        } else if (resource != null) {\n        \tconst dataset = resource.content.dataset;\n        \tconst annotations = resource.content.annotations;\n        \tconst pageContent = (\n                    <div className='dataset-caveat-view'>\n                        <DatasetCaveat\n                            dataset={dataset}\n                            annotations={annotations}\n                        \tonGotoError={this.loadDatasetToError}\n                        \tonRepairError={this.loadDatasetRepair}\n                        />\n                    </div>\n                )\n            \n            \n            // Show branch history table as the main content in a project\n            // resource page\n            content = (\n                <ResourcePage\n                    actionError={actionError}\n                    branch={branch}\n                    content={pageContent}\n                    contentCss='slim'\n                    dispatch={dispatch}\n                    isActive={isActive}\n                    project={project}\n                    projectList={projectList}\n                    resource={new DatasetCaveatResource()}\n                    serviceApi={serviceApi}\n                    userSettings={userSettings}\n                    onShowNotebook={this.handleShowBranchHead}\n                />\n            );\n        }\n        return content;\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        actionError: state.projectPage.actionError,\n        branch: state.projectPage.branch,\n        fetchError: state.datasetErrorsPage.fetchError,\n        isActive: state.projectPage.isActive,\n        isFetching: state.datasetErrorsPage.isFetching,\n        project: state.projectPage.project,\n        projectList: state.projectListing.projects,\n        serviceApi: state.serviceApi,\n        userSettings: state.app.userSettings,\n        workflows: state.branchPage.workflows,\n        dataset: state.datasetErrorsPage.dataset,\n        resource: state.datasetErrorsPage.resource,\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(DatasetCaveatsPage))\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Input, Modal } from 'semantic-ui-react'\nimport '../../../css/ResourceListing.css'\n\n/**\n * Modal to input (or modify) the name of a resource. The optional isValid\n * function is used to check whether the entered value is valid or not.\n */\nclass AuthModal extends React.Component {\n    static propTypes = {\n        isValid: PropTypes.func,\n        prompt: PropTypes.string,\n        open: PropTypes.bool.isRequired,\n        onCancel: PropTypes.func.isRequired,\n        onSubmit: PropTypes.func.isRequired,\n        title: PropTypes.string.isRequired,\n        value: PropTypes.string\n    }\n    /**\n     * Keep the new resource name in the local state.\n     */\n    constructor(props) {\n        super(props)\n        let { value } = props;\n        if (value == null) {\n            value = '';\n        }\n        this.state = {user: value};\n    }\n    /**\n     * Make sure the clear the internal state value on cancel.\n     */\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        this.setState({user: ''});\n        onCancel();\n    }\n    /**\n     * Handle changes in the input control.\n     */\n    handleChange = (event) => {\n        const val = event.target.value\n        this.setState({user: val})\n    }\n    /**\n     * Handle changes in the input control.\n     */\n    handleChangePasswd = (event) => {\n        const val = event.target.value\n        this.setState({passwd: val})\n    }\n    /**\n     * Handle ESC and RETURN to cancel or submit the name update request.\n     */\n    handleKeyDown = (event) => {\n        const { onCancel } = this.props;\n        if (event.keyCode === 13) {\n            this.handleSubmit();\n        } else if (event.keyCode === 27) {\n            onCancel();\n        }\n    }\n    /**\n     * Call the provided onSubmit with the entered name. Use the optional\n     * isValid function to check if the entered value is valid or not.\n     */\n    handleSubmit = (event) => {\n        const { isValid, onSubmit } = this.props;\n        const { user, passwd } = this.state\n        // Return without submit if invalid value is given.\n        if (isValid != null) {\n            if (!isValid(user)) {\n                return;\n            }\n        }\n        const usero = { authdata : window.btoa(user + ':' + passwd) }\n        onSubmit(usero);\n    }\n    /**\n     * Show simple modal with input text box.\n     */\n    render() {\n        const { isValid, prompt, open, title } = this.props;\n        const { user, passwd } = this.state;\n        let message = null;\n        if (prompt != null) {\n            message = (<p>{prompt}</p>);\n        }\n        let validName = true;\n        if (isValid != null) {\n            validName = isValid(user);\n        }\n        return (\n            <Modal open={open} size={'small'}>\n                <Modal.Header>{title}</Modal.Header>\n                <Modal.Content>\n                    <div className=\"resource-name\">\n                        {message}\n                        <Input\n                            autoFocus\n                            className=\"resource-name-input\"\n                            value={user}\n                            onChange={this.handleChange}\n                            onKeyDown={this.handleKeyDown}\n                        />\n                        <Input \n                            type='password'\n                            value={passwd}\n                        \tclassName=\"resource-name-input\"\n                        \tonChange={this.handleChangePasswd}\n                            onKeyDown={this.handleKeyDown}\n                        />\n                     </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button  negative onClick={this.handleCancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        positive\n                        icon='checkmark'\n                        labelPosition='right'\n                        content=\"Done\"\n                        disabled={!validName}\n                        onClick={this.handleSubmit}\n                    />\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\nexport default AuthModal;\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { fetchService, receiveAuth } from '../../actions/main/Service'\nimport { ConnectionInfo } from '../../components/Api';\nimport ContentSpinner from '../../components/ContentSpinner';\nimport { ErrorMessage } from '../../components/Message';\nimport MainPage from './MainPage'\nimport BranchPage from '../project/BranchPage';\nimport NotebookPage from '../project/NotebookPage'\nimport SpreadsheetPage from '../project/SpreadsheetPage'\nimport DatasetCaveatsPage from '../project/DatasetCaveatsPage'\nimport AuthModal from '../../components/modals/AuthModal';\nimport {\n    baseHref, branchHistoryHref, notebookHeadHref, notebookVersionHref,\n    isNotEmptyString, spreadsheetHref, errorListHref, spreadsheetVersionHref, errorListVersionHref\n} from '../../util/App';\n\nimport '../../../css/App.css'\nimport '../../../css/Connection.css'\n\nimport { MODAL_AUTH } from '../../actions/main/Service'\nimport { isCellOutputRequest } from '../../actions/project/Notebook';\n\nclass App extends Component {\n    static propTypes = {\n        error: PropTypes.string,\n        isFetching: PropTypes.bool.isRequired,\n        serviceUrl: PropTypes.string,\n        showModal: PropTypes.string,\n        refetch: PropTypes.bool\n    }\n    constructor(props) {\n        super(props);\n        this.state = {showModal: null}\n        const { dispatch } = this.props\n        dispatch(fetchService());\n    }\n    /**\n     * Show modal to login.\n     */\n    showAuthModal = () => (this.setState({showModal: MODAL_AUTH}));\n\n    /**\n     * Hide any open modal.\n     */\n    hideModal = () => (this.setState({showModal: null}));\n\n    /**\n     * Called by auth modal on submit.\n     */\n    authComplete = (user) => {\n    \tconst { dispatch } = this.props\n    \tlocalStorage.setItem('user', JSON.stringify(user));\n        dispatch(receiveAuth(user.authdata))\n    }\n    /**\n     * reload the service descriptor.\n     */\n    refetchService() {\n        const { dispatch } = this.props\n        dispatch(fetchService())\n    }\n    /**\n     * Create the routing elements in the DOM and display connection\n     * information.\n     */\n    render() {\n        // Set the window title\n        if (window.env.APP_TITLE) {\n            document.title = 'Vizier DB - ' + window.env.APP_TITLE\n        } else {\n            document.title = 'Vizier DB'\n        }\n        const { error, isFetching, links, name, showModal, refetch } = this.props;\n        let content = null;\n        let connection = null;\n        if (isFetching) {\n            // Show a content spinner if the API service descriptor is still\n            // being fetched.\n            content = <ContentSpinner />;\n        } else if (error) {\n            // Error message if the service descriptor could not be fetched\n            let title = 'Error while loading service descriptor'\n            if (this.props.serviceUrl) {\n                title = title + ' @ ' + this.props.serviceUrl\n            }\n            content = (\n                <div className='page-content slim'>\n                    <ErrorMessage\n                        title={title}\n                        message={error}\n                        />\n                </div>\n            );\n        } else if (refetch) {\n            // Refetch service descriptor after the user entered authentication\n            // information\n        \tthis.refetchService();\n        } else if ((name != null) && (links != null)) {\n            // If the service descriptor was loaded successfully display page\n            // content depending on the selected route\n            content = (\n                <MuiThemeProvider>\n                    <Router>\n                        <Switch>\n                            <Route exact path={baseHref} component={MainPage} />\n                            <Route path={spreadsheetHref} component={SpreadsheetPage} />\n                            <Route path={errorListHref} component={DatasetCaveatsPage} />\n                            <Route path={spreadsheetVersionHref} component={SpreadsheetPage} />\n                            <Route path={errorListVersionHref} component={DatasetCaveatsPage} />\n                            <Route path={branchHistoryHref} component={BranchPage} />\n                            <Route path={notebookHeadHref} component={NotebookPage} />\n                            <Route path={notebookVersionHref} component={NotebookPage} />\n                            <Route path={spreadsheetHref} component={SpreadsheetPage} />\n                            <Route path={errorListHref} component={DatasetCaveatsPage} />\n                        </Switch>\n                    </Router>\n                </MuiThemeProvider>\n            );\n            const cellOutput = isCellOutputRequest();\n            if(cellOutput){\n            \tconnection = null;\n            }\n            else{\n            \t// Show connection information at the bottom of the page\n                connection = (\n\t                <div className='connection-info'>\n\t                    <ConnectionInfo name={name} links={links}/>\n\t                </div>\n\t            );\n            }\n        }\n        // Add authentication modal\n        const modals = (\n                <div>\n                    <AuthModal\n                        isValid={isNotEmptyString}\n                        open={showModal === MODAL_AUTH}\n                        prompt='Please enter your login credentials'\n                        title='Login'\n                        onCancel={this.hideModal}\n                    \tonSubmit={this.authComplete}\n                        value=''\n                     />\n                </div>\n               );\n        return (\n            <div className=\"app\">\n                { content }\n                { connection }\n                { modals }\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.serviceApi.error,\n        isFetching: state.serviceApi.isFetching,\n        links: state.serviceApi.links,\n        name: state.serviceApi.name,\n        serviceUrl: state.serviceApi.serviceUrl,\n        showModal: state.serviceApi.showModal,\n        refetch: state.serviceApi.refetch\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","/**\n * Copyright (C) 2018 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter, routerMiddleware } from 'react-router-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport reducer from './core/reducers'\nimport App from './core/containers/main/App'\nimport 'semantic-ui-css/semantic.min.css';\nimport './css/index.css';\n\n// Most of the initialization code has been copied from the following article:\n// https://medium.com/@notrab/getting-started-with-create-react-app-redux-react-router-redux-thunk-d6a19259f71f\n\n// History syncs browserHistory with our store\nexport const history = createHistory();\n\nconst enhancers = []\nconst middleware = [\n    thunk,\n    routerMiddleware(history)\n]\n\nlet owaScript = null;\nif (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger())\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n    if (typeof devToolsExtension === 'function') {\n        enhancers.push(devToolsExtension())\n    }\n} else if(window.env.ANALYTICS_URL !== '') {\n    // Add Open Web Analytics if the app is running in production mode\n    const injectOWA = () => {\n    \tif (typeof window === 'undefined') {\n    \t\treturn;\n    \t}\n    \twindow._owa = document.createElement('script');\n        window._owa.type = 'text/javascript';\n        window._owa.async = true;\n        window._owa.src = window.env.ANALYTICS_URL + 'modules/base/js/owa.tracker-combined-min.js';\n        window._owa_s = document.getElementsByTagName('script')[0];\n        window._owa_s.parentNode.insertBefore(window._owa, window._owa_s);\n\n        window.owa_baseUrl = window.env.ANALYTICS_URL;\n    \twindow.owa_cmds = window.owa_cmds || [];\n    \tfunction owatag() {\n    \t\twindow.owa_cmds.push(arguments);\n    \t}\n    \t//owatag('js', new Date());\n    \towatag('setSiteId', window.env.ANALYTICS_SITE_ID);\n    \towatag('trackPageView');\n    \towatag('trackClicks');\n    };\n    owaScript = (<script>{injectOWA()}</script>);\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\n// Initialize the object (store) that holds the application state tree. The\n// required components of the serviceApi are set here. In particular, the\n// Url of the Vizier DB Web API. The API is expected to be contained in a file\n// env.js in the public directory (following the suggestion from\n// https://github.com/facebookincubator/create-react-app/issues/578)\nexport const store = createStore(\n    reducer,\n    {\n        serviceApi: {\n            isFetching: false,\n            serviceUrl: window.env.API_URL\n        }\n    },\n    composedEnhancers\n)\n\nrender(\n\t<Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App>\n                {owaScript}\n            </App>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n\n","/**\n * Copyright (C) 2021 New York University\n *                    University at Buffalo,\n *                    Illinois Institute of Technology.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport { PropTypes } from 'prop-types';\n\n\nclass JavascriptCellOutput extends React.Component {\n\n    static propTypes = {\n      html: PropTypes.string.isRequired,\n      code: PropTypes.string.isRequired,\n      deps: PropTypes.array.isRequired\n    }\n\n    componentDidMount() {\n      const { code, deps } = this.props\n\n      // Compute which dependencies we nee dto load\n      var neededDeps = []\n      for(var i in deps){\n        if(!document.getElementById(\"import-\"+deps[i])){\n          console.log(\"Need to download: \"+deps[i])\n          neededDeps.push(deps[i])\n        }\n      }\n      neededDeps = neededDeps.reverse()\n      var trigger = () => {\n        eval(code)\n      }\n      for(var i in neededDeps){\n        const dep = neededDeps[i]\n        const lastTrigger = trigger\n        trigger = () => {\n          if(!document.getElementById(\"import-\"+dep)){\n            const script = document.createElement('script')\n            script.src = dep\n            script.id = \"import-\"+dep\n            script.onload = lastTrigger\n            document.body.appendChild(script)\n          } else {\n            lastTrigger()\n          }\n        }\n      }\n      trigger()\n    }\n\n    render() {\n      const { html } = this.props\n      return <div className='output-content-html'\n                  ref={ el => (this.div = el) }\n                  dangerouslySetInnerHTML={{__html: html}}\n             />\n    }\n\n}\n\nexport default JavascriptCellOutput;\n"],"sourceRoot":""}