package info.vizierdb.api.websocket

/* this file is AUTOGENERATED by `scripts/build_routes` from `vizier/resources/vizier-routes.txt` */
/* DO NOT EDIT THIS FILE DIRECTLY */

import play.api.libs.json._
import info.vizierdb.types._
import info.vizierdb.api.handler._
import info.vizierdb.api._
import info.vizierdb.serialized
import org.mimirdb.api.request.DataContainer

trait GeneratedWebsocketAPI
{
  def workflowGet(projectId:Long, branchId:Long): serialized.WorkflowDescription
  def workflowCancel(projectId:Long, branchId:Long): serialized.WorkflowDescription
  def workflowQuery(projectId:Long, branchId:Long, query:String): DataContainer
  def workflowModules(projectId:Long, branchId:Long): Seq[serialized.ModuleDescription]
  def workflowAppend(projectId:Long, branchId:Long, packageId:String, commandId:String, arguments:serialized.PropertyList.T): serialized.WorkflowDescription
  def workflowGetModule(projectId:Long, branchId:Long, modulePosition:Int): serialized.ModuleDescription
  def workflowInsert(projectId:Long, branchId:Long, modulePosition:Int, packageId:String, commandId:String, arguments:serialized.PropertyList.T): serialized.WorkflowDescription
  def workflowDelete(projectId:Long, branchId:Long, modulePosition:Int): serialized.WorkflowDescription
  def workflowReplace(projectId:Long, branchId:Long, modulePosition:Int, packageId:String, commandId:String, arguments:serialized.PropertyList.T): serialized.WorkflowDescription
  def workflowThawUpto(projectId:Long, branchId:Long, modulePosition:Int): serialized.WorkflowDescription
  def workflowThawOne(projectId:Long, branchId:Long, modulePosition:Int): serialized.WorkflowDescription
  def workflowFreezeFrom(projectId:Long, branchId:Long, modulePosition:Int): serialized.WorkflowDescription
  def workflowFreezeOne(projectId:Long, branchId:Long, modulePosition:Int): serialized.WorkflowDescription
}
