package info.vizierdb.api.websocket

/* this file is AUTOGENERATED by `scripts/build_routes` from `vizier/resources/vizier-routes.txt` */
/* DO NOT EDIT THIS FILE DIRECTLY */

import play.api.libs.json._
import info.vizierdb.types._
import info.vizierdb.serialized
import org.mimirdb.api.request.DataContainer

trait BranchWatcherAPI
{
  def subscribe(projectId: Identifier, branchId: Identifier): serialized.WorkflowDescription
  def ping(): Long
  def workflowGet(): serialized.WorkflowDescription
  def workflowCancel(): serialized.WorkflowDescription
  def workflowQuery(query:String): DataContainer
  def workflowModules(): Seq[serialized.ModuleDescription]
  def workflowAppend(packageId:String, commandId:String, arguments:serialized.CommandArgumentList.T): serialized.WorkflowDescription
  def workflowGetModule(modulePosition:Int): serialized.ModuleDescription
  def workflowInsert(modulePosition:Int, packageId:String, commandId:String, arguments:serialized.CommandArgumentList.T): serialized.WorkflowDescription
  def workflowDelete(modulePosition:Int): serialized.WorkflowDescription
  def workflowReplace(modulePosition:Int, packageId:String, commandId:String, arguments:serialized.CommandArgumentList.T): serialized.WorkflowDescription
  def workflowThawUpto(modulePosition:Int): serialized.WorkflowDescription
  def workflowThawOne(modulePosition:Int): serialized.WorkflowDescription
  def workflowFreezeFrom(modulePosition:Int): serialized.WorkflowDescription
  def workflowFreezeOne(modulePosition:Int): serialized.WorkflowDescription
}
